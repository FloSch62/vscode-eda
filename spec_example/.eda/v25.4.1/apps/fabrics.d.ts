/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/fabrics.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from fabrics.eda.nokia.com */
        get: operations["getVersionFabricsEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from fabrics.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesFabricsEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for fabrics.eda.nokia.com v1alpha1 */
        get: operations["uiFabricsEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/fabrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list fabrics */
        get: operations["listFabricsEdaNokiaComV1alpha1Fabrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/isls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list isls */
        get: operations["listFabricsEdaNokiaComV1alpha1Isls"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list fabrics in namespace */
        get: operations["listFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        put?: never;
        /** @description create a Fabric */
        post: operations["createFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        /** Delete all instances of Fabric in the specified namespace. */
        delete: operations["deleteAllFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Fabric that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Fabric.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        /** @description replace a Fabric */
        put: operations["replaceFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        post?: never;
        /** @description delete the specified Fabric */
        delete: operations["deleteFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        options?: never;
        head?: never;
        /** @description patch a Fabric */
        patch: operations["patchFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/fabrics/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Fabric. */
        get: operations["getHistoryFabricsEdaNokiaComV1alpha1NamespaceFabrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list isls in namespace */
        get: operations["listFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        put?: never;
        /** @description create a ISL */
        post: operations["createFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        /** Delete all instances of ISL in the specified namespace. */
        delete: operations["deleteAllFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of ISL that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified ISL.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        /** @description replace a ISL */
        put: operations["replaceFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        post?: never;
        /** @description delete the specified ISL */
        delete: operations["deleteFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        options?: never;
        head?: never;
        /** @description patch a ISL */
        patch: operations["patchFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        trace?: never;
    };
    "/apps/fabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/isls/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced ISL. */
        get: operations["getHistoryFabricsEdaNokiaComV1alpha1NamespaceIsls"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description Fabric is the Schema for the fabrics API */
        "com.nokia.eda.fabrics.v1alpha1.Fabric": {
            /** @default fabrics.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Fabric */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric_metadata"];
            /**
             * Specification
             * @description The Fabric defines the desired state of a Fabric resource, enabling the automation and management of data center network fabrics. It includes configurations for IP address allocation pools, network topology roles (Leafs, Spines, SuperSpines, BorderLeafs), inter-switch links, and network protocols (underlay and overlay). The specification allows for detailed control over routing strategies, including ASN allocations for BGP-based protocols, and supports advanced features like BFD.
             */
            spec: {
                /** Borderleafs */
                borderLeafs?: {
                    /**
                     * Autonomous System Pool
                     * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.
                     */
                    asnPool?: string;
                    /**
                     * Borderleaf Node Selector
                     * Format: labelselector
                     * @description Label selector used to select Toponodes to configure as Borderleaf nodes.
                     */
                    borderLeafNodeSelector?: string[];
                    /**
                     * Route Leaking
                     * @description Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.
                     */
                    routeLeaking?: {
                        /**
                         * Export Policy
                         * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                         */
                        exportPolicy: string;
                        /**
                         * Import Policy
                         * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                         */
                        importPolicy: string;
                    };
                    /**
                     * IPv4 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV4?: string;
                    /**
                     * IPv6 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV6?: string;
                };
                /**
                 * Fabric Selector
                 * Format: labelselector
                 * @description Selects Fabric resources when connecting multiple Fabrics together. Only one Fabric needs the selector, typically the upper layer (e.g., Superspine) selecting the lower layer (e.g., a pod fabric of leafs and spines). This helps build complete Fabrics in smaller instances of the Fabric resource. This instance selecting other fabrics must also select the InterSwitchLinks connecting itself to the selected Fabrics.
                 */
                fabricSelector?: string[];
                /** InterSwitchLinks */
                interSwitchLinks?: {
                    /**
                     * Link Selector
                     * Format: labelselector
                     * @description Selects TopoLinks to include in this Fabric, creating an ISL resource if both Nodes in the TopoLink are part of this Fabric or a selected Fabric.
                     */
                    linkSelector?: string[];
                    /**
                     * IPv4 Pool - InterSwitch Link IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to DefaultInterfaces which are members of the ISLs.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack DefaultInterfaces.
                     */
                    poolIPV4?: string;
                    /**
                     * IPv6 Pool - InterSwitch Link IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to DefaultInterfaces which are members of the ISLs.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack DefaultInterfaces.
                     */
                    poolIPV6?: string;
                    /** QoS */
                    qos?: {
                        /** Egress Policy */
                        egressPolicy?: string;
                        /** Ingress Policy */
                        ingressPolicy?: string;
                    };
                    /**
                     * Unnumbered
                     * @description Enables unnumbered interfaces on the ISL; for IPv6, only link-local addresses are used unless a PoolIPV6 is also specified.  DefaultInterfaces in the ISL are added to the DefaultBGPPeer dynamic neighbor list when using an eBGP underlay.
                     * @enum {string}
                     */
                    unnumbered?: "IPV6";
                    /**
                     * VLAN ID - InterSwitch Link
                     * @description Configures the provided VLAN on the DefaultInterfaces which are members of the ISLs.
                     */
                    vlanID?: number;
                };
                /** Leafs */
                leafs?: {
                    /**
                     * Autonomous System Pool
                     * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.
                     */
                    asnPool?: string;
                    /**
                     * Leaf Node Selector
                     * Format: labelselector
                     * @description Label selector used to select Toponodes to configure as Leaf nodes.
                     */
                    leafNodeSelector?: string[];
                    /**
                     * Route Leaking
                     * @description Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.
                     */
                    routeLeaking?: {
                        /**
                         * Export Policy
                         * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                         */
                        exportPolicy: string;
                        /**
                         * Import Policy
                         * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                         */
                        importPolicy: string;
                    };
                    /**
                     * IPv4 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV4?: string;
                    /**
                     * IPv6 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV6?: string;
                };
                /**
                 * Overlay Protocol
                 * @description Set the overlay protocol used
                 */
                overlayProtocol?: {
                    /**
                     * Overlay Protocol BFD
                     * @description Enable BFD on overlay protocol
                     */
                    bfd?: {
                        /**
                         * Transmit Interval
                         * @description The minimum interval in microseconds between transmission of BFD control packets.
                         * @default 1000000
                         */
                        desiredMinTransmitInt: number;
                        /**
                         * Multiplier
                         * @description The number of packets that must be missed to declare this session as down.
                         * @default 3
                         */
                        detectionMultiplier: number;
                        /**
                         * Enabled
                         * @description Enable Biforward Detection.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Minimum Echo Receive Interval
                         * @description The minimum interval between echo packets the local node can receive in microseconds.
                         * @default 1000000
                         */
                        minEchoReceiveInterval: number;
                        /**
                         * Receive Interval
                         * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                         * @default 1000000
                         */
                        requiredMinReceive: number;
                    };
                    /**
                     * BGP
                     * @description Overlay specific BGP properties.
                     */
                    bgp?: {
                        /**
                         * Autonomous System
                         * Format: int32
                         * @description Autonomous System used for iBGP peering session, when protocol is set to IBGP providing an autonomousSystem is required.
                         */
                        autonomousSystem?: number;
                        /**
                         * Cluster ID
                         * @description Sets the cluster ID used by DefaultRouteReflectors, when protocol is set to IBGP providing a clusterID is required.
                         */
                        clusterID?: string;
                        /**
                         * Export Policy
                         * @description Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.
                         */
                        exportPolicy?: string[];
                        /**
                         * Import Policy
                         * @description Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.
                         */
                        importPolicy?: string[];
                        /**
                         * Keychain
                         * @description Keychain to be used for authentication when overlay protocol is IBGP, ignored otherwise
                         */
                        keychain?: string;
                        /**
                         * Route Reflector Client Node Selector
                         * Format: labelselector
                         * @description Label selector used to select Toponodes to configure as DefaultRouteReflectorClients, these are typically Leaf or Borderleaf nodes.  Used on conjunction with rrNodeSelector in order to configure the DefaultBGPPeers for both the DefaultRouteReflectors and DefaultRouteReflectorClients.
                         */
                        rrClientNodeSelector?: string[];
                        /**
                         * Route Reflector IP Addresses
                         * @description List of route reflector IP addresses not provisioned by this instance of a Fabric resource.  Used with rrClientNodeSelector to configure the DefaultBGPPeers on the selected nodes to peer the list of external route reflector IPs.
                         */
                        rrIPAddresses?: string[];
                        /**
                         * Route Reflector Node Selector
                         * Format: labelselector
                         * @description Label selector used to select Toponodes to configure as DefaultRouteReflectors, these are typically Spine, Superspine or Borderleaf nodes. Used on conjunction with rrClientNodeSelector in order to configure the DefaultBGPPeers for both the DefaultRouteReflectors and DefaultRouteReflectorClients.
                         */
                        rrNodeSelector?: string[];
                        /**
                         * Timers
                         * @description Timer configurations
                         */
                        timers?: {
                            /**
                             * Connect Retry
                             * @description The time interval in seconds between successive attempts to establish a session with a peer.
                             */
                            connectRetry?: number;
                            /**
                             * Hold Time
                             * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                             */
                            holdTime?: number;
                            /**
                             * Keep Alive
                             * @description The interval in seconds between successive keepalive messages sent to the peer.
                             */
                            keepAlive?: number;
                            /**
                             * Minimum Advertisement Interval
                             * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                             */
                            minimumAdvertisementInterval?: number;
                        };
                    };
                    /**
                     * Protocol
                     * @description List of routing protocols to used to advertise EVPN routes for overlay services.  When EBGP is used, the BGP properties configured under the spec.underlayProtocol will be used.
                     * @enum {string}
                     */
                    protocol: "IBGP" | "EBGP";
                };
                /**
                 * Route Leaking
                 * @description Route leaking controlled by routing policies in and out of the DefaulRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.
                 */
                routeLeaking?: {
                    /**
                     * Export Policy
                     * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                     */
                    exportPolicy: string;
                    /**
                     * Import Policy
                     * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                     */
                    importPolicy: string;
                };
                /** Spines */
                spines?: {
                    /**
                     * Autonomous System Pool
                     * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.
                     */
                    asnPool?: string;
                    /**
                     * Route Leaking
                     * @description Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.
                     */
                    routeLeaking?: {
                        /**
                         * Export Policy
                         * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                         */
                        exportPolicy: string;
                        /**
                         * Import Policy
                         * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                         */
                        importPolicy: string;
                    };
                    /**
                     * Spine Node Selector
                     * Format: labelselector
                     * @description Label selector used to select Toponodes to configure as Spine nodes.
                     */
                    spineNodeSelector?: string[];
                    /**
                     * IPv4 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV4?: string;
                    /**
                     * IPv6 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV6?: string;
                };
                /** Superspines */
                superSpines?: {
                    /**
                     * Autonomous System Pool
                     * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. This reference will take precedence over the spec.underlayProtocol.asnPool.
                     */
                    asnPool?: string;
                    /**
                     * Route Leaking
                     * @description Route leaking controlled by routing policies in and out of the DefaultRouters on each node.  If specifided under the Leafs, Spines, SuperSpines, or BorderLeafs those will take precedence.
                     */
                    routeLeaking?: {
                        /**
                         * Export Policy
                         * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                         */
                        exportPolicy: string;
                        /**
                         * Import Policy
                         * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                         */
                        importPolicy: string;
                    };
                    /**
                     * Superspine Node Selector
                     * Format: labelselector
                     * @description Label selector used to select Toponodes to configure as Superspine nodes.
                     */
                    superSpineNodeSelector?: string[];
                    /**
                     * IPv4 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV4.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV4?: string;
                    /**
                     * IPv6 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  This reference will take precedence over the spec.systemPoolIPV6.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                     */
                    systemPoolIPV6?: string;
                };
                /**
                 * IPv4 Pool - System IP
                 * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                 */
                systemPoolIPV4?: string;
                /**
                 * IPv6 Pool - System IP
                 * @description Reference to an IPAllocationPool used to dynamically allocate an IPv6 address to system/lo0 interfaces.  If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.  Both IPv4 and IPv6 pools can be configured simultaneously for dual-stack system/lo0 interfaces.
                 */
                systemPoolIPV6?: string;
                /**
                 * Underlay Protocol
                 * @description Set the underlay protocol used
                 */
                underlayProtocol?: {
                    /**
                     * Underlay Protocol BFD
                     * @description Enable BFD on underlay protocol
                     */
                    bfd?: {
                        /**
                         * Transmit Interval
                         * @description The minimum interval in microseconds between transmission of BFD control packets.
                         * @default 1000000
                         */
                        desiredMinTransmitInt: number;
                        /**
                         * Multiplier
                         * @description The number of packets that must be missed to declare this session as down.
                         * @default 3
                         */
                        detectionMultiplier: number;
                        /**
                         * Enabled
                         * @description Enable Biforward Detection.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Minimum Echo Receive Interval
                         * @description The minimum interval between echo packets the local node can receive in microseconds.
                         * @default 1000000
                         */
                        minEchoReceiveInterval: number;
                        /**
                         * Receive Interval
                         * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                         * @default 1000000
                         */
                        requiredMinReceive: number;
                    };
                    /**
                     * BGP
                     * @description Underlay specific BGP properties.
                     */
                    bgp: {
                        /**
                         * Autonomous System Pool
                         * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol. If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.
                         */
                        asnPool?: string;
                        /**
                         * Export Policy
                         * @description Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.
                         */
                        exportPolicy?: string[];
                        /**
                         * Import Policy
                         * @description Reference to a Policy, when left empty or not specified the Fabric will automatically generate a policy for the specified protocols.
                         */
                        importPolicy?: string[];
                        /**
                         * Keychain
                         * @description Keychain to be used for authentication
                         */
                        keychain?: string;
                        /**
                         * Timers
                         * @description Timer configurations
                         */
                        timers?: {
                            /**
                             * Connect Retry
                             * @description The time interval in seconds between successive attempts to establish a session with a peer.
                             */
                            connectRetry?: number;
                            /**
                             * Hold Time
                             * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                             */
                            holdTime?: number;
                            /**
                             * Keep Alive
                             * @description The interval in seconds between successive keepalive messages sent to the peer.
                             */
                            keepAlive?: number;
                            /**
                             * Minimum Advertisement Interval
                             * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                             */
                            minimumAdvertisementInterval?: number;
                        };
                    };
                    /**
                     * Protocol
                     * @description List of routing protocols to used between peers of an ISL.  Multiple protocols may be listed, if so multiple protocols will be used.
                     */
                    protocol: "EBGP"[];
                };
            };
            /**
             * Status
             * @description FabricStatus defines the observed state of Fabric
             */
            readonly status?: {
                /**
                 * Border Leaf Nodes
                 * @description List of border leaf nodes in the Fabric.
                 */
                borderLeafNodes?: {
                    /**
                     * Node
                     * @description Name of the TopoNode.
                     */
                    node?: string;
                    /**
                     * Operating System
                     * @description Operating system running on the node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operating System Version
                     * @description Operating system version running on the node.
                     */
                    operatingSystemVersion?: string;
                    /**
                     * Underlay Autonomous System
                     * Format: int32
                     * @description Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.
                     */
                    underlayAutonomousSystem?: number;
                }[];
                /**
                 * Health
                 * @description Indicates the health score of the Fabric.  The health score of the Fabric is determined by the aggregate health score of the resources emited by the Fabric such as ISL, DefaultRouteReflectors etc.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Leaf Nodes
                 * @description List of leaf nodes in the Fabric.
                 */
                leafNodes?: {
                    /**
                     * Node
                     * @description Name of the TopoNode.
                     */
                    node?: string;
                    /**
                     * Operating System
                     * @description Operating system running on the node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operating System Version
                     * @description Operating system version running on the node.
                     */
                    operatingSystemVersion?: string;
                    /**
                     * Underlay Autonomous System
                     * Format: int32
                     * @description Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.
                     */
                    underlayAutonomousSystem?: number;
                }[];
                /**
                 * Operational State
                 * @description Operational state of the Fabric.  The operational state of the fabric is determined by monitoring the operational state of the following resources (if applicable): DefaultRouters, ISLs.
                 */
                operationalState?: string;
                /**
                 * Spine Nodes
                 * @description List of spine nodes in the Fabric.
                 */
                spineNodes?: {
                    /**
                     * Node
                     * @description Name of the TopoNode.
                     */
                    node?: string;
                    /**
                     * Operating System
                     * @description Operating system running on the node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operating System Version
                     * @description Operating system version running on the node.
                     */
                    operatingSystemVersion?: string;
                    /**
                     * Underlay Autonomous System
                     * Format: int32
                     * @description Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.
                     */
                    underlayAutonomousSystem?: number;
                }[];
                /**
                 * Superspine Nodes
                 * @description List of super spine nodes in the Fabric.
                 */
                superSpineNodes?: {
                    /**
                     * Node
                     * @description Name of the TopoNode.
                     */
                    node?: string;
                    /**
                     * Operating System
                     * @description Operating system running on the node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operating System Version
                     * @description Operating system version running on the node.
                     */
                    operatingSystemVersion?: string;
                    /**
                     * Underlay Autonomous System
                     * Format: int32
                     * @description Underlay Autonomous System used for eBGP peering session, when protocol is set to eBGP this is required.
                     */
                    underlayAutonomousSystem?: number;
                }[];
            };
        };
        /** @description FabricList is a list of fabrics */
        "com.nokia.eda.fabrics.v1alpha1.FabricList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"][];
            kind: string;
        };
        "com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResources": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResourceEntry"][];
        "com.nokia.eda.fabrics.v1alpha1.Fabric_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description ISL is the Schema for the isls API */
        "com.nokia.eda.fabrics.v1alpha1.ISL": {
            /** @default fabrics.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default ISL */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL_metadata"];
            /**
             * Specification
             * @description The ISL enables the configuration and management of direct links between Nodes. This resource allows for specifying IPv4 and IPv6 allocation pools, enabling BFD for fast failure detection, and configuring VLAN IDs for the ISL. It also supports BGP peering between the endpoints, with options for setting autonomous systems, AFI/SAFI configurations, and import/export routing policies.
             */
            spec: {
                /**
                 * BFD
                 * @description Enable or disable BFD on the ISL. [default=false]
                 */
                bfd?: {
                    /**
                     * Transmit Interval
                     * @description The minimum interval in microseconds between transmission of BFD control packets.
                     * @default 1000000
                     */
                    desiredMinTransmitInt: number;
                    /**
                     * Multiplier
                     * @description The number of packets that must be missed to declare this session as down.
                     * @default 3
                     */
                    detectionMultiplier: number;
                    /**
                     * Enabled
                     * @description Enable Biforward Detection.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Minimum Echo Receive Interval
                     * @description The minimum interval between echo packets the local node can receive in microseconds.
                     * @default 1000000
                     */
                    minEchoReceiveInterval: number;
                    /**
                     * Receive Interval
                     * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                     * @default 1000000
                     */
                    requiredMinReceive: number;
                };
                /** BGP */
                bgp?: {
                    /**
                     * AFI SAFI
                     * @description Which AFI and SAFI to advertise on the BGP peering session. Options: ipv4unicast, ipv6unicast, l2vpnevpn
                     */
                    afiSAFI?: string[];
                    /**
                     * BGP Group
                     * @description Reference to a DefaultBgpGroup.
                     */
                    bgpGroup?: string;
                    /**
                     * Enabled
                     * @description Enable or disable BGP peering between the two endpoints of the ISL. [default=false]
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Export Policy
                     * @description Reference to a RoutingPolicy to use when evaluating route exports from the DefaultRouter.
                     */
                    exportPolicy?: string[];
                    /**
                     * Import Policy
                     * @description Reference to a RoutingPolicy to use when evaluating route imports into the DefaultRouter.
                     */
                    importPolicy?: string[];
                    /**
                     * Keychain
                     * @description Keychain to be used for authentication
                     */
                    keychain?: string;
                    /**
                     * Local Interface AS
                     * Format: int32
                     * @description The Autonomous System to configure on the Local Interface.
                     */
                    localInterfaceAS: number;
                    /**
                     * Remote Interface AS
                     * Format: int32
                     * @description The Autonomous System to configure on the Remote Interface.
                     */
                    remoteInterfaceAS: number;
                };
                /**
                 * Local Default Router
                 * @description Reference to the DefautlRouter associated with the local Interface in which the ISL will be provisioned.
                 */
                localDefaultRouter: string;
                /**
                 * Local Interface
                 * @description Reference to an Interface.
                 */
                localInterface: string;
                /**
                 * IPv4 Allocation Pool
                 * @description Reference to an IPv4 allocation pool to use for ISL subnet allocations.
                 */
                poolIPV4?: string;
                /**
                 * IPv6 Allocation Pool
                 * @description Reference to an IPv6 allocation pool to use for ISL subnet allocations.
                 */
                poolIPV6?: string;
                /** QoS */
                qos?: {
                    /** Egress Policy */
                    egressPolicy?: string;
                    /** Ingress Policy */
                    ingressPolicy?: string;
                };
                /**
                 * Remote Default Router
                 * @description Reference to the DefautlRouter associated with the remote Interface in which the ISL will be provisioned.
                 */
                remoteDefaultRouter: string;
                /**
                 * Remote Interface
                 * @description Reference to an Interface
                 */
                remoteInterface: string;
                /**
                 * Unnumbered
                 * @description Enables the use of unnumbered interfaces on the ISL. For IPv6, no IP address are configured on the sub-interface and only the link local address will be used. If any allocation pool is specified for IPv6 that will take precedence and IPs will be assigned to the interfaces.  When using eBGP for an underlay protocol, the DefaultInterfaces which are a part of the ISL will be added to the BGP dynamic neighbor list.
                 * @enum {string}
                 */
                unnumbered?: "IPV6";
                /**
                 * VLAN ID
                 * @description Single VLAN tag value between 1-4094.
                 */
                vlanID?: number;
            };
            /**
             * Status
             * @description ISLStatus defines the observed state of ISL
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the ISL
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed
                 */
                lastChange?: string;
                /**
                 * Local Interface
                 * @description Local Interface
                 */
                localInterface?: {
                    /**
                     * IPv4 Address
                     * @description Local Interface IPv4 address
                     */
                    IPv4Address?: string;
                    /**
                     * IPv6 Address
                     * @description Local Interface IPv4 address
                     */
                    IPv6Address?: string;
                    /**
                     * Default Interface
                     * @description Reference to the DefaulInterface assocaited with the local interface
                     */
                    defaultInterface?: string;
                    /**
                     * Node
                     * @description Reference to the TopoNode on which the local interface is configured
                     */
                    node?: string;
                };
                /**
                 * Operational State
                 * @description Operational state of the ISL
                 */
                operationalState?: string;
                /**
                 * Remote Interface
                 * @description Remote Interface
                 */
                remoteInterface?: {
                    /**
                     * IPv4 Address
                     * @description Remote Interface IPv4 address
                     */
                    IPv4Address?: string;
                    /**
                     * IPv6 Address
                     * @description Remote Interface IPv6 address
                     */
                    IPv6Address?: string;
                    /**
                     * Default Interface
                     * @description Reference to the DefaulInterface assocaited with the remote interface
                     */
                    defaultInterface?: string;
                    /**
                     * Node
                     * @description Reference to the TopoNode on which the remote interface is configured
                     */
                    node?: string;
                };
            };
        };
        /** @description ISLList is a list of isls */
        "com.nokia.eda.fabrics.v1alpha1.ISLList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"][];
            kind: string;
        };
        "com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResources": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResourceEntry"][];
        "com.nokia.eda.fabrics.v1alpha1.ISL_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionFabricsEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesFabricsEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiFabricsEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listFabricsEdaNokiaComV1alpha1Fabrics: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.FabricList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listFabricsEdaNokiaComV1alpha1Isls: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISLList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.FabricList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.FabricList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Fabric to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Fabric to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.Fabric"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryFabricsEdaNokiaComV1alpha1NamespaceFabrics: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Fabric to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISLList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISLList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the ISL to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the ISL to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.fabrics.v1alpha1.ISL"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryFabricsEdaNokiaComV1alpha1NamespaceIsls: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the ISL to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
