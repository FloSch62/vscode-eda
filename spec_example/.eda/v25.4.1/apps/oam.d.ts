/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/oam.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from oam.eda.nokia.com */
        get: operations["getVersionOamEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from oam.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesOamEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for oam.eda.nokia.com v1alpha1 */
        get: operations["uiOamEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/mirrors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list mirrors */
        get: operations["listOamEdaNokiaComV1alpha1Mirrors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/mirrors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list mirrors in namespace */
        get: operations["listOamEdaNokiaComV1alpha1NamespaceMirrors"];
        put?: never;
        /** @description create a Mirror */
        post: operations["createOamEdaNokiaComV1alpha1NamespaceMirrors"];
        /** Delete all instances of Mirror in the specified namespace. */
        delete: operations["deleteAllOamEdaNokiaComV1alpha1NamespaceMirrors"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/mirrors/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Mirror that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedOamEdaNokiaComV1alpha1NamespaceMirrors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/mirrors/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Mirror.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readOamEdaNokiaComV1alpha1NamespaceMirrors"];
        /** @description replace a Mirror */
        put: operations["replaceOamEdaNokiaComV1alpha1NamespaceMirrors"];
        post?: never;
        /** @description delete the specified Mirror */
        delete: operations["deleteOamEdaNokiaComV1alpha1NamespaceMirrors"];
        options?: never;
        head?: never;
        /** @description patch a Mirror */
        patch: operations["patchOamEdaNokiaComV1alpha1NamespaceMirrors"];
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/mirrors/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Mirror. */
        get: operations["getHistoryOamEdaNokiaComV1alpha1NamespaceMirrors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/pings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list pings in namespace */
        get: operations["listOamEdaNokiaComV1alpha1NamespacePings"];
        put?: never;
        /** @description create a Ping */
        post: operations["createOamEdaNokiaComV1alpha1NamespacePings"];
        /** Delete all instances of Ping in the specified namespace. */
        delete: operations["deleteAllOamEdaNokiaComV1alpha1NamespacePings"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/pings/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Ping that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedOamEdaNokiaComV1alpha1NamespacePings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/pings/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Ping.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readOamEdaNokiaComV1alpha1NamespacePings"];
        /** @description replace a Ping */
        put: operations["replaceOamEdaNokiaComV1alpha1NamespacePings"];
        post?: never;
        /** @description delete the specified Ping */
        delete: operations["deleteOamEdaNokiaComV1alpha1NamespacePings"];
        options?: never;
        head?: never;
        /** @description patch a Ping */
        patch: operations["patchOamEdaNokiaComV1alpha1NamespacePings"];
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/pings/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Ping. */
        get: operations["getHistoryOamEdaNokiaComV1alpha1NamespacePings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/thresholds": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list thresholds in namespace */
        get: operations["listOamEdaNokiaComV1alpha1NamespaceThresholds"];
        put?: never;
        /** @description create a Threshold */
        post: operations["createOamEdaNokiaComV1alpha1NamespaceThresholds"];
        /** Delete all instances of Threshold in the specified namespace. */
        delete: operations["deleteAllOamEdaNokiaComV1alpha1NamespaceThresholds"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/thresholds/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Threshold that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedOamEdaNokiaComV1alpha1NamespaceThresholds"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/thresholds/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Threshold.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readOamEdaNokiaComV1alpha1NamespaceThresholds"];
        /** @description replace a Threshold */
        put: operations["replaceOamEdaNokiaComV1alpha1NamespaceThresholds"];
        post?: never;
        /** @description delete the specified Threshold */
        delete: operations["deleteOamEdaNokiaComV1alpha1NamespaceThresholds"];
        options?: never;
        head?: never;
        /** @description patch a Threshold */
        patch: operations["patchOamEdaNokiaComV1alpha1NamespaceThresholds"];
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/namespaces/{namespace}/thresholds/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Threshold. */
        get: operations["getHistoryOamEdaNokiaComV1alpha1NamespaceThresholds"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/pings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list pings */
        get: operations["listOamEdaNokiaComV1alpha1Pings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/oam.eda.nokia.com/v1alpha1/thresholds": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list thresholds */
        get: operations["listOamEdaNokiaComV1alpha1Thresholds"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description Mirror is the Schema for the mirrors API */
        "com.nokia.eda.oam.v1alpha1.Mirror": {
            /** @default oam.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Mirror */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror_metadata"];
            /**
             * Specification
             * @description Mirror allows for the configuration of mirroring sources, including interfaces, subinterfaces, and filters, as well as the destination for the mirrored traffic, which can be either local or remote.
             */
            spec: {
                /**
                 * Local Destination
                 * @description Local destination for the mirror, there can only be either a remote destination or local destination provisioned for a Mirror.
                 */
                localDestination?: {
                    /**
                     * Local Interface
                     * @description Reference to an Interface resource to send the mirrored traffic to.  This must be on the same Node as the source.
                     */
                    interface?: string;
                    /**
                     * VLAN ID
                     * @description Single value between 0-4094 support, or the special keyword untagged.
                     */
                    vlanID?: string;
                };
                /**
                 * Remote Destination
                 * @description Remote destination for the mirror, there can only be either a remote destination or local destination provisioned for a Mirror.
                 */
                remoteDestination?: {
                    /**
                     * Default Router
                     * @description Specifies the DefaultRouter to reach the remote destination of the mirror, a Router and DefaultRouter reference cannot be set at the same time.
                     */
                    defaultRouter?: string;
                    /**
                     * Destination IP
                     * Format: ip
                     * @description Remote destination IP address.  When a remote destination is used for the mirror, the destinationIP is mandatory.
                     */
                    destinationIP?: string;
                    /**
                     * Encapsulation
                     * @enum {string}
                     */
                    encapsulation?: "L2OGRE" | "L3OGRE";
                    /**
                     * Router
                     * @description Specifies the Router to reach the remote destination of the mirror, a Router and DefaultRouter reference cannot be set at the same time.
                     */
                    router?: string;
                    /**
                     * Source IP
                     * Format: ip
                     * @description Source IP to use when sending a mirror to a remote destination.  When a remote destination us used for the mirror, the sourceIP is mandatory.
                     */
                    sourceIP?: string;
                };
                /**
                 * Sources
                 * @description Mirror sources.
                 */
                sources: {
                    /**
                     * Direction
                     * @description The direction of the traffic being mirrored.
                     * @enum {string}
                     */
                    direction: "Ingress" | "Egress" | "IngressEgress";
                    /** Filters */
                    filters?: {
                        /**
                         * Filter
                         * @description Emittes an MirrorFilter and uses the filter as a source for the Mirror.
                         */
                        filter?: {
                            /**
                             * Entries
                             * @description Specifies the list of filter entries, in order.
                             */
                            entries: {
                                /** IP Entry */
                                ipEntry?: {
                                    /**
                                     * Action
                                     * @description An action to take, either 'Accept','Drop', or 'RateLimit'.
                                     * @enum {string}
                                     */
                                    action?: "Drop" | "Accept" | "RateLimit";
                                    /**
                                     * Destination Port Name
                                     * @description Destination port to match by name.
                                     * @enum {string}
                                     */
                                    destinationPortName?: "ACAP" | "AFP-TCP" | "ARNS" | "ASF-RMCP" | "ASHARE" | "ATALK-RM" | "AURP" | "AUTH" | "BFD" | "BFD-ECHO" | "BFTP" | "BGMP" | "BGP" | "BOOTPC" | "BOOTPS" | "CCSO-NS" | "CHARGEN" | "CISCO-TDP" | "CITADEL" | "CLEARCASE" | "COMMERCE" | "COURIER" | "DAYTIME" | "DHCP-FAILOVER" | "DHCPV6-CLIENT" | "DHCPV6-SERVER" | "DICOM" | "DISCARD" | "DNSIX" | "DOMAIN" | "DSP" | "ECHO" | "EPP" | "ESRO" | "EXEC" | "FINGER" | "FTP" | "FTP-DATA" | "FTPS" | "FTPS-DATA" | "GODI" | "GOPHER" | "GTP-C" | "GTP-PRIME" | "GTP-U" | "HA-CLUSTER" | "HOSTNAME" | "HP-ALARM-MGR" | "HTTP" | "HTTP-ALT" | "HTTP-MGMT" | "HTTP-RPC" | "HTTPS" | "IEEE-MMS-SSL" | "IMAP" | "IMAP3" | "IMAPS" | "IPP" | "IPSEC" | "IPX" | "IRC" | "IRIS-BEEP" | "ISAKMP" | "ISAKMP-NAT" | "ISCSI" | "ISO-TSAP" | "KERBEROS" | "KERBEROS-ADM" | "KLOGIN" | "KPASSWD" | "KSHELL" | "L2TP" | "LDAP" | "LDAPS" | "LDP" | "LMP" | "LOGIN" | "LPD" | "LSP-PING" | "MAC-SERVER-ADM" | "MATIP-A" | "MATIP-B" | "MICRO-BFD" | "MICROSOFT-DS" | "MOBILE-IP" | "MONITOR" | "MPP" | "MS-EXCHANGE" | "MSDP" | "MSP" | "MSSQL-M" | "MSSQL-S" | "MULTIHOP-BFD" | "NAS" | "NCP" | "NETBIOS-DATA" | "NETBIOS-NS" | "NETBIOS-SS" | "NETNEWS" | "NETRJS-1" | "NETRJS-2" | "NETRJS-3" | "NETRJS-4" | "NETWALL" | "NEW-RWHO" | "NFS" | "NNTP" | "NNTPS" | "NTP" | "ODMR" | "OLSR" | "OPENVPN" | "PIM-AUTO-RP" | "PKIX-TIMESTAMP" | "POP2" | "POP3" | "POP3S" | "PPTP" | "PRINT-SRV" | "PTP-EVENT" | "PTP-GENERAL" | "QMTP" | "QOTD" | "RADIUS" | "RADIUS-ACCT" | "REMOTE-MAIL" | "REMOTEFS" | "REMOTECMD" | "RIP" | "RJE" | "RLP" | "RLZDB" | "RMC" | "RMONITOR" | "RPC2PORTMAP" | "RSYNC" | "RTELNET" | "RTSP" | "SGMP" | "SILC" | "SMUX" | "SNA-GW" | "SNMP" | "SNMP-TRAP" | "SNPP" | "SMTP" | "SQL-SVCS" | "SQL" | "SSH" | "SUBMISSION" | "SUNRPC" | "SVCLOC" | "SYSLOG" | "SYSTAT" | "TACACS" | "TALK" | "TCPMUX" | "TCPNETHASPSRV" | "TFTP" | "TIME" | "TIMED" | "UPS" | "XDMCP" | "XNS-CH" | "XNS-MAIL" | "XNS-TIME" | "Z3950";
                                    /**
                                     * Destination Port Number
                                     * @description Destination port to match by numerical value.
                                     */
                                    destinationPortNumber?: number;
                                    /**
                                     * Destination Port Operator
                                     * @description Operator to use when matching destinationPort, either Equals, GreaterOrEquals, or LessOrEquals.
                                     * @enum {string}
                                     */
                                    destinationPortOperator?: "Equals" | "GreaterOrEquals" | "LessOrEquals";
                                    /**
                                     * Destination Port Range
                                     * @description Range of destination ports to match, in the format n-m, e.g. 100-200,  The start and end of the range must be port numbers.
                                     */
                                    destinationPortRange?: string;
                                    /**
                                     * Destination Prefix
                                     * Format: ip
                                     * @description Destination prefix to match.
                                     */
                                    destinationPrefix?: string;
                                    /**
                                     * First Fragment
                                     * @description Match the first fragment only.
                                     */
                                    firstFragment?: boolean;
                                    /**
                                     * Fragment
                                     * @description Match any fragment.
                                     */
                                    fragment?: boolean;
                                    /**
                                     * ICMP Code
                                     * @description Match a specific ICMP code, as a number between 0-255, e.g. 0.
                                     */
                                    icmpCode?: number[];
                                    /**
                                     * ICMP Type Name
                                     * @description Match a specific ICMP type by name, e.g. dest-unreachable.
                                     * @enum {string}
                                     */
                                    icmpTypeName?: "DestUnreachable" | "Echo" | "EchoReply" | "EchoRequest" | "McastRtrAdv" | "McastRtrSolicit" | "McastRtrTerm" | "MldDone" | "MldQuery" | "MldReport" | "MldV2" | "NeighborAdvertise" | "NeighborSolicit" | "NodeInfoQuery" | "NodeInfoResponse" | "PacketTooBig" | "ParamProblem" | "Redirect" | "RouterAdvertise" | "RouterRenumber" | "RouterSolicit" | "SourceQuench" | "TimeExceeded" | "Timestamp" | "TimestampReply";
                                    /**
                                     * ICMP Type Number
                                     * @description Match a specific ICMP type by number.
                                     */
                                    icmpTypeNumber?: number;
                                    /**
                                     * Protocol Name
                                     * @description Match a specific IP protocol name (specified in the type field of the IP header).
                                     * @enum {string}
                                     */
                                    protocolName?: "AH" | "EGP" | "EIGRP" | "ESP" | "GGP" | "GRE" | "ICMP" | "ICMP6" | "IDRP" | "IGMP" | "IGP" | "IPV4" | "IPV6" | "IPV6-DEST-OPTS" | "IPV6-HOP" | "L2TP" | "MPLS-IN-IP" | "NO-NEXT-HDR" | "OSPF" | "PIM" | "ROHC" | "RSVP" | "SCTP" | "ST" | "TCP" | "UDP" | "VRRP";
                                    /**
                                     * Protocol Number
                                     * @description Match a specific IP protocol number (specified in the type field of the IP header).
                                     */
                                    protocolNumber?: number;
                                    /**
                                     * Rate Limit
                                     * @description Rate limit to apply when the action is 'RateLimit'.
                                     */
                                    rateLimit?: {
                                        /**
                                         * Burst Size
                                         * Format: int32
                                         * @description The maximum burst size in bytes.
                                         */
                                        burstSize?: number;
                                        /**
                                         * Entry Specific Policer
                                         * @description Controls policer instantiation: false for shared instance, true for per-entry instances
                                         * @default false
                                         */
                                        entrySpecificPolicer: boolean;
                                        /**
                                         * Peak Rate
                                         * Format: int32
                                         * @description The peak rate in kilobytes per second.
                                         */
                                        peakRate?: number;
                                        /**
                                         * Scope
                                         * @description Determines how the policer is applied across subinterfaces. Global applies the policer across all subinterfaces, while Subinterface applies it individually to each subinterface.
                                         * @default Global
                                         * @enum {string}
                                         */
                                        scope: "Global" | "Subinterface";
                                    };
                                    /**
                                     * Source Port Name
                                     * @description Source port to match by name.
                                     * @enum {string}
                                     */
                                    sourcePortName?: "ACAP" | "AFP-TCP" | "ARNS" | "ASF-RMCP" | "ASHARE" | "ATALK-RM" | "AURP" | "AUTH" | "BFD" | "BFD-ECHO" | "BFTP" | "BGMP" | "BGP" | "BOOTPC" | "BOOTPS" | "CCSO-NS" | "CHARGEN" | "CISCO-TDP" | "CITADEL" | "CLEARCASE" | "COMMERCE" | "COURIER" | "DAYTIME" | "DHCP-FAILOVER" | "DHCPV6-CLIENT" | "DHCPV6-SERVER" | "DICOM" | "DISCARD" | "DNSIX" | "DOMAIN" | "DSP" | "ECHO" | "EPP" | "ESRO" | "EXEC" | "FINGER" | "FTP" | "FTP-DATA" | "FTPS" | "FTPS-DATA" | "GODI" | "GOPHER" | "GTP-C" | "GTP-PRIME" | "GTP-U" | "HA-CLUSTER" | "HOSTNAME" | "HP-ALARM-MGR" | "HTTP" | "HTTP-ALT" | "HTTP-MGMT" | "HTTP-RPC" | "HTTPS" | "IEEE-MMS-SSL" | "IMAP" | "IMAP3" | "IMAPS" | "IPP" | "IPSEC" | "IPX" | "IRC" | "IRIS-BEEP" | "ISAKMP" | "ISAKMP-NAT" | "ISCSI" | "ISO-TSAP" | "KERBEROS" | "KERBEROS-ADM" | "KLOGIN" | "KPASSWD" | "KSHELL" | "L2TP" | "LDAP" | "LDAPS" | "LDP" | "LMP" | "LOGIN" | "LPD" | "LSP-PING" | "MAC-SERVER-ADM" | "MATIP-A" | "MATIP-B" | "MICRO-BFD" | "MICROSOFT-DS" | "MOBILE-IP" | "MONITOR" | "MPP" | "MS-EXCHANGE" | "MSDP" | "MSP" | "MSSQL-M" | "MSSQL-S" | "MULTIHOP-BFD" | "NAS" | "NCP" | "NETBIOS-DATA" | "NETBIOS-NS" | "NETBIOS-SS" | "NETNEWS" | "NETRJS-1" | "NETRJS-2" | "NETRJS-3" | "NETRJS-4" | "NETWALL" | "NEW-RWHO" | "NFS" | "NNTP" | "NNTPS" | "NTP" | "ODMR" | "OLSR" | "OPENVPN" | "PIM-AUTO-RP" | "PKIX-TIMESTAMP" | "POP2" | "POP3" | "POP3S" | "PPTP" | "PRINT-SRV" | "PTP-EVENT" | "PTP-GENERAL" | "QMTP" | "QOTD" | "RADIUS" | "RADIUS-ACCT" | "REMOTE-MAIL" | "REMOTEFS" | "REMOTECMD" | "RIP" | "RJE" | "RLP" | "RLZDB" | "RMC" | "RMONITOR" | "RPC2PORTMAP" | "RSYNC" | "RTELNET" | "RTSP" | "SGMP" | "SILC" | "SMUX" | "SNA-GW" | "SNMP" | "SNMP-TRAP" | "SNPP" | "SMTP" | "SQL-SVCS" | "SQL" | "SSH" | "SUBMISSION" | "SUNRPC" | "SVCLOC" | "SYSLOG" | "SYSTAT" | "TACACS" | "TALK" | "TCPMUX" | "TCPNETHASPSRV" | "TFTP" | "TIME" | "TIMED" | "UPS" | "XDMCP" | "XNS-CH" | "XNS-MAIL" | "XNS-TIME" | "Z3950";
                                    /**
                                     * Source Port Number
                                     * @description Source port to match by numerical value.
                                     */
                                    sourcePortNumber?: number;
                                    /**
                                     * Source Port Operator
                                     * @description Operator to use when matching sourcePort, either Equals, GreaterOrEquals, or LessOrEquals.
                                     * @enum {string}
                                     */
                                    sourcePortOperator?: "Equals" | "GreaterOrEquals" | "LessOrEquals";
                                    /**
                                     * Source Port Range
                                     * @description Range of source ports to match, in the format n-m, e.g. 100-200.  The start and end of the range must be port numbers.
                                     */
                                    sourcePortRange?: string;
                                    /**
                                     * Source Prefix
                                     * Format: ip
                                     * @description Source prefix to match.
                                     */
                                    sourcePrefix?: string;
                                    /**
                                     * TCP Flags
                                     * @description Match TCP flags, usable with !, &, | and the flags RST, SYN, and ACK.
                                     */
                                    tcpFlags?: string;
                                };
                                /**
                                 * Type
                                 * @default Auto
                                 * @enum {string}
                                 */
                                type: "IPV4" | "IPV6" | "Auto";
                            }[];
                        };
                        /**
                         * Subinterfaces
                         * @description Subinterfaces on which to deploy the IPFilter to use as a source for the Mirror.
                         */
                        subinterfaces?: {
                            /**
                             * Bridge Interfaces
                             * @description List of BridgeInterfaces, all traffic from all BridgeInterfaces in the list will be used as sources to be mirrored. A combination of VLANs, BridgeInterfaces and subinterfaces can be configured as sources together.
                             */
                            bridgeInterfaces?: string[];
                            /**
                             * Subinterfaces
                             * @description List of Interfaces and subinterface indices
                             */
                            subinterfaces?: {
                                /**
                                 * Subinterface Index
                                 * @description Index of the sub-interface. This is ignored on a node running SROS.
                                 */
                                index?: number;
                                /**
                                 * Interface Name
                                 * @description Reference to an Interface resource, the combination of the Interface and the specified subinterface index will build the subinterface to be used as a source of traffic to be mirrored. A combination of VLANs, BridgeInterfaces and subinterfaces can be configured as sources together.
                                 */
                                interfaceName: string;
                                /**
                                 * VLAN
                                 * @description Reference to the VLAN resource under which the sub-interface is configured. This is mandatory when the sub-interface is on a node running SROS and ignored for all other node operating systems.
                                 */
                                vlan?: string;
                            }[];
                            /**
                             * VLAN
                             * @description List of VLAN resources, all subinterfaces attached to the VLAN will be used as sources to be mirrored.  A combination of VLANs, BridgeInterfaces and subinterfaces can be configured as sources together.
                             */
                            vlans?: string[];
                        };
                    }[];
                    /**
                     * Interfaces
                     * @description Reference to an Interface resource to be mirrored.  Traffic from the entire Interface will be mirrored for any selected Interfaces.
                     */
                    interfaces?: {
                        /**
                         * Interface Selector
                         * Format: labelselector
                         * @description Select Interfaces using a label selector to be mirrored.  Traffic from the entire Interface will be mirrored for any selected Interfaces.  If both a label selector is used and a list of Interfaces is provided, a combination of all selected and provided interfaces will be mirrored.
                         */
                        interfaceSelector?: string[];
                        /**
                         * Interfaces
                         * @description List of Interfaces to be mirrored.  Traffic from the entire Interface will be mirrored for any selected Interfaces.  If both a label selector is used and a list of Interfaces is provided, a combination of all selected and provided interfaces will be mirrored.
                         */
                        interfaces?: string[];
                    };
                    /** Subinterfaces */
                    subinterfaces?: {
                        /**
                         * Bridge Interfaces
                         * @description List of BridgeInterfaces, all traffic from all BridgeInterfaces in the list will be used as sources to be mirrored. A combination of VLANs, BridgeInterfaces and subinterfaces can be configured as sources together.
                         */
                        bridgeInterfaces?: string[];
                        /**
                         * Subinterfaces
                         * @description List of Interfaces and subinterface indices
                         */
                        subinterfaces?: {
                            /**
                             * Subinterface Index
                             * @description Index of the sub-interface. This is ignored on a node running SROS.
                             */
                            index?: number;
                            /**
                             * Interface Name
                             * @description Reference to an Interface resource, the combination of the Interface and the specified subinterface index will build the subinterface to be used as a source of traffic to be mirrored. A combination of VLANs, BridgeInterfaces and subinterfaces can be configured as sources together.
                             */
                            interfaceName: string;
                            /**
                             * VLAN
                             * @description Reference to the VLAN resource under which the sub-interface is configured. This is mandatory when the sub-interface is on a node running SROS and ignored for all other node operating systems.
                             */
                            vlan?: string;
                        }[];
                        /**
                         * VLAN
                         * @description List of VLAN resources, all subinterfaces attached to the VLAN will be used as sources to be mirrored.  A combination of VLANs, BridgeInterfaces and subinterfaces can be configured as sources together.
                         */
                        vlans?: string[];
                    };
                };
            };
            /**
             * Status
             * @description MirrorStatus defines the observed state of Mirror
             */
            readonly status?: {
                /**
                 * Last Change
                 * Format: date
                 * @description Indicates when this SubInterface last changed state.
                 */
                lastChange?: string;
                /**
                 * MirrorID
                 * @description Mirror Identifier used as the name of the mirror.
                 */
                mirrorID?: string;
                /**
                 * Number of Active Interfaces
                 * @description Total number of active Interfaces used as sources of the mirror.
                 */
                numActiveInterfaces?: number;
                /**
                 * Number of Active Subinterfaces
                 * @description Total number of active subinterfaces used as sources of the mirror.
                 */
                numActiveSubinterfaces?: number;
                /**
                 * Number of Active V4 Filter Subinterfaces
                 * @description Total number of active subinterfaces used as sources of the mirror derived from IPV4Filter associations.
                 */
                numActiveV4FilterSubinterfaces?: number;
                /**
                 * Number of Active V6 Filter Subinterfaces
                 * @description Total number of active subinterfaces used as sources of the mirror derived from IPV6Filter associations.
                 */
                numActiveV6FilterSubinterfaces?: number;
                /**
                 * Number of Active VLAN Subinterfaces
                 * @description Total number of active subinterfaces used as sources of the mirror derived from VLAN resource references.
                 */
                numActiveVLANSubinterfaces?: number;
                /**
                 * Number of Active Bridge Interfaces
                 * @description Total number of active subinterfaces used as sources of the mirror derived from BridgeInterface resource references.
                 */
                numberActiveBridgeInterfaces?: number;
                /**
                 * Operational State
                 * @description Indicates the current operational state of the Mirror instance.
                 */
                operationalState?: string;
                /**
                 * Subinterfaces
                 * @description List of members in this Interface.
                 */
                subinterfaces?: {
                    /**
                     * Configured Source
                     * @description Indicates what is driving the particular subinterface to be selected as a mirror source.
                     * @enum {string}
                     */
                    configuredSource: "VLAN" | "BridgeInterface" | "Subinterface" | "Interface" | "FilterV4" | "FilterV6";
                    /**
                     * Interface
                     * @description Node specific interface name.
                     */
                    interface: string;
                    /**
                     * Node
                     * @description Reference to Node object.
                     */
                    node: string;
                    /**
                     * Operating System
                     * @description Operating System of the Node.
                     */
                    operatingSystem: string;
                    /**
                     * Subinterface Index
                     * @description Index allocated to the subinterface which is being mirrored. If an interface is used as a source, this will not be set.
                     */
                    subinterfaceIndex?: number;
                    /**
                     * VLAN ID
                     * @description vlan assigned to this subinterface.
                     */
                    vlanID?: string;
                }[];
            };
        };
        /** @description MirrorList is a list of mirrors */
        "com.nokia.eda.oam.v1alpha1.MirrorList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"][];
            kind: string;
        };
        "com.nokia.eda.oam.v1alpha1.Mirror_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.oam.v1alpha1.Mirror_DeletedResources": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror_DeletedResourceEntry"][];
        "com.nokia.eda.oam.v1alpha1.Mirror_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description Ping is the Schema for the pings API */
        "com.nokia.eda.oam.v1alpha1.Ping": {
            /** @default oam.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Ping */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping_metadata"];
            /**
             * Specification
             * @description PingSpec defines the desired state of Ping
             */
            spec: {
                /** address */
                address?: string;
                /** NetworkInstance */
                networkInstance?: string;
                /** node */
                node?: string;
                /**
                 * pingtype
                 * @enum {string}
                 */
                pingType: "isl" | "node" | "system";
                /** Pods */
                pods?: string[];
                /** roles */
                roles?: string[];
            };
            /**
             * Status
             * @description PingStatus defines the observed state of Ping
             */
            readonly status?: {
                /**
                 * ID
                 * @description Id
                 */
                id?: number;
                /**
                 * Result
                 * @description Aggregate result of the Flow
                 * @enum {string}
                 */
                result: "OK" | "Failed" | "Terminated" | "WaitingForInput" | "Running" | "WaitingToStart" | "SubflowWaitingForInput";
            };
        };
        /** @description PingList is a list of pings */
        "com.nokia.eda.oam.v1alpha1.PingList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"][];
            kind: string;
        };
        "com.nokia.eda.oam.v1alpha1.Ping_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.oam.v1alpha1.Ping_DeletedResources": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping_DeletedResourceEntry"][];
        "com.nokia.eda.oam.v1alpha1.Ping_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description Threshold is the Schema for the thresholds API */
        "com.nokia.eda.oam.v1alpha1.Threshold": {
            /** @default oam.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Threshold */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold_metadata"];
            /**
             * Specification
             * @description A Threshold allows you to monitor a field in EDB and trigger severity-correct alarms based on the value of that field.
             *     By using EDB as a source you are able to trigger thresholds on any published field from a TopoNode, or any other EDB source.
             */
            spec: {
                /**
                 * Thresholds
                 * @description Alarm details for this threshold.
                 */
                alarm?: {
                    /**
                     * Description
                     * @description The description of the alarm.
                     */
                    description?: string;
                    /**
                     * Probable Cause
                     * @description The probable cause of the alarm.
                     */
                    probableCause?: string;
                    /**
                     * Remedial Action
                     * @description The remedial action for the alarm.
                     */
                    remedialAction?: string;
                };
                /**
                 * Enabled
                 * @description Enable or disable this threshold.
                 * @default true
                 */
                enabled: boolean;
                /**
                 * Field
                 * @description Field to monitor for this threshold, for example `utilization`.
                 */
                field: string;
                /**
                 * Generate Overlay
                 * @description Enable or disable generation of a topology overlay for this threshold.
                 * @default false
                 */
                generateOverlay: boolean;
                /**
                 * Threshold Name
                 * @description The name of this threshold. This name will be used to generate the alarm name, so should follow CamelCase conventions, e.g. VolumeUtilization.
                 */
                name: string;
                /**
                 * Path
                 * @description Path to monitor for this threshold. This should be the full EDB path to the table containing the field you wish to trigger a threshold on.
                 *     For example, to monitor the utilization field of the component volume table, you would use `.namespace.node.normal.components_eda_nokia_com.v1.controlmodule.volume`, and set field to `utilization`.
                 */
                path: string;
                /**
                 * Associated Resource
                 * @description Which resource to associate with this threshold. This overrides the destination resource in alarms raised as a result of threshold breaches.
                 *     By default a resource will attempt to be derived based on the monitored path.
                 */
                resource?: {
                    /**
                     * Group
                     * @description The group of the resource to monitor.
                     */
                    group: string;
                    /**
                     * Kind
                     * @description The kind of resource to monitor.
                     */
                    kind: string;
                    /**
                     * Name
                     * @description The name of the resource to monitor.
                     */
                    name: string;
                };
                /**
                 * Thresholds
                 * @description Severities and their associated values.
                 */
                thresholds: {
                    /**
                     * Critical Threshold
                     * @description The minimum average utilization over the last 1 minute to trigger a critical alarm.
                     *     This value must be greater than the majorThreshold.
                     */
                    criticalThreshold?: number;
                    /**
                     * Delta
                     * @description The delta value for clearing a threshold.
                     *     For example, with a critical threshold of 90, direction of Rising and a delta of 5, the critical alarm will clear when the utilization drops below 85.
                     * @default 5
                     */
                    delta: number;
                    /**
                     * Threshold Direction
                     * @description Direction of the threshold: "Rising" or "Falling".
                     * @default Rising
                     * @enum {string}
                     */
                    direction: "Rising" | "Falling";
                    /**
                     * Major Threshold
                     * @description The minimum average utilization over the last 1 minute to trigger a major alarm.
                     *     This value must be greater than the minorThreshold.
                     */
                    majorThreshold?: number;
                    /**
                     * Minor Threshold
                     * @description The minimum average utilization over the last 1 minute to trigger a minor alarm.
                     */
                    minorThreshold?: number;
                    /**
                     * Warning Threshold
                     * @description The minimum average utilization over the last 1 minute to trigger a warning alarm.
                     */
                    warningThreshold?: number;
                };
            };
            /**
             * Status
             * @description ThresholdStatus defines the observed state of Threshold
             */
            readonly status?: Record<string, never>;
        };
        /** @description ThresholdList is a list of thresholds */
        "com.nokia.eda.oam.v1alpha1.ThresholdList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"][];
            kind: string;
        };
        "com.nokia.eda.oam.v1alpha1.Threshold_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.oam.v1alpha1.Threshold_DeletedResources": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold_DeletedResourceEntry"][];
        "com.nokia.eda.oam.v1alpha1.Threshold_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionOamEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesOamEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiOamEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listOamEdaNokiaComV1alpha1Mirrors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.MirrorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.MirrorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.MirrorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Mirror to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Mirror to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Mirror"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryOamEdaNokiaComV1alpha1NamespaceMirrors: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Mirror to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.PingList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.PingList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Ping to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Ping to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Ping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryOamEdaNokiaComV1alpha1NamespacePings: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Ping to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.ThresholdList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.ThresholdList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Threshold to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Threshold to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.Threshold"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryOamEdaNokiaComV1alpha1NamespaceThresholds: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Threshold to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listOamEdaNokiaComV1alpha1Pings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.PingList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listOamEdaNokiaComV1alpha1Thresholds: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.oam.v1alpha1.ThresholdList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
