/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/routing.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from routing.eda.nokia.com */
        get: operations["getVersionRoutingEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from routing.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesRoutingEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for routing.eda.nokia.com v1alpha1 */
        get: operations["uiRoutingEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/defaultinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultinterfaces */
        get: operations["listRoutingEdaNokiaComV1alpha1Defaultinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/defaultrouters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultrouters */
        get: operations["listRoutingEdaNokiaComV1alpha1Defaultrouters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/drains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list drains */
        get: operations["listRoutingEdaNokiaComV1alpha1Drains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultinterfaces in namespace */
        get: operations["listRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        put?: never;
        /** @description create a DefaultInterface */
        post: operations["createRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        /** Delete all instances of DefaultInterface in the specified namespace. */
        delete: operations["deleteAllRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultinterfaces/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultInterface that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultinterfaces/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultInterface.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        /** @description replace a DefaultInterface */
        put: operations["replaceRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        post?: never;
        /** @description delete the specified DefaultInterface */
        delete: operations["deleteRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        options?: never;
        head?: never;
        /** @description patch a DefaultInterface */
        patch: operations["patchRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultinterfaces/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultInterface. */
        get: operations["getHistoryRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultrouters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultrouters in namespace */
        get: operations["listRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        put?: never;
        /** @description create a DefaultRouter */
        post: operations["createRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        /** Delete all instances of DefaultRouter in the specified namespace. */
        delete: operations["deleteAllRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultrouters/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultRouter that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultrouters/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultRouter.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        /** @description replace a DefaultRouter */
        put: operations["replaceRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        post?: never;
        /** @description delete the specified DefaultRouter */
        delete: operations["deleteRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        options?: never;
        head?: never;
        /** @description patch a DefaultRouter */
        patch: operations["patchRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultrouters/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultRouter. */
        get: operations["getHistoryRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/drains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list drains in namespace */
        get: operations["listRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        put?: never;
        /** @description create a Drain */
        post: operations["createRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        /** Delete all instances of Drain in the specified namespace. */
        delete: operations["deleteAllRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/drains/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Drain that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/drains/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Drain.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        /** @description replace a Drain */
        put: operations["replaceRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        post?: never;
        /** @description delete the specified Drain */
        delete: operations["deleteRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        options?: never;
        head?: never;
        /** @description patch a Drain */
        patch: operations["patchRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/drains/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Drain. */
        get: operations["getHistoryRoutingEdaNokiaComV1alpha1NamespaceDrains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/systeminterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list systeminterfaces in namespace */
        get: operations["listRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        put?: never;
        /** @description create a SystemInterface */
        post: operations["createRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        /** Delete all instances of SystemInterface in the specified namespace. */
        delete: operations["deleteAllRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/systeminterfaces/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of SystemInterface that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/systeminterfaces/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified SystemInterface.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        /** @description replace a SystemInterface */
        put: operations["replaceRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        post?: never;
        /** @description delete the specified SystemInterface */
        delete: operations["deleteRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        options?: never;
        head?: never;
        /** @description patch a SystemInterface */
        patch: operations["patchRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/namespaces/{namespace}/systeminterfaces/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced SystemInterface. */
        get: operations["getHistoryRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/routing.eda.nokia.com/v1alpha1/systeminterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list systeminterfaces */
        get: operations["listRoutingEdaNokiaComV1alpha1Systeminterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description DefaultInterface is the Schema for the defaultinterfaces API */
        "com.nokia.eda.routing.v1alpha1.DefaultInterface": {
            /** @default routing.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultInterface */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface_metadata"];
            /**
             * Specification
             * @description DefaultInterface enables the configuration of default interfaces, including Interface references, DefaultRouter, VLAN IDs, IP MTU settings, and options for IPv4 and IPv6 addresses. It also supports unnumbered interfaces and BFD (Bidirectional Forwarding Detection) configuration.
             */
            spec: {
                /**
                 * BFD Configuration
                 * @description Enable or disable BFD on this DefaultInterface.
                 */
                bfd?: {
                    /**
                     * Transmit Interval
                     * @description The minimum interval in microseconds between transmission of BFD control packets[default=1000000].
                     * @default 1000000
                     */
                    desiredMinTransmitInt: number;
                    /**
                     * Multiplier
                     * @description The number of packets that must be missed to declare this session as down. [default=3]
                     * @default 3
                     */
                    detectionMultiplier: number;
                    /**
                     * Enabled
                     * @description Enable Biforward Detection[default=false].
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Minimum Echo Receive Interval
                     * @description The minimum interval between echo packets the local node can receive in microseconds
                     * @default 1000000
                     */
                    minEchoReceiveInterval: number;
                    /**
                     * Receive Interval
                     * @description The minimum interval in microseconds between received BFD control packets that this system should support.[default=1000000].
                     * @default 1000000
                     */
                    requiredMinReceive: number;
                };
                /**
                 * Default Router
                 * @description Reference to a DefaultRouter.
                 */
                defaultRouter: string;
                /**
                 * Interface Reference
                 * @description Reference to an Interface to use for attachment.
                 */
                interface: string;
                /**
                 * IP MTU
                 * @description Set the IP MTU for the DefaultInterface.
                 */
                ipMTU?: number;
                /**
                 * IPv4 Addresses
                 * Format: ip
                 * @description List of IPv4 addresses in ip/mask form, e.g., 192.168.0.1/24.
                 */
                ipv4Addresses?: {
                    /**
                     * IP Prefix
                     * @description Address and mask to use
                     */
                    ipPrefix: string;
                    /**
                     * Primary
                     * @description Indicates which address to use as primary for broadcast
                     */
                    primary?: boolean;
                }[];
                /**
                 * IPv6 Addresses
                 * Format: ip
                 * @description List of IPv6 addresses in ip/mask form, e.g., fc00::1/120.
                 */
                ipv6Addresses?: {
                    /**
                     * IP Prefix
                     * @description Address and mask to use
                     */
                    ipPrefix: string;
                    /**
                     * Primary
                     * @description Indicates which address to use as primary for broadcast
                     */
                    primary?: boolean;
                }[];
                /**
                 * Unnumbered
                 * @description Enables the use of unnumbered interfaces on the ISL. For IPv6, no IP address are configured on the sub-interface and only the link local address will be used. If any allocation pool is specified for IPv6 that will take precedence and IPs will be assigned to the interfaces.  When using eBGP for an underlay protocol, the DefaultInterfaces which are a part of the ISL will be added to the BGP dynamic neighbor list.
                 * @enum {string}
                 */
                unnumbered?: "IPV6";
                /**
                 * VLAN ID
                 * @description VLAN to use with this DefaultInterface.
                 */
                vlanID?: number;
            };
            /**
             * Status
             * @description DefaultInterfaceStatus defines the observed state of DefaultInterface
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the DefaultInterface.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description Indicates when this Interface last changed state.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Indicates the current operational state of the DefaultInterface.
                 */
                operationalState?: string;
            };
        };
        /** @description DefaultInterfaceList is a list of defaultinterfaces */
        "com.nokia.eda.routing.v1alpha1.DefaultInterfaceList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"][];
            kind: string;
        };
        "com.nokia.eda.routing.v1alpha1.DefaultInterface_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.routing.v1alpha1.DefaultInterface_DeletedResources": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface_DeletedResourceEntry"][];
        "com.nokia.eda.routing.v1alpha1.DefaultInterface_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultRouter is the Schema for the defaultrouters API */
        "com.nokia.eda.routing.v1alpha1.DefaultRouter": {
            /** @default routing.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultRouter */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter_metadata"];
            /**
             * Specification
             * @description DefaultRouter enables the configuration of default routing instances on a specified Node, including options for BGP configuration, import and export policies, and router IDs.
             */
            spec: {
                /**
                 * BGP Configuration
                 * @description BGP configuration.
                 */
                bgp?: {
                    /**
                     * Autonomous System
                     * @description Autonomous System number for BGP.
                     */
                    autonomousSystem?: number;
                    /**
                     * eBGP Preference
                     * @description Preference to be set for eBGP.
                     * @default 170
                     */
                    ebgpPreference: number;
                    /**
                     * Enable BGP
                     * @description Enables BGP in the default VRF.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * iBGP Preference
                     * @description Preference to be set for iBGP.
                     * @default 170
                     */
                    ibgpPreference: number;
                    /**
                     * IPv4 Unicast
                     * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                     */
                    ipv4Unicast?: {
                        /**
                         * Advertise IPv6 Next Hops
                         * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                         */
                        advertiseIPV6NextHops?: boolean;
                        /**
                         * Enabled
                         * @description Enables the IPv4 unicast AFISAFI.
                         */
                        enabled?: boolean;
                        /**
                         * Multipath
                         * @description Enable multipath.
                         */
                        multipath?: {
                            /**
                             * Allow Multiple Autonomous Systems Per Path
                             * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                             * @default true
                             */
                            allowMultipleAS: boolean;
                            /**
                             * Maximum Number of Paths
                             * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                             */
                            maxAllowedPaths: number;
                        };
                        /**
                         * Rapid Update
                         * @description Enables rapid update.
                         */
                        rapidUpdate?: boolean;
                        /**
                         * Receive IPv6 Next Hops
                         * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                         */
                        receiveIPV6NextHops?: boolean;
                    };
                    /**
                     * IPv6 Unicast
                     * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                     */
                    ipv6Unicast?: {
                        /**
                         * Enabled
                         * @description Enables the IPv6 unicast AFISAFI
                         */
                        enabled?: boolean;
                        /**
                         * Multipath
                         * @description Enable multipath
                         */
                        multipath?: {
                            /**
                             * Allow Multiple Autonomous Systems Per Path
                             * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                             * @default true
                             */
                            allowMultipleAS: boolean;
                            /**
                             * Maximum Number of Paths
                             * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                             */
                            maxAllowedPaths: number;
                        };
                        /**
                         * Rapid Update
                         * @description Enables rapid update.
                         */
                        rapidUpdate?: boolean;
                    };
                    /**
                     * Keychain
                     * @description Keychain to be used for authentication
                     */
                    keychain?: string;
                    /**
                     * L2VPN EVPN
                     * @description Parameters relating to the EVPN AFI/SAFI.
                     */
                    l2VPNEVPN?: {
                        /**
                         * Advertise IPv6 Next Hops
                         * @description Enables advertisement of EVPN routes with IPv6 next-hops to peers.
                         */
                        advertiseIPV6NextHops?: boolean;
                        /**
                         * Enabled
                         * @description Enables the L2VPN EVPN AFISAFI.
                         */
                        enabled?: boolean;
                        /**
                         * EVPN InterAS VPN
                         * @description Enable inter-AS VPN for EVPN.
                         * @default false
                         */
                        interASVPN: boolean;
                        /**
                         * Multipath
                         * @description Enable multipath
                         */
                        multipath?: {
                            /**
                             * Allow Multiple Autonomous Systems Per Path
                             * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                             * @default true
                             */
                            allowMultipleAS: boolean;
                            /**
                             * Maximum Number of Paths
                             * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                             */
                            maxAllowedPaths: number;
                        };
                        /**
                         * Rapid Update
                         * @description Enables rapid update.
                         */
                        rapidUpdate?: boolean;
                    };
                    /**
                     * Min Wait To Advertise Time
                     * @description Minimum wait time before advertising routes post BGP restart.
                     * @default 0
                     */
                    minWaitToAdvertise: number;
                    /**
                     * Enable Rapid Withdrawal
                     * @description Enable rapid withdrawal in BGP.
                     * @default false
                     */
                    rapidWithdrawl: boolean;
                    /**
                     * Send Community Large
                     * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                     */
                    sendCommunityLarge?: boolean;
                    /**
                     * Send Community Standard
                     * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                     */
                    sendCommunityStandard?: boolean;
                    /**
                     * Wait for FIB Installation
                     * @description Wait for FIB installation before advertising routes.
                     * @default false
                     */
                    waitForFibInstall: boolean;
                };
                /**
                 * Description
                 * @description Sets the description on the Default router.
                 */
                description?: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                 */
                exportPolicy?: string[];
                /**
                 * Import Policy
                 * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                 */
                importPolicy?: string[];
                /**
                 * Node
                 * @description Reference to a TopoNode on which to configure the default routing instance.
                 */
                node: string;
                /**
                 * Route Leaking
                 * @description Route leaking controlled by routing policies in and out of the DefaultRouter.
                 */
                routeLeaking?: {
                    /**
                     * Export Policy
                     * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                     */
                    exportPolicy: string;
                    /**
                     * Import Policy
                     * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                     */
                    importPolicy: string;
                };
                /**
                 * Router ID
                 * Format: ip
                 * @description Router ID in dotted quad notation.
                 */
                routerID: string;
            };
            /**
             * Status
             * @description DefaultRouterStatus defines the observed state of DefaultRouter
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the Router.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Operational state of the Router.
                 */
                operationalState?: string;
            };
        };
        /** @description DefaultRouterList is a list of defaultrouters */
        "com.nokia.eda.routing.v1alpha1.DefaultRouterList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"][];
            kind: string;
        };
        "com.nokia.eda.routing.v1alpha1.DefaultRouter_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.routing.v1alpha1.DefaultRouter_DeletedResources": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter_DeletedResourceEntry"][];
        "com.nokia.eda.routing.v1alpha1.DefaultRouter_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description Drain is the Schema for the drains API */
        "com.nokia.eda.routing.v1alpha1.Drain": {
            /** @default routing.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Drain */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain_metadata"];
            /**
             * Specification
             * @description Drain allows for the controlled disabling or draining of specific DefaultRouters, either by selecting them through labels or directly referencing them, ensuring traffic is safely rerouted or dropped before the routers are decommissioned.
             */
            spec: {
                /**
                 * Default Router Selector
                 * Format: labelselector
                 * @description Selector to use when selecting DefaultRouters to drain.
                 */
                defaultRouterSelector?: string[];
                /**
                 * Default Routers
                 * @description Reference to DefaultRouters to drain.
                 */
                defaultRouters?: string[];
                /**
                 * Enabled
                 * @description Enable this Drain.
                 * @default true
                 */
                enabled: boolean;
            };
            /**
             * Status
             * @description DrainStatus defines the observed state of Drain.
             */
            readonly status?: {
                /**
                 * Default Routers
                 * @description List of DefaultRouters this Drain has been applied to
                 */
                defaultRouters?: string[];
            };
        };
        /** @description DrainList is a list of drains */
        "com.nokia.eda.routing.v1alpha1.DrainList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"][];
            kind: string;
        };
        "com.nokia.eda.routing.v1alpha1.Drain_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.routing.v1alpha1.Drain_DeletedResources": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain_DeletedResourceEntry"][];
        "com.nokia.eda.routing.v1alpha1.Drain_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description SystemInterface is the Schema for the systeminterfaces API */
        "com.nokia.eda.routing.v1alpha1.SystemInterface": {
            /** @default routing.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default SystemInterface */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface_metadata"];
            /**
             * Specification
             * @description SystemInterfaceSpec defines the desired state of SystemInterface
             */
            spec: {
                /**
                 * BFD Configuration
                 * @description Enable or disable BFD on this SystemInterface.
                 */
                bfd?: {
                    /**
                     * Transmit Interval
                     * @description The minimum interval in microseconds between transmission of BFD control packets[default=1000000].
                     * @default 1000000
                     */
                    desiredMinTransmitInt: number;
                    /**
                     * Multiplier
                     * @description The number of packets that must be missed to declare this session as down. [default=3]
                     * @default 3
                     */
                    detectionMultiplier: number;
                    /**
                     * Enabled
                     * @description Enable Biforward Detection[default=false].
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Minimum Echo Receive Interval
                     * @description The minimum interval between echo packets the local node can receive in microseconds
                     * @default 1000000
                     */
                    minEchoReceiveInterval: number;
                    /**
                     * Receive Interval
                     * @description The minimum interval in microseconds between received BFD control packets that this system should support.[default=1000000].
                     * @default 1000000
                     */
                    requiredMinReceive: number;
                };
                /**
                 * Default Router
                 * @description Reference to a DefaultRouter.
                 */
                defaultRouter: string;
                /**
                 * IPv4 Address
                 * Format: ip
                 * @description IPv4 address in ip/mask form, e.g., 192.168.0.1/32.
                 */
                ipv4Address?: string;
                /**
                 * IPv6 Address
                 * Format: ip
                 * @description IPv6 address in ip/mask form, e.g., fc00::1/128.
                 */
                ipv6Address?: string;
            };
            /**
             * Status
             * @description SystemInterfaceStatus defines the observed state of SystemInterface
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the SystemInterface.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description Indicates when this Interface last changed state.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Indicates the current operational state of the SystemInterface.
                 */
                operationalState?: string;
            };
        };
        /** @description SystemInterfaceList is a list of systeminterfaces */
        "com.nokia.eda.routing.v1alpha1.SystemInterfaceList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"][];
            kind: string;
        };
        "com.nokia.eda.routing.v1alpha1.SystemInterface_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.routing.v1alpha1.SystemInterface_DeletedResources": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface_DeletedResourceEntry"][];
        "com.nokia.eda.routing.v1alpha1.SystemInterface_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionRoutingEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesRoutingEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiRoutingEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1Defaultinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1Defaultrouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouterList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1Drains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DrainList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultInterface to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultInterface to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryRoutingEdaNokiaComV1alpha1NamespaceDefaultinterfaces: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultInterface to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouterList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouterList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultRouter to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultRouter to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DefaultRouter"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryRoutingEdaNokiaComV1alpha1NamespaceDefaultrouters: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultRouter to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DrainList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.DrainList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Drain to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Drain to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.Drain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryRoutingEdaNokiaComV1alpha1NamespaceDrains: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Drain to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the SystemInterface to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the SystemInterface to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryRoutingEdaNokiaComV1alpha1NamespaceSysteminterfaces: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the SystemInterface to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listRoutingEdaNokiaComV1alpha1Systeminterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.routing.v1alpha1.SystemInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
