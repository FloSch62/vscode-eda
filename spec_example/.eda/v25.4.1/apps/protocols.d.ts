/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/protocols.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from protocols.eda.nokia.com */
        get: operations["getVersionProtocolsEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from protocols.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesProtocolsEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for protocols.eda.nokia.com v1alpha1 */
        get: operations["uiProtocolsEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/aggregateroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list aggregateroutes */
        get: operations["listProtocolsEdaNokiaComV1alpha1Aggregateroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/bgpgroups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bgpgroups */
        get: operations["listProtocolsEdaNokiaComV1alpha1Bgpgroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/bgppeers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bgppeers */
        get: operations["listProtocolsEdaNokiaComV1alpha1Bgppeers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/bgppeerstates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bgppeerstates */
        get: operations["listProtocolsEdaNokiaComV1alpha1Bgppeerstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/defaultaggregateroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultaggregateroutes */
        get: operations["listProtocolsEdaNokiaComV1alpha1Defaultaggregateroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/defaultbgpgroups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultbgpgroups */
        get: operations["listProtocolsEdaNokiaComV1alpha1Defaultbgpgroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/defaultbgppeers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultbgppeers */
        get: operations["listProtocolsEdaNokiaComV1alpha1Defaultbgppeers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/defaultroutereflectorclients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultroutereflectorclients */
        get: operations["listProtocolsEdaNokiaComV1alpha1Defaultroutereflectorclients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/defaultroutereflectors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultroutereflectors */
        get: operations["listProtocolsEdaNokiaComV1alpha1Defaultroutereflectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/defaultstaticroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultstaticroutes */
        get: operations["listProtocolsEdaNokiaComV1alpha1Defaultstaticroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/aggregateroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list aggregateroutes in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        put?: never;
        /** @description create a AggregateRoute */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        /** Delete all instances of AggregateRoute in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/aggregateroutes/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of AggregateRoute that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/aggregateroutes/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified AggregateRoute.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        /** @description replace a AggregateRoute */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        post?: never;
        /** @description delete the specified AggregateRoute */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        options?: never;
        head?: never;
        /** @description patch a AggregateRoute */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/aggregateroutes/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced AggregateRoute. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgpgroups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bgpgroups in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        put?: never;
        /** @description create a BGPGroup */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        /** Delete all instances of BGPGroup in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgpgroups/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of BGPGroup that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgpgroups/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified BGPGroup.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        /** @description replace a BGPGroup */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        post?: never;
        /** @description delete the specified BGPGroup */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        options?: never;
        head?: never;
        /** @description patch a BGPGroup */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgpgroups/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced BGPGroup. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bgppeers in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        put?: never;
        /** @description create a BGPPeer */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        /** Delete all instances of BGPPeer in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeers/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of BGPPeer that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeers/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified BGPPeer.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        /** @description replace a BGPPeer */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        post?: never;
        /** @description delete the specified BGPPeer */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        options?: never;
        head?: never;
        /** @description patch a BGPPeer */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeers/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced BGPPeer. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceBgppeers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeerstates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bgppeerstates in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        put?: never;
        /** @description create a BGPPeerState */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        /** Delete all instances of BGPPeerState in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeerstates/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of BGPPeerState that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeerstates/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified BGPPeerState.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        /** @description replace a BGPPeerState */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        post?: never;
        /** @description delete the specified BGPPeerState */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        options?: never;
        head?: never;
        /** @description patch a BGPPeerState */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/bgppeerstates/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced BGPPeerState. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultaggregateroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultaggregateroutes in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        put?: never;
        /** @description create a DefaultAggregateRoute */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        /** Delete all instances of DefaultAggregateRoute in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultaggregateroutes/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultAggregateRoute that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultaggregateroutes/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultAggregateRoute.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        /** @description replace a DefaultAggregateRoute */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        post?: never;
        /** @description delete the specified DefaultAggregateRoute */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        options?: never;
        head?: never;
        /** @description patch a DefaultAggregateRoute */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultaggregateroutes/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultAggregateRoute. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgpgroups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultbgpgroups in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        put?: never;
        /** @description create a DefaultBGPGroup */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        /** Delete all instances of DefaultBGPGroup in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgpgroups/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultBGPGroup that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgpgroups/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultBGPGroup.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        /** @description replace a DefaultBGPGroup */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        post?: never;
        /** @description delete the specified DefaultBGPGroup */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        options?: never;
        head?: never;
        /** @description patch a DefaultBGPGroup */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgpgroups/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultBGPGroup. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgppeers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultbgppeers in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        put?: never;
        /** @description create a DefaultBGPPeer */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        /** Delete all instances of DefaultBGPPeer in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgppeers/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultBGPPeer that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgppeers/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultBGPPeer.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        /** @description replace a DefaultBGPPeer */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        post?: never;
        /** @description delete the specified DefaultBGPPeer */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        options?: never;
        head?: never;
        /** @description patch a DefaultBGPPeer */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultbgppeers/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultBGPPeer. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectorclients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultroutereflectorclients in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        put?: never;
        /** @description create a DefaultRouteReflectorClient */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        /** Delete all instances of DefaultRouteReflectorClient in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectorclients/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultRouteReflectorClient that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectorclients/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultRouteReflectorClient.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        /** @description replace a DefaultRouteReflectorClient */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        post?: never;
        /** @description delete the specified DefaultRouteReflectorClient */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        options?: never;
        head?: never;
        /** @description patch a DefaultRouteReflectorClient */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectorclients/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultRouteReflectorClient. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultroutereflectors in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        put?: never;
        /** @description create a DefaultRouteReflector */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        /** Delete all instances of DefaultRouteReflector in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectors/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultRouteReflector that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectors/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultRouteReflector.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        /** @description replace a DefaultRouteReflector */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        post?: never;
        /** @description delete the specified DefaultRouteReflector */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        options?: never;
        head?: never;
        /** @description patch a DefaultRouteReflector */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultroutereflectors/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultRouteReflector. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultstaticroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list defaultstaticroutes in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        put?: never;
        /** @description create a DefaultStaticRoute */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        /** Delete all instances of DefaultStaticRoute in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultstaticroutes/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DefaultStaticRoute that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultstaticroutes/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DefaultStaticRoute.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        /** @description replace a DefaultStaticRoute */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        post?: never;
        /** @description delete the specified DefaultStaticRoute */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        options?: never;
        head?: never;
        /** @description patch a DefaultStaticRoute */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/defaultstaticroutes/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DefaultStaticRoute. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectorclients in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        put?: never;
        /** @description create a RouteReflectorClient */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        /** Delete all instances of RouteReflectorClient in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclients/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of RouteReflectorClient that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclients/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified RouteReflectorClient.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        /** @description replace a RouteReflectorClient */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        post?: never;
        /** @description delete the specified RouteReflectorClient */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        options?: never;
        head?: never;
        /** @description patch a RouteReflectorClient */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclients/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced RouteReflectorClient. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclientstates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectorclientstates in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        put?: never;
        /** @description create a RouteReflectorClientState */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        /** Delete all instances of RouteReflectorClientState in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclientstates/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of RouteReflectorClientState that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclientstates/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified RouteReflectorClientState.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        /** @description replace a RouteReflectorClientState */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        post?: never;
        /** @description delete the specified RouteReflectorClientState */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        options?: never;
        head?: never;
        /** @description patch a RouteReflectorClientState */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorclientstates/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced RouteReflectorClientState. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectors in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        put?: never;
        /** @description create a RouteReflector */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        /** Delete all instances of RouteReflector in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectors/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of RouteReflector that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectors/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified RouteReflector.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        /** @description replace a RouteReflector */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        post?: never;
        /** @description delete the specified RouteReflector */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        options?: never;
        head?: never;
        /** @description patch a RouteReflector */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectors/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced RouteReflector. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorstates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectorstates in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        put?: never;
        /** @description create a RouteReflectorState */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        /** Delete all instances of RouteReflectorState in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorstates/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of RouteReflectorState that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorstates/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified RouteReflectorState.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        /** @description replace a RouteReflectorState */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        post?: never;
        /** @description delete the specified RouteReflectorState */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        options?: never;
        head?: never;
        /** @description patch a RouteReflectorState */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/routereflectorstates/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced RouteReflectorState. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/staticroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list staticroutes in namespace */
        get: operations["listProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        put?: never;
        /** @description create a StaticRoute */
        post: operations["createProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        /** Delete all instances of StaticRoute in the specified namespace. */
        delete: operations["deleteAllProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/staticroutes/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of StaticRoute that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/staticroutes/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified StaticRoute.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        /** @description replace a StaticRoute */
        put: operations["replaceProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        post?: never;
        /** @description delete the specified StaticRoute */
        delete: operations["deleteProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        options?: never;
        head?: never;
        /** @description patch a StaticRoute */
        patch: operations["patchProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/namespaces/{namespace}/staticroutes/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced StaticRoute. */
        get: operations["getHistoryProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/routereflectorclients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectorclients */
        get: operations["listProtocolsEdaNokiaComV1alpha1Routereflectorclients"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/routereflectorclientstates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectorclientstates */
        get: operations["listProtocolsEdaNokiaComV1alpha1Routereflectorclientstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/routereflectors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectors */
        get: operations["listProtocolsEdaNokiaComV1alpha1Routereflectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/routereflectorstates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routereflectorstates */
        get: operations["listProtocolsEdaNokiaComV1alpha1Routereflectorstates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/protocols.eda.nokia.com/v1alpha1/staticroutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list staticroutes */
        get: operations["listProtocolsEdaNokiaComV1alpha1Staticroutes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description AggregateRoute is the Schema for the aggregateroutes API */
        "com.nokia.eda.protocols.v1alpha1.AggregateRoute": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default AggregateRoute */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute_metadata"];
            /**
             * Specification
             * @description The AggregateRoute enables the configuration of aggregated routes on a specified Router. This resource allows for the definition of destination prefixes, the selection of a router, and optionally, specific nodes where the aggregate routes should be configured. Advanced options include the ability to generate ICMP unreachable messages for packets matching the aggregate route, and the ability to block the advertisement of all contributing routes in dynamic protocols like BGP.
             */
            spec: {
                /**
                 * Aggregator ASN
                 * Format: int32
                 * @description Specifies the aggregator's ASN.
                 */
                aggregatorASN?: number;
                /**
                 * Aggregator IP
                 * @description Specifies the aggregator's IP address.
                 */
                aggregatorIP?: string;
                /**
                 * Generate ICMP
                 * @description When set to true the router generares ICMP unreachable messages for packets matching the aggregate route (and not a more specific route).
                 */
                generateICMP?: boolean;
                /**
                 * Nodes
                 * @description List of nodes on which to configure the aggregate routes. An AND operation is executed against the nodes in this list and the nodes on which the Router is configured to determine the Nodes on which to configure the aggregate routes.
                 */
                nodes?: string[];
                /**
                 * Prefixes
                 * Format: ip
                 * @description List of destination prefixes for the aggregate routes.
                 */
                prefixes: string[];
                /**
                 * Router
                 * @description Reference to a Router on which to configure the aggregate routes.  If no Nodes are provided then the aggregate routes will be provisioned on all Nodes on which the Router is provisioned.
                 */
                router: string;
                /**
                 * Summary Only
                 * @description When set to true the router blocks the advertisement of all contributing routes of this aggregate route in dynamic protocols such as BGP.
                 */
                summaryOnly?: boolean;
            };
            /**
             * Status
             * @description AggregateRouteStatus defines the observed state of AggregateRoute
             */
            readonly status?: Record<string, never>;
        };
        /** @description AggregateRouteList is a list of aggregateroutes */
        "com.nokia.eda.protocols.v1alpha1.AggregateRouteList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.AggregateRoute_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.AggregateRoute_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.AggregateRoute_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description BGPGroup is the Schema for the bgpgroups API */
        "com.nokia.eda.protocols.v1alpha1.BGPGroup": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default BGPGroup */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup_metadata"];
            /**
             * Specification
             * @description The BGPGroup enables centralized management of BGP peer configurations. This resource allows setting a description, common BGP settings, and peer-specific configurations, simplifying the consistent application of policies across multiple peers. It also includes transport settings, such as local TCP address configuration, passive mode, and TCP MSS.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * Route Reflector Client
                 * @description When set to true, all configured and dynamic BGP peers are considered RR clients.
                 */
                client?: boolean;
                /**
                 * Cluster ID
                 * Format: ip
                 * @description Enables route reflect client and sets the cluster ID.
                 */
                clusterID?: string;
                /**
                 * Description
                 * @description Sets the description on the BGP group.
                 */
                description?: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Local Preference
                 * @description Local Preference attribute added to received routes from the BGP peers, also sets local preference for generated routes.
                 */
                localPreference?: number;
                /**
                 * Multihop Max Hop Count
                 * @description Enable multihop for eBGP peers and sets the maximum number of hops allowed.
                 */
                multiHopMaxHop?: number;
                /**
                 * Next Hop Self
                 * @description When set to true, the next-hop in all IPv4-unicast, IPv6-unicast and EVPN BGP routes advertised to the peer is set to the local-address.
                 */
                nextHopSelf?: boolean;
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description BGPGroupStatus defines the observed state of BGPGroup
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the BGP group.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Peers
                 * Format: int32
                 * @description Number of configured BGP peers within the BGP Group.
                 */
                numPeers?: number;
                /**
                 * Number of Peers Operational Down
                 * Format: int32
                 * @description Number of configured BGP peers which have an Operational State of down within the BGP Group.
                 */
                numPeersOperDown?: number;
                /**
                 * Number of unknown BGP Peers
                 * Format: int32
                 * @description Number of configured BGP peers within the BGP Group which cannot be reached by npp.
                 */
                numPeersUnknown?: number;
                /**
                 * Operational State
                 * @description Operational state of the BGP group.
                 */
                operationalState?: string;
            };
        };
        /** @description BGPGroupList is a list of bgpgroups */
        "com.nokia.eda.protocols.v1alpha1.BGPGroupList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.BGPGroup_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.BGPGroup_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.BGPGroup_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description BGPPeer is the Schema for the bgppeers API */
        "com.nokia.eda.protocols.v1alpha1.BGPPeer": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default BGPPeer */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer_metadata"];
            /**
             * Specification
             * @description BGPPeer enables the configuration of BGP sessions. It allows specifying a description, an interface reference (either RoutedInterface or IrbInterface), and the peer IP address. The resource also supports dynamic neighbors, common BGP settings, and peer-specific configurations.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * Route Reflector Client
                 * @description When set to true, all configured and dynamic BGP peers are considered RR clients.
                 */
                client?: boolean;
                /**
                 * Cluster ID
                 * Format: ip
                 * @description Enables route reflect client and sets the cluster ID.
                 */
                clusterID?: string;
                /**
                 * Description
                 * @description Sets the description on the BGP peer
                 */
                description?: string;
                /**
                 * Dynamic Neighbor
                 * @description When set to true the Interface is added to the dynamic-neighbor list for dynamic peering.
                 * @default false
                 */
                dynamicNeighbor: boolean;
                /**
                 * Dynamic Neighbor Allowed Peer AS
                 * @description The autonomous system numbers allowed from peers if dynamic peering is enabled.
                 */
                dynamicNeighborAllowedPeerAS?: number[];
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Group
                 * @description Reference to a BGPGroup. When present this BGP peer will be added to the BGP group
                 */
                group: string;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * Interface Reference
                 * @description Reference to a RoutedInterface or IrbInterface resource whose IP will be used as a source IP for the BGP session.
                 */
                interface: string;
                /**
                 * Interface Reference Type
                 * @description InterfaceReference type defines whether the provided Reference is a RoutedInterface or IrbInterface.
                 * @enum {string}
                 */
                interfaceKind: "ROUTEDINTERFACE" | "IRBINTERFACE";
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Local Preference
                 * @description Local Preference attribute added to received routes from the BGP peers, also sets local preference for generated routes.
                 */
                localPreference?: number;
                /**
                 * Multihop Max Hop Count
                 * @description Enable multihop for eBGP peers and sets the maximum number of hops allowed.
                 */
                multiHopMaxHop?: number;
                /**
                 * Next Hop Self
                 * @description When set to true, the next-hop in all IPv4-unicast, IPv6-unicast and EVPN BGP routes advertised to the peer is set to the local-address.
                 */
                nextHopSelf?: boolean;
                /**
                 * Node
                 * @description Node on which to configure the BGP peer. This node must be one of the nodes on which the IRBInterface is configured.  When left blank or if the node is not part of the IRBInterface, the peer will not be deployed. Ignored for RoutedInterfaces.
                 */
                node?: string;
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Peer IP
                 * Format: ip
                 * @description Peer IP to which the peering session will be established.
                 */
                peerIP?: string;
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description BGPPeerStatus defines the observed state of BGPPeer
             */
            readonly status?: {
                /**
                 * Enabled
                 * @description Indicated whether the BGP Peer is administratively enabled.
                 */
                enabled?: boolean;
                /**
                 * Health
                 * @description Indicates the health score of the BGP peer.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Last Event
                 * @description Last event of the BGP peer.
                 */
                lastEvent?: string;
                /**
                 * Last State
                 * @description Last state of the BGP peer.
                 */
                lastState?: string;
                /**
                 * Negotiated Hold Time
                 * @description Hold time negotiated with the BGP peer.
                 */
                negotiatedHoldTime?: number;
                /**
                 * Negotiated Keepalive Interval
                 * @description Keepalive interval negotiated with the BGP peer.
                 */
                negotiatedKeepaliveInterval?: number;
                /**
                 * Operational State
                 * @description Operational state of the BGP peer
                 */
                operationalState?: string;
                /**
                 * Peer AS
                 * @description Peer AS of the BGP peer.
                 */
                peerAS?: number;
                /**
                 * Session State
                 * @description The state of the BGP session.
                 */
                sessionState?: string;
                /**
                 * Under Maintenance
                 * @description Indicates if the BGP peer is under maintenance.
                 */
                underMaintenance?: boolean;
            };
        };
        /** @description BGPPeerList is a list of bgppeers */
        "com.nokia.eda.protocols.v1alpha1.BGPPeerList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"][];
            kind: string;
        };
        /** @description BGPPeerState is the Schema for the bgppeerstates API */
        "com.nokia.eda.protocols.v1alpha1.BGPPeerState": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default BGPPeerState */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState_metadata"];
            /**
             * Specification
             * @description BGPPeerStateSpec defines the desired state of BGPPeerState
             */
            spec: {
                /** @description List of configured AFI-SAFI on the BGP peer */
                afiSAFI?: string[];
                /** @description Denotes if the router is a DefaultRouter or Router */
                defaultNetworkInstance: boolean;
                /**
                 * @description When set to true the PeerDefaultInterface is added to the dynamic-neighbor list for dynamic peering.
                 * @default false
                 */
                dynamicNeighbor: boolean;
                /** @description Reference to a BGPGroup */
                group?: string;
                /** @description The name of the network-instance or VPRN in which the BGP peer is configured */
                networkInstanceName: string;
                /** @description The Node on which the BGP peer configuration resides */
                node?: string;
                /** @description Node interface of the default interface which is configured to peer as a dynamic neighbor */
                nodeInterface?: string;
                /** @description Operating System of the Node */
                operatingSystem?: string;
                /** @description The IP of the BGP peer */
                peerIP?: string;
                /** @description Router to which the BGP peer is attached */
                router: string;
                /** @description Sub interface index of the default interface which is configured to peer as a dynamic neighbor */
                subInterfaceIndex?: number;
            };
            /**
             * Status
             * @description BGPPeerStateStatus defines the observed state of BGPPeerState
             */
            readonly status?: Record<string, never>;
        };
        /** @description BGPPeerStateList is a list of bgppeerstates */
        "com.nokia.eda.protocols.v1alpha1.BGPPeerStateList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.BGPPeerState_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.BGPPeerState_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.BGPPeerState_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        "com.nokia.eda.protocols.v1alpha1.BGPPeer_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.BGPPeer_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.BGPPeer_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultAggregateRoute is the Schema for the defaultaggregateroutes API */
        "com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultAggregateRoute */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute_metadata"];
            /**
             * Specification
             * @description DefaultAggregateRoute allows the configuration of aggregate routes on a DefaultRouter. It includes specifying destination prefixes, the DefaultRouter, and settings for generating ICMP unreachable messages or blocking route advertisement. Additionally, it configures the aggregator’s IP address and ASN for efficient route management.
             */
            spec: {
                /**
                 * Aggregator ASN
                 * Format: int32
                 * @description Specifies the aggregator's ASN.
                 */
                aggregatorASN?: number;
                /**
                 * Aggregator IP
                 * @description Specifies the aggregator's IP address.
                 */
                aggregatorIP?: string;
                /**
                 * DefaultRouter
                 * @description Reference to a Default Router on which to configure the aggregate routes.  If no Nodes are provided then the aggregate routes will be provisioned on all Nodes on which the Router is provisioned.
                 */
                defaultRouter: string;
                /**
                 * Generate ICMP
                 * @description When set to true the router generares ICMP unreachable messages for packets matching the aggregate route (and not a more specific route).
                 */
                generateICMP?: boolean;
                /**
                 * Prefixes
                 * @description List of destination prefixes for the aggregate routes.
                 */
                prefixes: string[];
                /**
                 * Summary Only
                 * @description When set to true the router blocks the advertisement of all contributing routes of this aggregate route in dynamic protocols such as BGP.
                 */
                summaryOnly?: boolean;
            };
            /**
             * Status
             * @description DefaultAggregateRouteStatus defines the observed state of DefaultAggregateRoute
             */
            readonly status?: Record<string, never>;
        };
        /** @description DefaultAggregateRouteList is a list of defaultaggregateroutes */
        "com.nokia.eda.protocols.v1alpha1.DefaultAggregateRouteList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultBGPGroup is the Schema for the defaultbgpgroups API */
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultBGPGroup */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup_metadata"];
            /**
             * Specification
             * @description The DefaultBGPGroup enables centralized management of BGP peer configurations within a DefaultRouter. This resource allows setting a description, common BGP settings, and peer-specific configurations, simplifying the consistent application of policies across multiple peers. It also includes transport settings, such as local TCP address configuration, passive mode, and TCP MSS. type DefaultBGPGroupSpec struct {
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * Route Reflector Client
                 * @description When set to true, all configured and dynamic BGP peers are considered RR clients.
                 */
                client?: boolean;
                /**
                 * Cluster ID
                 * Format: ip
                 * @description Enables route reflect client and sets the cluster ID.
                 */
                clusterID?: string;
                /**
                 * Description
                 * @description Sets the description on the BGP group.
                 */
                description?: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * L2VPN EVPN Settings
                 * @description Parameters relating to the EVPN AFI/SAFI.
                 */
                l2VPNEVPN?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of EVPN routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the L2VPN EVPN AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of EVPN routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Local Preference
                 * @description Local Preference attribute added to received routes from the BGP peers, also sets local preference for generated routes.
                 */
                localPreference?: number;
                /**
                 * Multihop Max Hop Count
                 * @description Enable multihop for eBGP peers and sets the maximum number of hops allowed.
                 */
                multiHopMaxHop?: number;
                /**
                 * Next Hop Self
                 * @description When set to true, the next-hop in all IPv4-unicast, IPv6-unicast and EVPN BGP routes advertised to the peer is set to the local-address.
                 */
                nextHopSelf?: boolean;
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description DefaultBGPGroupStatus defines the observed state of DefaultBGPGroup.
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the BGP group.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Peers
                 * Format: int32
                 * @description Number of configured BGP peers within the BGP Group.
                 */
                numPeers?: number;
                /**
                 * Number of Peers Operational Down
                 * Format: int32
                 * @description Number of configured BGP peers which have an Operational State of down within the BGP Group.
                 */
                numPeersOperDown?: number;
                /**
                 * Number of unknown BGP Peers
                 * Format: int32
                 * @description Number of configured BGP peers within the BGP Group which cannot be reached by npp.
                 */
                numPeersUnknown?: number;
                /**
                 * Operational State
                 * @description Operational state of the BGP group.
                 */
                operationalState?: string;
            };
        };
        /** @description DefaultBGPGroupList is a list of defaultbgpgroups */
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPGroupList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultBGPPeer is the Schema for the defaultbgppeers API */
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultBGPPeer */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer_metadata"];
            /**
             * Specification
             * @description DefaultBGPPeer enables the configuration of BGP sessions within a DefaultRouter. It allows specifying a description, a DefaultInterface reference, and the peer IP address. The resource also supports dynamic neighbors, common BGP settings, and peer-specific configurations.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * Route Reflector Client
                 * @description When set to true, all configured and dynamic BGP peers are considered RR clients.
                 */
                client?: boolean;
                /**
                 * Cluster ID
                 * Format: ip
                 * @description Enables route reflect client and sets the cluster ID.
                 */
                clusterID?: string;
                /**
                 * Description
                 * @description Sets the description on the BGP peer.
                 */
                description?: string;
                /**
                 * Dynamic Neighbor
                 * @description When set to true the DefaultInterface is added to the dynamic-neighbor list for dynamic peering.
                 * @default false
                 */
                dynamicNeighbor: boolean;
                /**
                 * Dynamic Neighbor Allowed Peer AS
                 * @description The autonomous system numbers allowed from peers if dynamic peering is enabled.
                 */
                dynamicNeighborAllowedPeerAS?: number[];
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Group
                 * @description Reference to a DefaultBGPGroup.
                 */
                group: string;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * Interface
                 * @description Reference to either a DefaultInterface or SystemInterface whose IP will be used as a source IP for the BGP session.
                 */
                interface: string;
                /**
                 * Interface Kind
                 * @description Reference to a the Kind of interface whose IP will be used as a source IP for the BGP session.
                 * @enum {string}
                 */
                interfaceKind: "DEFAULTINTERFACE" | "SYSTEMINTERFACE";
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * L2VPN EVPN
                 * @description Parameters relating to the EVPN AFI/SAFI.
                 */
                l2VPNEVPN?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of EVPN routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the L2VPN EVPN AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of EVPN routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Local Preference
                 * @description Local Preference attribute added to received routes from the BGP peers, also sets local preference for generated routes.
                 */
                localPreference?: number;
                /**
                 * Multihop Max Hop Count
                 * @description Enable multihop for eBGP peers and sets the maximum number of hops allowed.
                 */
                multiHopMaxHop?: number;
                /**
                 * Next Hop Self
                 * @description When set to true, the next-hop in all IPv4-unicast, IPv6-unicast and EVPN BGP routes advertised to the peer is set to the local-address.
                 */
                nextHopSelf?: boolean;
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Peer IP
                 * Format: ip
                 * @description Peer IP to which the peering session will be established. There cannot be both a PeerIp and PeerDefaultInterface property set.
                 */
                peerIP?: string;
                /**
                 * Peer DefaultInterface
                 * @description Reference to a DefaultInterface or SystemInterface resource to which the peering session will be established. There cannot be both a PeerIp and PeerDefaultInterface property set.
                 */
                peerInterface?: string;
                /**
                 * Peer DefaultInterface Kind
                 * @description Reference to a the Kind of interface to which to peer to.
                 * @enum {string}
                 */
                peerInterfaceKind?: "DEFAULTINTERFACE" | "SYSTEMINTERFACE";
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description DefaultBGPPeerStatus defines the observed state of DefaultBGPPeer
             */
            readonly status?: {
                /**
                 * Enabled
                 * @description Indicated whether the BGP Peer is administratively enabled.
                 */
                enabled?: boolean;
                /**
                 * Health
                 * @description Indicates the health score of the BGP peer.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Last Event
                 * @description Last event of the BGP peer.
                 */
                lastEvent?: string;
                /**
                 * Last State
                 * @description Last state of the BGP peer.
                 */
                lastState?: string;
                /**
                 * Negotiated Hold Time
                 * @description Hold time negotiated with the BGP peer.
                 */
                negotiatedHoldTime?: number;
                /**
                 * Negotiated Keepalive Interval
                 * @description Keepalive interval negotiated with the BGP peer.
                 */
                negotiatedKeepaliveInterval?: number;
                /**
                 * Operational State
                 * @description Operational state of the BGP peer
                 */
                operationalState?: string;
                /**
                 * Peer AS
                 * @description Peer AS of the BGP peer.
                 */
                peerAS?: number;
                /**
                 * Session State
                 * @description The state of the BGP session.
                 */
                sessionState?: string;
                /**
                 * Under Maintenance
                 * @description Indicates if the BGP peer is under maintenance.
                 */
                underMaintenance?: boolean;
            };
        };
        /** @description DefaultBGPPeerList is a list of defaultbgppeers */
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPPeerList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultRouteReflector is the Schema for the defaultroutereflectors API */
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultRouteReflector */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector_metadata"];
            /**
             * Specification
             * @description DefaultRouteReflector enables the configuration of iBGP sessions to RouteReflectorClients. It includes settings for the DefaultInterface, BGP group, client selectors, and the Cluster ID. Additionally, it allows for the configuration of L2VPN EVPN settings and applies common BGP configuration settings to manage routing efficiently within the network.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * Client IPs
                 * @description List of RR client IPs to which the iBGP sessions are established.
                 */
                clientIPs?: string[];
                /**
                 * Client Selector
                 * Format: labelselector
                 * @description Label selector used to select the RouteReflectorClients to which the iBGP sessions are established.
                 */
                clientSelector?: string[];
                /**
                 * Cluster ID
                 * @description Sets the cluster ID for route reflectors.
                 */
                clusterID: string;
                /**
                 * Default BGP RR Group
                 * @description Reference to a DefaultBGPGroup.
                 */
                defaultBGPRRGroup: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * Interface Reference
                 * @description Reference to either a DefaultInterface or SystemInterface from which the session to the client will be done from.
                 */
                interface: string;
                /**
                 * Interface Kind
                 * @description Reference to a the Kind of interface from which the session to the client will be done from.
                 * @enum {string}
                 */
                interfaceKind: "DEFAULTINTERFACE" | "SYSTEMINTERFACE";
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * L2VPN EVPN
                 * @description Parameters relating to the EVPN AFI/SAFI.
                 */
                l2VPNEVPN?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of EVPN routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the L2VPN EVPN AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of EVPN routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description DefaultRouteReflectorStatus defines the observed state of DefaultRouteReflector
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the Route Reflector.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Route Reflector BGP Peers
                 * @description Total number of configured route reflector client peers on the route reflector.
                 */
                numRouteReflectorBGPPeers?: number;
                /**
                 * Number of Oper Down Route Reflector BGP Peers
                 * @description Total number of configured route reflector client peers on the route reflector that are operationally down.
                 */
                numRouteReflectorBGPPeersOperDown?: number;
                /**
                 * Oper Down Route Reflector Peers
                 * @description List of route reflector BGPPeers which are operationally down.
                 */
                operDownRouteReflectorPeers?: string[];
                /**
                 * Operational State
                 * @description Operational state of the Route Reflector.
                 */
                operationalState?: string;
            };
        };
        /** @description DefaultRouteReflectorClient is the Schema for the defaultroutereflectorclients API */
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultRouteReflectorClient */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient_metadata"];
            /**
             * Specification
             * @description DefaultRouteReflectorClient enables the configuration of iBGP sessions from a client to RouteReflectors. It includes settings for the DefaultInterface, BGP group, client selectors, and a list of Route Reflector IPs. Additionally, it allows for the configuration of L2VPN EVPN settings and applies common BGP configuration settings to manage routing efficiently within the network.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * Default BGP Client Group
                 * @description Reference to Default Bgp Group.
                 */
                defaultBgpClientGroup: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * Interface
                 * @description Reference to either a DefaultInterface or SystemInterface from which the session to the RR will be done from.
                 */
                interface: string;
                /**
                 * Interface Kind
                 * @description Reference to a the Kind of interface from which the session to the RR will be done from.
                 * @enum {string}
                 */
                interfaceKind: "DEFAULTINTERFACE" | "SYSTEMINTERFACE";
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * L2VPN EVPN
                 * @description Parameters relating to the EVPN AFI/SAFI.
                 */
                l2VPNEVPN?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of EVPN routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the L2VPN EVPN AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of EVPN routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Route Reflector IPs
                 * @description List of the peering IPs on the RRs to which peering session is established.
                 */
                routeReflectorIPs?: string[];
                /**
                 * Route Reflector Selector
                 * Format: labelselector
                 * @description Label selector used to select the RouteReflectors to which the iBGP sessions are established.
                 */
                routeReflectorSelector?: string[];
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description DefaultRouteReflectorClientStatus defines the observed state of DefaultRouteReflectorClient
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the DefaultRouteReflectorClient.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Route Reflector Client BGP Peers
                 * @description Total number of configured route reflector peers on the route reflector client.
                 */
                numRouteReflectorClientBGPPeers?: number;
                /**
                 * Number of Oper Down Route Reflector Client BGP Peers
                 * @description Total number of configured route reflector peers on the route reflector client that are operationally down.
                 */
                numRouteReflectorClientBGPPeersOperDown?: number;
                /**
                 * Oper Down Route Reflector Client Peers
                 * @description List of route reflector BGPPeers which are operationally down.
                 */
                operDownRouteReflectorClientPeers?: string[];
                /**
                 * Operational State
                 * @description Operational state of the DefaultRouteReflectorClient.
                 */
                operationalState?: string;
            };
        };
        /** @description DefaultRouteReflectorClientList is a list of defaultroutereflectorclients */
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClientList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultRouteReflectorList is a list of defaultroutereflectors */
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DefaultStaticRoute is the Schema for the defaultstaticroutes API */
        "com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DefaultStaticRoute */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute_metadata"];
            /**
             * Specification
             * @description DefaultStaticRoute enables the configuration of static routes within a DefaultRouter. It allows specifying destination prefixes, route preference, and a nexthop group. This resource facilitates precise control over routing behavior, including options for BFD, route resolution, and blackholing traffic.
             */
            spec: {
                /**
                 * Default Router
                 * @description Reference to a DefaultRouter on which to configure the static routes.
                 */
                defaultRouter: string;
                /**
                 * Nexthop Group
                 * @description Group of nexthops for the list of prefixes.
                 */
                nexthopGroup: {
                    /**
                     * BFD
                     * @description Enables BFD to the next-hops in the group. Local and Remote discriminator parameters have been deprecated at this level. Use Nexthop to set these parameters.
                     */
                    bfd?: {
                        /**
                         * Enabled
                         * @description Defines whether BFD should be enabled towards the nexthops.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Local Address
                         * @description Defines the local address to use when establishing the BFD session with the nexthop.
                         */
                        localAddress?: string;
                        /**
                         * Local Discriminator
                         * @description Defines the local discriminator.
                         */
                        localDiscriminator?: number;
                        /**
                         * Remote Discriminator
                         * @description Defines the remote discriminator.
                         */
                        remoteDiscriminator?: number;
                    };
                    /**
                     * Blackhole
                     * @description If set to true all traffic destined to the prefixes will be blackholed.  If enabled, next-hops are ignored and this takes precedence.
                     * @default false
                     */
                    blackhole: boolean;
                    /**
                     * Nexthops
                     * @description Ordered list of nexthops.
                     */
                    nexthops?: {
                        /**
                         * BFD
                         * @description Enables BFD to the next-hops in the group. This overrides the configuration at the group.
                         */
                        bfd?: {
                            /**
                             * Enabled
                             * @description Defines whether BFD should be enabled towards the nexthops.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * Local Address
                             * @description Defines the local address to use when establishing the BFD session with the nexthop.
                             */
                            localAddress?: string;
                            /**
                             * Local Discriminator
                             * @description Defines the local discriminator.
                             */
                            localDiscriminator?: number;
                            /**
                             * Remote Discriminator
                             * @description Defines the remote discriminator.
                             */
                            remoteDiscriminator?: number;
                        };
                        /**
                         * IP Prefix
                         * Format: ip
                         * @description Address to use.
                         */
                        ipPrefix: string;
                        /**
                         * Resolve
                         * @description If set to true the next-hops can be destinations which are resolved in the route table. This overrides the configuration at the group.
                         * @default false
                         */
                        resolve: boolean;
                    }[];
                    /**
                     * Resolve
                     * @description If set to true the next-hops can be destinations which are resolved in the route table.
                     * @default false
                     */
                    resolve: boolean;
                };
                /**
                 * Preference
                 * @description Defines the route preference.
                 */
                preference?: number;
                /**
                 * Prefixes
                 * @description List of destination prefixes and mask to use for the static routes.
                 */
                prefixes: string[];
            };
            /**
             * Status
             * @description DefaultStaticRouteStatus defines the observed state of default static route
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the static routes.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Operational state of the static routes.
                 */
                operationalState?: string;
            };
        };
        /** @description DefaultStaticRouteList is a list of defaultstaticroutes */
        "com.nokia.eda.protocols.v1alpha1.DefaultStaticRouteList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description RouteReflector is the Schema for the routereflectors API */
        "com.nokia.eda.protocols.v1alpha1.RouteReflector": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default RouteReflector */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector_metadata"];
            /**
             * Specification
             * @description RouteReflector enables the configuration of iBGP sessions with RouteReflectorClients. It includes settings for selecting Interfaces, client selectors for IPv4 and IPv6, and the option to specify a BGP group and cluster ID.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * BGP Group
                 * @description Reference to BgpGroup
                 */
                bgpGroup: string;
                /**
                 * Client IPs
                 * @description List of RR client IPs to which the iBGP sessions are established.
                 */
                clientIPs?: string[];
                /**
                 * Cluster ID
                 * Format: ip
                 * @description Sets the cluster ID for route reflectors.
                 */
                clusterID: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * Interface Reference
                 * @description Reference to a RoutedInterface or IrbInterface resource whose IP will be used as a source IP for the BGP session.
                 */
                interface: string;
                /**
                 * Interface Reference Type
                 * @description InterfaceReference type defines whether the provided Reference is a RoutedInterface or IrbInterface.
                 * @enum {string}
                 */
                interfaceKind: "ROUTEDINTERFACE" | "IRBINTERFACE";
                /**
                 * IPv4 Client Selector
                 * Format: labelselector
                 * @description Label selector used to select the RouteReflectorClients to which the iBGP sessions are established for IPv4.
                 */
                ipv4ClientSelector?: string[];
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Client Selector
                 * Format: labelselector
                 * @description Label selector used to select the RouteReflectorClients to which the iBGP sessions are established for IPv6.
                 */
                ipv6ClientSelector?: string[];
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description RouteReflectorStatus defines the observed state of RouteReflector
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the RouteReflector.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Route Reflector BGP Peers
                 * @description Total number of configured route reflector client peers on the route reflector.
                 */
                numRouteReflectorBGPPeers?: number;
                /**
                 * Number of Oper Down Route Reflector BGP Peers
                 * @description Total number of configured route reflector client peers on the route reflector that are operationally down.
                 */
                numRouteReflectorBGPPeersOperDown?: number;
                /**
                 * Oper Down Route Reflector Peers
                 * @description List of route reflector BGPPeers which are operationally down.
                 */
                operDownRouteReflectorPeers?: string[];
                /**
                 * Operational State
                 * @description Operational state of the RouteReflector.
                 */
                operationalState?: string;
            };
        };
        /** @description RouteReflectorClient is the Schema for the routereflectorclients API */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClient": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default RouteReflectorClient */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient_metadata"];
            /**
             * Specification
             * @description RouteReflectorClient manages the configuration of iBGP sessions between a client and RouteReflectors. This resource allows you to specify the Interface for BGP sessions, set selectors for RouteReflectors, and configure common BGP settings.
             */
            spec: {
                /**
                 * AS Path Options
                 * @description AS Path Options
                 */
                asPathOptions?: {
                    /**
                     * Allow Own AS
                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                     * @default 0
                     */
                    allowOwnAS: number;
                    /**
                     * Remove Private AS
                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                     */
                    removePrivateAS?: {
                        /**
                         * Ignore Peer AS
                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                         * @default false
                         */
                        ignorePeerAS: boolean;
                        /**
                         * Leading Only
                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                         * @default false
                         */
                        leadingOnly: boolean;
                        /**
                         * Remove Private AS Mode
                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                         * @default DISABLED
                         * @enum {string}
                         */
                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                    };
                };
                /**
                 * BFD
                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                 */
                bfd?: boolean;
                /**
                 * BGP Group
                 * @description Reference to BgpGroup.
                 */
                bgpGroup: string;
                /**
                 * Export Policy
                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                 */
                exportPolicy?: string[];
                /**
                 * GR Stale Route Time
                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                 */
                grStaleRouteTime?: number;
                /**
                 * Import Policy
                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                 */
                importPolicy?: string[];
                /**
                 * Interface Reference
                 * @description Reference to a RoutedInterface or IrbInterface resource whose IP will be used as a source IP for the BGP session.
                 */
                interface: string;
                /**
                 * Interface Reference Type
                 * @description InterfaceReference type defines whether the provided Reference is a RoutedInterface or IrbInterface.
                 * @enum {string}
                 */
                interfaceKind: "ROUTEDINTERFACE" | "IRBINTERFACE";
                /**
                 * IPv4 Route Reflector Selector
                 * Format: labelselector
                 * @description Label selector used to select the RouteReflectors to which the iBGP sessions are established for IPv4.
                 */
                ipv4RouteReflectorSelector?: string[];
                /**
                 * IPv4 Unicast
                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                 */
                ipv4Unicast?: {
                    /**
                     * Advertise IPv6 Next Hops
                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                     */
                    advertiseIPV6NextHops?: boolean;
                    /**
                     * Enabled
                     * @description Enables the IPv4 unicast AFISAFI.
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                    /**
                     * Receive IPv6 Next Hops
                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                     */
                    receiveIPV6NextHops?: boolean;
                };
                /**
                 * IPv6 Route Reflector Selector
                 * Format: labelselector
                 * @description Label selector used to select the RouteReflectors to which the iBGP sessions are established for IPv6.
                 */
                ipv6RouteReflectorSelector?: string[];
                /**
                 * IPv6 Unicast
                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                 */
                ipv6Unicast?: {
                    /**
                     * Enabled
                     * @description Enables the IPv6 unicast AFISAFI
                     */
                    enabled?: boolean;
                    /**
                     * Max Received Routes
                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                     */
                    maxReceivedRoutes?: number;
                };
                /**
                 * Keychain
                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                 */
                keychain?: string;
                /**
                 * Local AS
                 * @description The local autonomous system number advertised to peers.
                 */
                localAS?: {
                    /**
                     * Local Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                    /**
                     * Prepend Global Autonomous System
                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                     */
                    prependGlobalAS?: boolean;
                    /**
                     * Prepend Local Autonomous System
                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                     */
                    prependLocalAS?: boolean;
                };
                /**
                 * Peer AS
                 * @description The autonomous system number expected from peers.
                 */
                peerAS?: {
                    /**
                     * Peer Autonomous System
                     * @description Local Autonomous System number.
                     */
                    autonomousSystem: number;
                };
                /**
                 * Route Reflector IPs
                 * @description List of the peering IPs on the RRs to which peering session is established.
                 */
                routeReflectorIPs?: string[];
                /**
                 * Send Community Large
                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityLarge?: boolean;
                /**
                 * Send Community Standard
                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                 */
                sendCommunityStandard?: boolean;
                /**
                 * Send Default Route
                 * @description Options for controlling the generation of default routes towards BGP peers.
                 */
                sendDefaultRoute?: {
                    /**
                     * Address Families
                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                     */
                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                    /**
                     * Export Policy
                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                     */
                    exportPolicy?: string;
                };
                /**
                 * Timers
                 * @description Timer configurations
                 */
                timers?: {
                    /**
                     * Connect Retry
                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                     */
                    connectRetry?: number;
                    /**
                     * Hold Time
                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                     */
                    holdTime?: number;
                    /**
                     * Keep Alive
                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                     */
                    keepAlive?: number;
                    /**
                     * Minimum Advertisement Interval
                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                     */
                    minimumAdvertisementInterval?: number;
                };
            };
            /**
             * Status
             * @description RouteReflectorClientStatus defines the observed state of RouteReflectorClient
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the RouteReflectorClient.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Route Reflector Client BGP Peers
                 * @description Total number of configured route reflector peers on the route reflector client.
                 */
                numRouteReflectorClientBGPPeers?: number;
                /**
                 * Number of Oper Down Route Reflector Client BGP Peers
                 * @description Total number of configured route reflector peers on the route reflector client that are operationally down.
                 */
                numRouteReflectorClientBGPPeersOperDown?: number;
                /**
                 * Oper Down Route Reflector Client Peers
                 * @description List of route reflector BGPPeers which are operationally down.
                 */
                operDownRouteReflectorClientPeers?: string[];
                /**
                 * Operational State
                 * @description Operational state of the RouteReflectorClient.
                 */
                operationalState?: string;
            };
        };
        /** @description RouteReflectorClientList is a list of routereflectorclients */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClientList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"][];
            kind: string;
        };
        /** @description RouteReflectorClientState is the Schema for the routereflectorclientstates API */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default RouteReflectorClientState */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState_metadata"];
            /**
             * Specification
             * @description RouteReflectorClientStateSpec defines the desired state of RouteReflectorClientState
             */
            spec: {
                /** @description Denotes if the route reflector client is a DefaultRouteReflectorClient or RouteReflectorClient */
                defaultRouteReflectorClient?: boolean;
                /** @description A list of BGPPeers configured on the route reflector client to peer with route reflectors */
                routeReflectorClientBGPPeers?: string[];
            };
            /**
             * Status
             * @description RouteReflectorClientStateStatus defines the observed state of RouteReflectorClientState
             */
            readonly status?: Record<string, never>;
        };
        /** @description RouteReflectorClientStateList is a list of routereflectorclientstates */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClientStateList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClient_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClient_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorClient_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description RouteReflectorList is a list of routereflectors */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"][];
            kind: string;
        };
        /** @description RouteReflectorState is the Schema for the routereflectorstates API */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorState": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default RouteReflectorState */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState_metadata"];
            /**
             * Specification
             * @description RouteReflectorStateSpec defines the desired state of RouteReflectorState
             */
            spec: {
                /** @description Denotes if the route reflector is a DefaultRouteReflector or RouteReflector */
                defaultRouteReflector?: boolean;
                /** @description A list of BGPPeers configured on the route reflector to peer with clients */
                routeReflectorBGPPeers?: string[];
            };
            /**
             * Status
             * @description RouteReflectorStateStatus defines the observed state of RouteReflectorState
             */
            readonly status?: Record<string, never>;
        };
        /** @description RouteReflectorStateList is a list of routereflectorstates */
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorStateList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorState_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorState_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.RouteReflectorState_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflector_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.RouteReflector_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.RouteReflector_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description StaticRoute is the Schema for the staticroutes API */
        "com.nokia.eda.protocols.v1alpha1.StaticRoute": {
            /** @default protocols.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default StaticRoute */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute_metadata"];
            /**
             * Specification
             * @description StaticRoute allows for the specification of destination prefixes, route preferences, and the associated Router. It also supports configuring nexthop groups and specifying the nodes where the static routes should be provisioned.
             */
            spec: {
                /**
                 * Nexthop Group
                 * @description Group of nexthops for the list of prefixes.
                 */
                nexthopGroup: {
                    /**
                     * BFD
                     * @description Enables BFD to the next-hops in the group. Local and Remote discriminator parameters have been deprecated at this level. Use Nexthop to set these parameters.
                     */
                    bfd?: {
                        /**
                         * Enabled
                         * @description Defines whether BFD should be enabled towards the nexthops.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Local Address
                         * @description Defines the local address to use when establishing the BFD session with the nexthop.
                         */
                        localAddress?: string;
                        /**
                         * Local Discriminator
                         * @description Defines the local discriminator.
                         */
                        localDiscriminator?: number;
                        /**
                         * Remote Discriminator
                         * @description Defines the remote discriminator.
                         */
                        remoteDiscriminator?: number;
                    };
                    /**
                     * Blackhole
                     * @description If set to true all traffic destined to the prefixes will be blackholed.  If enabled, next-hops are ignored and this takes precedence.
                     * @default false
                     */
                    blackhole: boolean;
                    /**
                     * Nexthops
                     * @description Ordered list of nexthops.
                     */
                    nexthops?: {
                        /**
                         * BFD
                         * @description Enables BFD to the next-hops in the group. This overrides the configuration at the group.
                         */
                        bfd?: {
                            /**
                             * Enabled
                             * @description Defines whether BFD should be enabled towards the nexthops.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * Local Address
                             * @description Defines the local address to use when establishing the BFD session with the nexthop.
                             */
                            localAddress?: string;
                            /**
                             * Local Discriminator
                             * @description Defines the local discriminator.
                             */
                            localDiscriminator?: number;
                            /**
                             * Remote Discriminator
                             * @description Defines the remote discriminator.
                             */
                            remoteDiscriminator?: number;
                        };
                        /**
                         * IP Prefix
                         * Format: ip
                         * @description Address to use.
                         */
                        ipPrefix: string;
                        /**
                         * Resolve
                         * @description If set to true the next-hops can be destinations which are resolved in the route table. This overrides the configuration at the group.
                         * @default false
                         */
                        resolve: boolean;
                    }[];
                    /**
                     * Resolve
                     * @description If set to true the next-hops can be destinations which are resolved in the route table.
                     * @default false
                     */
                    resolve: boolean;
                };
                /**
                 * Nodes
                 * @description List of nodes on which to configure the static routes. An AND operation is executed against the nodes in this list and the nodes on which the Router is configured to determine the Nodes on which to configure the static routes.
                 */
                nodes?: string[];
                /**
                 * Preference
                 * @description Defines the route preference.
                 */
                preference?: number;
                /**
                 * Prefixes
                 * @description List of destination prefixes and mask to use for the static routes.
                 */
                prefixes: string[];
                /**
                 * Router
                 * @description Reference to a Router on which to configure the static routes.  If no Nodes are provided then the static routes will be provisioned on all Nodes on which the Router is provisioned.
                 */
                router: string;
            };
            /**
             * Status
             * @description StaticRouteStatus defines the observed state of Static Route
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the static routes.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Nodes
                 * @description List of Nodes on which the static routes are configured.
                 */
                nodes?: string[];
                /**
                 * Operational State
                 * @description Operational state of the static routes.
                 */
                operationalState?: string;
            };
        };
        /** @description StaticRouteList is a list of staticroutes */
        "com.nokia.eda.protocols.v1alpha1.StaticRouteList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"][];
            kind: string;
        };
        "com.nokia.eda.protocols.v1alpha1.StaticRoute_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.protocols.v1alpha1.StaticRoute_DeletedResources": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute_DeletedResourceEntry"][];
        "com.nokia.eda.protocols.v1alpha1.StaticRoute_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionProtocolsEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesProtocolsEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiProtocolsEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Aggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Bgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroupList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Bgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Bgppeerstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Defaultaggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Defaultbgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroupList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Defaultbgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeerList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Defaultroutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClientList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Defaultroutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Defaultstaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the AggregateRoute to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the AggregateRoute to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.AggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceAggregateroutes: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the AggregateRoute to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroupList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroupList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the BGPGroup to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the BGPGroup to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceBgpgroups: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the BGPGroup to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the BGPPeer to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the BGPPeer to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceBgppeers: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the BGPPeer to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the BGPPeerState to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the BGPPeerState to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.BGPPeerState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceBgppeerstates: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the BGPPeerState to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultAggregateRoute to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultAggregateRoute to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultAggregateRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultaggregateroutes: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultAggregateRoute to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroupList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroupList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultBGPGroup to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultBGPGroup to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgpgroups: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultBGPGroup to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeerList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeerList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultBGPPeer to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultBGPPeer to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultBGPPeer"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultbgppeers: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultBGPPeer to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClientList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClientList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultRouteReflectorClient to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultRouteReflectorClient to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectorclients: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultRouteReflectorClient to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflectorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultRouteReflector to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultRouteReflector to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultRouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultroutereflectors: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultRouteReflector to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DefaultStaticRoute to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DefaultStaticRoute to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.DefaultStaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceDefaultstaticroutes: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DefaultStaticRoute to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the RouteReflectorClient to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the RouteReflectorClient to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClient"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclients: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the RouteReflectorClient to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the RouteReflectorClientState to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the RouteReflectorClientState to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorclientstates: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the RouteReflectorClientState to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the RouteReflector to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the RouteReflector to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflector"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectors: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the RouteReflector to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the RouteReflectorState to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the RouteReflectorState to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorState"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceRoutereflectorstates: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the RouteReflectorState to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the StaticRoute to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the StaticRoute to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRoute"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryProtocolsEdaNokiaComV1alpha1NamespaceStaticroutes: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the StaticRoute to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Routereflectorclients: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Routereflectorclientstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorClientStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Routereflectors: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Routereflectorstates: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.RouteReflectorStateList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listProtocolsEdaNokiaComV1alpha1Staticroutes: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.protocols.v1alpha1.StaticRouteList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
