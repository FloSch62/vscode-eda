{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.prom.v1alpha1.Export": {
        "description": "Export is the Schema for the exports API",
        "properties": {
          "apiVersion": {
            "default": "prom.eda.nokia.com/v1alpha1",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Export",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export_metadata"
          },
          "spec": {
            "description": "ExportSpec defines the desired state of Export",
            "properties": {
              "exports": {
                "description": "Exports is the list of metrics and their sources to be exposed to Prometheus",
                "items": {
                  "description": "Metric defines a metric to be exported",
                  "properties": {
                    "fields": {
                      "description": "An optional set of fields to be exposed by this export.",
                      "items": {
                        "type": "string"
                      },
                      "title": "Fields",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 200
                      }
                    },
                    "labels": {
                      "description": "Labels allows to add labels to the generated metrics,\neither statically (predefined set of label/value) or\ndynamically based on a path+field\nretrieved from EDB.",
                      "properties": {
                        "dynamic": {
                          "description": "DynamicLabels defines a list of dynamic labels to add to the metrics.\nThe only supported dynamic source is a path+field from SA.\nThe regex and replacement are used to extract the Label value from SA response.",
                          "items": {
                            "properties": {
                              "field": {
                                "description": "The field name to add as a label",
                                "title": "Field",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1200
                                }
                              },
                              "path": {
                                "description": "The state DB path to export, in the format '.node.srl.interface'",
                                "title": "Path",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1100
                                }
                              },
                              "regex": {
                                "description": "A regular expression to be applied to the field value.",
                                "title": "Regex",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1300
                                }
                              },
                              "replacement": {
                                "description": "A regular expression replacement to be applied to the field value.",
                                "title": "Replacement",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 1400
                                }
                              }
                            },
                            "type": "object"
                          },
                          "title": "Dynamic Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 1000
                          }
                        },
                        "static": {
                          "description": "StaticLabels defines a list of static labels and values to\nbe added to the default labels of the generated metric.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Label name.",
                                "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                                "title": "Name",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 800
                                }
                              },
                              "value": {
                                "description": "Label value.",
                                "title": "Value",
                                "type": "string",
                                "x-eda-nokia-com": {
                                  "ui-order-priority": 900
                                }
                              }
                            },
                            "type": "object"
                          },
                          "title": "Static Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 700
                          }
                        }
                      },
                      "title": "Labels",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 600
                      }
                    },
                    "mappings": {
                      "description": "Mappings are a set of rules used to map metrics values to values\nthat can be ingested by Prometheus, e.g: DOWN->1, UP->2",
                      "items": {
                        "properties": {
                          "destination": {
                            "description": "Destination defines the new value.\nIt can be a regular expression with replacement groups.\nIts data type must be convertible to a float64.",
                            "pattern": "^-?\\d+(\\.\\d+)?([eE][+-]?\\d+)?$",
                            "title": "Destination",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1700
                            }
                          },
                          "source": {
                            "description": "Source defines the value to be mapped.\nIt can be a regular expression with capture groups.",
                            "title": "Source",
                            "type": "string",
                            "x-eda-nokia-com": {
                              "ui-order-priority": 1600
                            }
                          }
                        },
                        "type": "object"
                      },
                      "title": "Mappings",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 1500
                      }
                    },
                    "metricName": {
                      "description": "metric name renaming regex and replacement",
                      "properties": {
                        "regex": {
                          "description": "A regular expression to be applied to the metric name",
                          "title": "Regex",
                          "type": "string"
                        },
                        "replacement": {
                          "description": "A regular expression replacement to be applied to the metric name",
                          "title": "Replacement",
                          "type": "string"
                        }
                      },
                      "title": "Metric Name",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 500
                      }
                    },
                    "path": {
                      "description": "The state DB path to export, in the format '.namespace.node.srl.interface'",
                      "title": "Path",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 100
                      }
                    },
                    "prefix": {
                      "description": "An optional prefix to add to all metrics exposed by this export, for example 'interface'",
                      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                      "title": "Prefix",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 400
                      }
                    },
                    "resource": {
                      "description": "A Custom resource to be used as a source for the metric.\nIt will generate a metric with the CR labels and a value of 1.",
                      "properties": {
                        "group": {
                          "description": "The CR group such as `core.eda.nokia.com`.",
                          "title": "Group",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 370
                          }
                        },
                        "kind": {
                          "description": "The CR kind such as `toponode`.",
                          "title": "Kind",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 390
                          }
                        },
                        "labels": {
                          "description": "List of labels to include with the metric.\nInclude all if not set.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Labels",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 392
                          }
                        },
                        "name": {
                          "description": "CR name to be queried.\nGet all of not set.",
                          "title": "Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 391
                          }
                        },
                        "namespace": {
                          "description": "The CR namespace, it defaults to all if not specified.",
                          "title": "Namespace",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 360
                          }
                        },
                        "version": {
                          "description": "The CR version such as `v1` or `v1alpha1`.",
                          "title": "Version",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 380
                          }
                        }
                      },
                      "title": "Custom Resource",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 350
                      }
                    },
                    "where": {
                      "description": "A where clause to use for the query, e.g. 'oper-state = down'. You can omit enclosing parentheses.",
                      "title": "Where",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 300
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Exports",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 50
                }
              },
              "group": {
                "description": "Metric group, defines the collector the metrics belong to.",
                "pattern": "^[a-zA-Z0-9._~-]+$",
                "title": "Group",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-order-priority": 2000
                }
              }
            },
            "required": [
              "exports"
            ],
            "title": "Specification",
            "type": "object"
          },
          "status": {
            "description": "ExportStatus defines the observed state of Export",
            "readOnly": true,
            "title": "Status",
            "type": "object"
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.prom.v1alpha1.ExportList": {
        "description": "ExportList is a list of exports",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.prom.v1alpha1.Export_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.prom.v1alpha1.Export_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.prom.v1alpha1.Export_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "prom.eda.nokia.com",
                  "kind": "Export",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Prometheus Exporter Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/prom.eda.nokia.com": {
      "get": {
        "description": "list versions available from prom.eda.nokia.com",
        "operationId": "getVersionPromEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/prom.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from prom.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesPromEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/prom.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for prom.eda.nokia.com v1alpha1",
        "operationId": "uiPromEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/prom.eda.nokia.com/v1alpha1/exports": {
      "delete": {
        "description": "Delete all instances of Export.  If Export is a namespaced resource, all instances in all namespaces will\nbe deleted, and this is restricted to users with the system-administrator role.\nIf a non-namespaced Export, it deletes all instances of that non-namespaced resource.",
        "operationId": "deleteAllPromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "list exports",
        "operationId": "listPromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.ExportList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a non-namespaced Export",
        "operationId": "createPromEdaNokiaComV1alpha1Exports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/prom.eda.nokia.com/v1alpha1/exports/_deleted": {
      "get": {
        "operationId": "getDeletedPromEdaNokiaComV1alpha1Exports",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Export that have been deleted.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/prom.eda.nokia.com/v1alpha1/exports/{name}": {
      "delete": {
        "description": "delete the specified non-namespaced Export",
        "operationId": "deletePromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "name of the Export to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified non-namespaced Export.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readPromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "name of the Export to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a non-namespaced Export",
        "operationId": "patchPromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a non-namespaced Export",
        "operationId": "replacePromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.prom.v1alpha1.Export"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/prom.eda.nokia.com/v1alpha1/exports/{name}/_revs": {
      "get": {
        "operationId": "getHistoryPromEdaNokiaComV1alpha1Exports",
        "parameters": [
          {
            "description": "name of the Export to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified non-namespaced Export.",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}