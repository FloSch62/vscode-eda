/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/topologies.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from topologies.eda.nokia.com */
        get: operations["getVersionTopologiesEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from topologies.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesTopologiesEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for topologies.eda.nokia.com v1alpha1 */
        get: operations["uiTopologiesEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/cpuutiloverlays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list cpuutiloverlays */
        get: operations["listTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        put?: never;
        /** @description create a non-namespaced CPUUtilOverlay */
        post: operations["createTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        /** @description Delete all instances of CPUUtilOverlay.  If CPUUtilOverlay is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced CPUUtilOverlay, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/cpuutiloverlays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of CPUUtilOverlay that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/cpuutiloverlays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced CPUUtilOverlay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        /** @description replace a non-namespaced CPUUtilOverlay */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        post?: never;
        /** @description delete the specified non-namespaced CPUUtilOverlay */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced CPUUtilOverlay */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/cpuutiloverlays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced CPUUtilOverlay. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Cpuutiloverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/deviationoverlays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list deviationoverlays */
        get: operations["listTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        put?: never;
        /** @description create a non-namespaced DeviationOverlay */
        post: operations["createTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        /** @description Delete all instances of DeviationOverlay.  If DeviationOverlay is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced DeviationOverlay, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/deviationoverlays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DeviationOverlay that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/deviationoverlays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced DeviationOverlay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        /** @description replace a non-namespaced DeviationOverlay */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        post?: never;
        /** @description delete the specified non-namespaced DeviationOverlay */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced DeviationOverlay */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/deviationoverlays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced DeviationOverlay. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Deviationoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/diskoverlays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list diskoverlays */
        get: operations["listTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        put?: never;
        /** @description create a non-namespaced DiskOverlay */
        post: operations["createTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        /** @description Delete all instances of DiskOverlay.  If DiskOverlay is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced DiskOverlay, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/diskoverlays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DiskOverlay that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/diskoverlays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced DiskOverlay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        /** @description replace a non-namespaced DiskOverlay */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        post?: never;
        /** @description delete the specified non-namespaced DiskOverlay */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced DiskOverlay */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/diskoverlays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced DiskOverlay. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Diskoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/lldpoverlays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list lldpoverlays */
        get: operations["listTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        put?: never;
        /** @description create a non-namespaced LldpOverlay */
        post: operations["createTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        /** @description Delete all instances of LldpOverlay.  If LldpOverlay is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced LldpOverlay, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/lldpoverlays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of LldpOverlay that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/lldpoverlays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced LldpOverlay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        /** @description replace a non-namespaced LldpOverlay */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        post?: never;
        /** @description delete the specified non-namespaced LldpOverlay */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced LldpOverlay */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/lldpoverlays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced LldpOverlay. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Lldpoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/memoryoverlays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list memoryoverlays */
        get: operations["listTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        put?: never;
        /** @description create a non-namespaced MemoryOverlay */
        post: operations["createTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        /** @description Delete all instances of MemoryOverlay.  If MemoryOverlay is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced MemoryOverlay, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/memoryoverlays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of MemoryOverlay that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/memoryoverlays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced MemoryOverlay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        /** @description replace a non-namespaced MemoryOverlay */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        post?: never;
        /** @description delete the specified non-namespaced MemoryOverlay */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced MemoryOverlay */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/memoryoverlays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced MemoryOverlay. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Memoryoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list topologies */
        get: operations["listTopologiesEdaNokiaComV1alpha1Topologies"];
        put?: never;
        /** @description create a non-namespaced Topology */
        post: operations["createTopologiesEdaNokiaComV1alpha1Topologies"];
        /** @description Delete all instances of Topology.  If Topology is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced Topology, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Topologies"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologies/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Topology that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Topologies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologies/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced Topology.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Topologies"];
        /** @description replace a non-namespaced Topology */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Topologies"];
        post?: never;
        /** @description delete the specified non-namespaced Topology */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Topologies"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced Topology */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Topologies"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologies/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced Topology. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Topologies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologygroupings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list topologygroupings */
        get: operations["listTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        put?: never;
        /** @description create a non-namespaced TopologyGrouping */
        post: operations["createTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        /** @description Delete all instances of TopologyGrouping.  If TopologyGrouping is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced TopologyGrouping, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologygroupings/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of TopologyGrouping that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologygroupings/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced TopologyGrouping.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        /** @description replace a non-namespaced TopologyGrouping */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        post?: never;
        /** @description delete the specified non-namespaced TopologyGrouping */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced TopologyGrouping */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/topologygroupings/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced TopologyGrouping. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Topologygroupings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/trafficrateoverlays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list trafficrateoverlays */
        get: operations["listTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        put?: never;
        /** @description create a non-namespaced TrafficRateOverlay */
        post: operations["createTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        /** @description Delete all instances of TrafficRateOverlay.  If TrafficRateOverlay is a namespaced resource, all instances in all namespaces will
         *     be deleted, and this is restricted to users with the system-administrator role.
         *     If a non-namespaced TrafficRateOverlay, it deletes all instances of that non-namespaced resource. */
        delete: operations["deleteAllTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/trafficrateoverlays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of TrafficRateOverlay that have been deleted. */
        get: operations["getDeletedTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/trafficrateoverlays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified non-namespaced TrafficRateOverlay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        /** @description replace a non-namespaced TrafficRateOverlay */
        put: operations["replaceTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        post?: never;
        /** @description delete the specified non-namespaced TrafficRateOverlay */
        delete: operations["deleteTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        options?: never;
        head?: never;
        /** @description patch a non-namespaced TrafficRateOverlay */
        patch: operations["patchTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        trace?: never;
    };
    "/apps/topologies.eda.nokia.com/v1alpha1/trafficrateoverlays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified non-namespaced TrafficRateOverlay. */
        get: operations["getHistoryTopologiesEdaNokiaComV1alpha1Trafficrateoverlays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description CPUUtilOverlay is the Schema for the cpuutiloverlays API */
        "com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default CPUUtilOverlay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay_metadata"];
            /**
             * Specification
             * @description CPUUtilOverlaySpec defines the desired state of CPUUtilOverlay
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this overlay
                 */
                enabled: boolean;
                /**
                 * Topology
                 * @description Reference to the topology that this overlay is extending.
                 */
                topology: {
                    /**
                     * Group
                     * @description The group of the application which published the topology this overlay is extending.
                     */
                    group: string;
                    /**
                     * Name
                     * @description The name of the resource which published the topology this overlay is extending.
                     */
                    name: string;
                    /**
                     * Version
                     * @description The version of the application which published the topology this overlay is extending.
                     */
                    version: string;
                };
                /**
                 * UI Description
                 * @description A description of the overlay to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the overlay to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the overlay to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the overlay to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description CPUUtilOverlayStatus defines the observed state of CPUUtilOverlay
             */
            readonly status?: Record<string, never>;
        };
        /** @description CPUUtilOverlayList is a list of cpuutiloverlays */
        "com.nokia.eda.topologies.v1alpha1.CPUUtilOverlayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description DeviationOverlay is the Schema for the deviationoverlays API */
        "com.nokia.eda.topologies.v1alpha1.DeviationOverlay": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DeviationOverlay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay_metadata"];
            /**
             * Specification
             * @description DeviationOverlaySpec defines the desired state of DeviationOverlay
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this overlay
                 */
                enabled: boolean;
                /**
                 * Topology
                 * @description Reference to the topology that this overlay is extending.
                 */
                topology: {
                    /**
                     * Group
                     * @description The group of the application which published the topology this overlay is extending.
                     */
                    group: string;
                    /**
                     * Name
                     * @description The name of the resource which published the topology this overlay is extending.
                     */
                    name: string;
                    /**
                     * Version
                     * @description The version of the application which published the topology this overlay is extending.
                     */
                    version: string;
                };
                /**
                 * UI Description
                 * @description A description of the overlay to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the overlay to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the overlay to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the overlay to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description DeviationOverlayStatus defines the observed state of DeviationOverlay
             */
            readonly status?: Record<string, never>;
        };
        /** @description DeviationOverlayList is a list of deviationoverlays */
        "com.nokia.eda.topologies.v1alpha1.DeviationOverlayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.DeviationOverlay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.DeviationOverlay_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.DeviationOverlay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description DiskOverlay is the Schema for the diskoverlays API */
        "com.nokia.eda.topologies.v1alpha1.DiskOverlay": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DiskOverlay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay_metadata"];
            /**
             * Specification
             * @description DiskOverlaySpec defines the desired state of DiskOverlay
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this overlay
                 */
                enabled: boolean;
                /**
                 * Topology
                 * @description Reference to the topology that this overlay is extending.
                 */
                topology: {
                    /**
                     * Group
                     * @description The group of the application which published the topology this overlay is extending.
                     */
                    group: string;
                    /**
                     * Name
                     * @description The name of the resource which published the topology this overlay is extending.
                     */
                    name: string;
                    /**
                     * Version
                     * @description The version of the application which published the topology this overlay is extending.
                     */
                    version: string;
                };
                /**
                 * UI Description
                 * @description A description of the overlay to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the overlay to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the overlay to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the overlay to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description DiskOverlayStatus defines the observed state of DiskOverlay
             */
            readonly status?: Record<string, never>;
        };
        /** @description DiskOverlayList is a list of diskoverlays */
        "com.nokia.eda.topologies.v1alpha1.DiskOverlayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.DiskOverlay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.DiskOverlay_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.DiskOverlay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description LldpOverlay is the Schema for the lldpoverlays API */
        "com.nokia.eda.topologies.v1alpha1.LldpOverlay": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default LldpOverlay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay_metadata"];
            /**
             * Specification
             * @description LldpOverlaySpec defines the desired state of lldp
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this overlay
                 */
                enabled: boolean;
                /**
                 * Topology
                 * @description Reference to the topology that this overlay is extending.
                 */
                topology: {
                    /**
                     * Group
                     * @description The group of the application which published the topology this overlay is extending.
                     */
                    group: string;
                    /**
                     * Name
                     * @description The name of the resource which published the topology this overlay is extending.
                     */
                    name: string;
                    /**
                     * Version
                     * @description The version of the application which published the topology this overlay is extending.
                     */
                    version: string;
                };
                /**
                 * UI Description
                 * @description A description of the overlay to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the overlay to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the overlay to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the overlay to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description LldpOverlayStatus defines the observed state of LldpOverlay
             */
            readonly status?: Record<string, never>;
        };
        /** @description LldpOverlayList is a list of lldpoverlays */
        "com.nokia.eda.topologies.v1alpha1.LldpOverlayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.LldpOverlay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.LldpOverlay_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.LldpOverlay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description MemoryOverlay is the Schema for the memoryoverlays API */
        "com.nokia.eda.topologies.v1alpha1.MemoryOverlay": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default MemoryOverlay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay_metadata"];
            /**
             * Specification
             * @description MemoryOverlaySpec defines the desired state of MemoryOverlay
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this overlay
                 */
                enabled: boolean;
                /**
                 * Topology
                 * @description Reference to the topology that this overlay is extending.
                 */
                topology: {
                    /**
                     * Group
                     * @description The group of the application which published the topology this overlay is extending.
                     */
                    group: string;
                    /**
                     * Name
                     * @description The name of the resource which published the topology this overlay is extending.
                     */
                    name: string;
                    /**
                     * Version
                     * @description The version of the application which published the topology this overlay is extending.
                     */
                    version: string;
                };
                /**
                 * UI Description
                 * @description A description of the overlay to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the overlay to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the overlay to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the overlay to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description MemoryOverlayStatus defines the observed state of MemoryOverlay
             */
            readonly status?: Record<string, never>;
        };
        /** @description MemoryOverlayList is a list of memoryoverlays */
        "com.nokia.eda.topologies.v1alpha1.MemoryOverlayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.MemoryOverlay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.MemoryOverlay_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.MemoryOverlay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description Topology is the Schema for the topologies API */
        "com.nokia.eda.topologies.v1alpha1.Topology": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Topology */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology_metadata"];
            /**
             * Specification
             * @description TopologySpec defines the desired state of Topology
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this topology
                 */
                enabled: boolean;
                /**
                 * Endpoint Subtitle
                 * @description Override the subtitle to show for endpoints in the topology
                 */
                endpointSubtitle?: string;
                /**
                 * Link Subtitle
                 * @description Override the subtitle to show for links in the topology
                 */
                linkSubtitle?: string;
                /**
                 * Node Subtitle
                 * @description Override the subtitle to show for nodes in the topology
                 */
                nodeSubtitle?: string;
                /**
                 * Overlays
                 * @description The set of overlays supported with this topology
                 */
                overlays: {
                    /**
                     * Enabled
                     * @description Enable or disable the generation of the status of this overlay
                     */
                    enabled: boolean;
                    /**
                     * Key
                     * @description A unique key for identifying this overlay within the topology.  This is used internally
                     *     only.
                     */
                    key: string;
                }[];
                /**
                 * UI Description
                 * @description A description of the topology to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the topology to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the topology to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the topology to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description TopologyStatus defines the observed state of Topology
             */
            readonly status?: Record<string, never>;
        };
        /** @description TopologyGrouping is the Schema for the topologygroupings API */
        "com.nokia.eda.topologies.v1alpha1.TopologyGrouping": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default TopologyGrouping */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping_metadata"];
            /**
             * Specification
             * @description TopologyGroupingSpec defines the desired state of TopologyGrouping
             */
            spec: {
                /**
                 * Group Selectors
                 * @description The set of selectors for assigning nodes to groups
                 */
                groupSelectors?: {
                    /**
                     * Group
                     * @description The group to assign to nodes that match the selector.
                     */
                    group: string;
                    /**
                     * Node Selector
                     * Format: labelselector
                     * @description Label selector to use to match nodes that should be assigned to this group.
                     */
                    nodeSelector?: string[];
                }[];
                /**
                 * Tier Selectors
                 * @description The set of selectors for assigning nodes to tiers
                 */
                tierSelectors?: {
                    /**
                     * Node Selector
                     * Format: labelselector
                     * @description Label selector to use to match nodes that should be assigned to this tier.
                     */
                    nodeSelector?: string[];
                    /**
                     * Tier
                     * Format: int32
                     * @description The tier to assign to nodes that match the selector.
                     */
                    tier: number;
                }[];
                /**
                 * UI Description
                 * @description A description of the topology grouping to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the topology grouping to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the topology grouping to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the topology grouping to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description TopologyGroupingStatus defines the observed state of TopologyGrouping
             */
            readonly status?: Record<string, never>;
        };
        /** @description TopologyGroupingList is a list of topologygroupings */
        "com.nokia.eda.topologies.v1alpha1.TopologyGroupingList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.TopologyGrouping_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.TopologyGrouping_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.TopologyGrouping_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description TopologyList is a list of topologies */
        "com.nokia.eda.topologies.v1alpha1.TopologyList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.Topology_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.Topology_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.Topology_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
        /** @description TrafficRateOverlay is the Schema for the trafficrateoverlays API */
        "com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay": {
            /** @default topologies.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default TrafficRateOverlay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay_metadata"];
            /**
             * Specification
             * @description TrafficRateOverlaySpec defines the desired state of TrafficRateOverlay
             */
            spec: {
                /**
                 * Enabled
                 * @description Enable or disable the generation of the status of this overlay
                 */
                enabled: boolean;
                /**
                 * Topology
                 * @description Reference to the topology that this overlay is extending.
                 */
                topology: {
                    /**
                     * Group
                     * @description The group of the application which published the topology this overlay is extending.
                     */
                    group: string;
                    /**
                     * Name
                     * @description The name of the resource which published the topology this overlay is extending.
                     */
                    name: string;
                    /**
                     * Version
                     * @description The version of the application which published the topology this overlay is extending.
                     */
                    version: string;
                };
                /**
                 * UI Description
                 * @description A description of the overlay to expose in the UI
                 */
                uiDescription?: string;
                /**
                 * UI Description Key
                 * @description The translation key for the description of the overlay to expose in the UI
                 */
                uiDescriptionKey?: string;
                /**
                 * UI Name
                 * @description The name of the overlay to expose in the UI
                 */
                uiName?: string;
                /**
                 * UI Name Key
                 * @description The translation key for the name of the overlay to expose in the UI
                 */
                uiNameKey?: string;
            };
            /**
             * Status
             * @description TrafficRateOverlayStatus defines the observed state of TrafficRateOverlay
             */
            readonly status?: Record<string, never>;
        };
        /** @description TrafficRateOverlayList is a list of trafficrateoverlays */
        "com.nokia.eda.topologies.v1alpha1.TrafficRateOverlayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"][];
            kind: string;
        };
        "com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay_DeletedResources": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay_DeletedResourceEntry"][];
        "com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionTopologiesEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesTopologiesEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiTopologiesEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the CPUUtilOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the CPUUtilOverlay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.CPUUtilOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Cpuutiloverlays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the CPUUtilOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the DeviationOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the DeviationOverlay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DeviationOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Deviationoverlays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DeviationOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the DiskOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the DiskOverlay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.DiskOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Diskoverlays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DiskOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the LldpOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the LldpOverlay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.LldpOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Lldpoverlays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the LldpOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the MemoryOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the MemoryOverlay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.MemoryOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Memoryoverlays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the MemoryOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the Topology to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the Topology to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.Topology"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Topologies: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Topology to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGroupingList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGroupingList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the TopologyGrouping to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the TopologyGrouping to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TopologyGrouping"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Topologygroupings: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the TopologyGrouping to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description name of the TrafficRateOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description name of the TrafficRateOverlay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.topologies.v1alpha1.TrafficRateOverlay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryTopologiesEdaNokiaComV1alpha1Trafficrateoverlays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the TrafficRateOverlay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
