/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/aifabrics.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from aifabrics.eda.nokia.com */
        get: operations["getVersionAifabricsEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from aifabrics.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesAifabricsEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for aifabrics.eda.nokia.com v1alpha1 */
        get: operations["uiAifabricsEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1/backends": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list backends */
        get: operations["listAifabricsEdaNokiaComV1alpha1Backends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/backends": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list backends in namespace */
        get: operations["listAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        put?: never;
        /** @description create a Backend */
        post: operations["createAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        /** Delete all instances of Backend in the specified namespace. */
        delete: operations["deleteAllAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/backends/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Backend that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/backends/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Backend.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        /** @description replace a Backend */
        put: operations["replaceAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        post?: never;
        /** @description delete the specified Backend */
        delete: operations["deleteAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        options?: never;
        head?: never;
        /** @description patch a Backend */
        patch: operations["patchAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        trace?: never;
    };
    "/apps/aifabrics.eda.nokia.com/v1alpha1/namespaces/{namespace}/backends/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Backend. */
        get: operations["getHistoryAifabricsEdaNokiaComV1alpha1NamespaceBackends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description Backend is the Schema for the backends API */
        "com.nokia.eda.aifabrics.v1alpha1.Backend": {
            /** @default aifabrics.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Backend */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend_metadata"];
            /**
             * Specification
             * @description BackendSpec defines the desired state of Backend
             */
            spec: {
                /**
                 * Autonomous System Pool
                 * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  Used when eBGP is configured as an underlay protocol.
                 */
                asnPool?: string;
                /**
                 * GPU Isolation Groups
                 * @description GPU Isolation Groups are used to isolate GPU traffic over the network, GPUs in different GPU isolation groups will not be able to communicate with each other.  If all GPUs across all stripes need to be able to communicate with each other, create a single GPUIsolationGroup selecting all GPU facing interfaces.
                 */
                gpuIsolationGroups: {
                    /**
                     * Interface Selector
                     * Format: labelselector
                     */
                    interfaceSelector: string[];
                    /**
                     * Isolation Group
                     * @description Name of the IsolationGroup.
                     */
                    name: string;
                }[];
                /**
                 * RoCEv2 QoS
                 * @description Set of properties to configure the RoCEv2 QoS.
                 */
                rocev2QoS: {
                    /**
                     * ECN Max Drop Probability Percent
                     * @description If the queue depth is between min and max threshold then this the probability with which packets are dropped or marked.
                     * @default 100
                     */
                    ecnMaxDropProbabilityPercent: number;
                    /**
                     * ECN Max Threshold Percent
                     * @description The maximum threshold parameter for a RED-managed queue in percent. When the average queue length exceeds the max value, all packets are dropped (or marked if ECN is enabled). Mutually exclusive with min-threshold and max-threshold.
                     * @default 80
                     */
                    ecnSlopeMaxThresholdPercent: number;
                    /**
                     * ECN Min Threshold Percent
                     * @description The mininum threshold parameter for a RED-managed queue in percent. When the average queue length is less than min, all packets are admitted to the queue. Mutually exclusive with min-threshold and max-threshold.
                     * @default 5
                     */
                    ecnSlopeMinThresholdPercent: number;
                    /**
                     * PFC Deadlock Detection Timer
                     * @description Number of milliseconds during which outgoing interface is receiving pfc-pause-frames before triggering recovery-timer.
                     * @default 750
                     */
                    pfcDeadlockDetectionTimer: number;
                    /**
                     * PFC Deadlock Recovery Timer
                     * @description Number of milliseconds during which the pfc-pause-frames will be ignored.
                     * @default 750
                     */
                    pfcDeadlockRecoveryTimer: number;
                    /**
                     * Maximum Burst Size
                     * Format: int32
                     * @description Maximum amount of shared buffer memory available to the queue in bytes.
                     * @default 52110640
                     */
                    queueMaximumBurstSize: number;
                };
                /**
                 * Stripe Connector
                 * @description StripeConnector is the spine layer interconnecting multiple stripes.
                 */
                stripeConnector?: {
                    /**
                     * Autonomous System Pool
                     * @description Reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.
                     */
                    asnPool?: string;
                    /**
                     * Link Selector
                     * Format: labelselector
                     * @description Selects TopoLinks to include in this AI Fabric, the selected TopoLinks will be used to create ISLs between the stripe connector devices and the leaf devices.
                     */
                    linkSelector: string[];
                    /**
                     * Stripe Connector Name
                     * @description The name of the Stripe Connector.
                     */
                    name: string;
                    /**
                     * Node Selector
                     * Format: labelselector
                     * @description Node selector to select the nodes to be used for this stripe connector.
                     */
                    nodeSelector: string[];
                    /**
                     * IPv4 Pool - System IP
                     * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces for the stripe connector devices.  If not specified, the system will use the default IPAllocationPool.
                     */
                    systemPoolIPV4?: string;
                };
                /**
                 * Stripes
                 * @description A list of stripes, stripes contain a set of nodes (rails).
                 */
                stripes: {
                    /**
                     * Autonomous System Pool
                     * @description Optional reference to an IndexAllocationPool pool to use for Autonomous System Number allocations.  If left blank, ASN allocation will be done from the ASNAllocationRange.
                     */
                    asnPool?: string;
                    /**
                     * GPU VLAN
                     * @description The VLAN used on interfaces facing the GPU servers.
                     */
                    gpuVlan: number;
                    /**
                     * Stripe Name
                     * @description The name of the Stripe.
                     */
                    name: string;
                    /**
                     * Node Selector
                     * Format: labelselector
                     * @description Node selector to select the nodes to be used for this stripe.
                     */
                    nodeSelector: string[];
                    /**
                     * Stripe ID
                     * @description Unique ID for a stripe
                     */
                    stripeID: number;
                    /**
                     * IPv4 Pool - System IP
                     * @description Optional reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces. If left blank, system IP allocation will be done from the SystemIPV4Subnet.
                     */
                    systemPoolIPV4?: string;
                }[];
                /**
                 * IPv4 Pool - System IP
                 * @description Reference to an IPAllocationPool used to dynamically allocate an IPv4 address to system/lo0 interfaces.  If specified under the Leaf/Spine/Superspine/Borderleaf those will take precedence.
                 */
                systemPoolIPV4?: string;
            };
            /**
             * Status
             * @description BackendStatus defines the observed state of Backend
             */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the Fabric.  The health score of the Fabric is determined by the aggregate health score of the resources emited by the Fabric such as ISL, DefaultRouteReflectors etc.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Operational state of the Fabric.  The operational state of the fabric is determined by monitoring the operational state of the following resources (if applicable): DefaultRouters, ISLs.
                 */
                operationalState?: string;
                /**
                 * Stripe Connector
                 * @description Stripe connector in the Backend.
                 */
                stripeConnector?: {
                    /**
                     * Stripe Connector Name
                     * @description The name of the Stripe Connector.
                     */
                    name?: string;
                    /**
                     * Leaf Nodes
                     * @description List of stripe connector nodes in the Stripe.
                     */
                    stripeConnectorNodes?: {
                        /**
                         * Node
                         * @description Name of the TopoNode.
                         */
                        node?: string;
                        /**
                         * Operating System
                         * @description Operating system running on the node.
                         */
                        operatingSystem?: string;
                        /**
                         * Operating System Version
                         * @description Operating system version running on the node.
                         */
                        operatingSystemVersion?: string;
                    }[];
                };
                /**
                 * Stripes
                 * @description List of stripes in the Backend.
                 */
                stripes?: {
                    /**
                     * Leaf Nodes
                     * @description List of leaf nodes in the Stripe.
                     */
                    leafNodes?: {
                        /**
                         * Node
                         * @description Name of the TopoNode.
                         */
                        node?: string;
                        /**
                         * Operating System
                         * @description Operating system running on the node.
                         */
                        operatingSystem?: string;
                        /**
                         * Operating System Version
                         * @description Operating system version running on the node.
                         */
                        operatingSystemVersion?: string;
                    }[];
                    /**
                     * Stripe Name
                     * @description The name of the Stripe.
                     */
                    name?: string;
                }[];
            };
        };
        /** @description BackendList is a list of backends */
        "com.nokia.eda.aifabrics.v1alpha1.BackendList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"][];
            kind: string;
        };
        "com.nokia.eda.aifabrics.v1alpha1.Backend_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.aifabrics.v1alpha1.Backend_DeletedResources": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend_DeletedResourceEntry"][];
        "com.nokia.eda.aifabrics.v1alpha1.Backend_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionAifabricsEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesAifabricsEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiAifabricsEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listAifabricsEdaNokiaComV1alpha1Backends: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.BackendList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.BackendList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.BackendList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Backend to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Backend to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.aifabrics.v1alpha1.Backend"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryAifabricsEdaNokiaComV1alpha1NamespaceBackends: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Backend to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
