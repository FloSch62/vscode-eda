/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apps/services.eda.nokia.com": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list versions available from services.eda.nokia.com */
        get: operations["getVersionServicesEdaNokiaCom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list resources available from services.eda.nokia.com/v1alpha1 */
        get: operations["getResourcesServicesEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/_ui/{pathname}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get UI specification for services.eda.nokia.com v1alpha1 */
        get: operations["uiServicesEdaNokiaComV1alpha1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/bridgedomains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bridgedomains */
        get: operations["listServicesEdaNokiaComV1alpha1Bridgedomains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/bridgeinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bridgeinterfaces */
        get: operations["listServicesEdaNokiaComV1alpha1Bridgeinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/dhcprelays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list dhcprelays */
        get: operations["listServicesEdaNokiaComV1alpha1Dhcprelays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/irbinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list irbinterfaces */
        get: operations["listServicesEdaNokiaComV1alpha1Irbinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgedomains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bridgedomains in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        put?: never;
        /** @description create a BridgeDomain */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        /** Delete all instances of BridgeDomain in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgedomains/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of BridgeDomain that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgedomains/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified BridgeDomain.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        /** @description replace a BridgeDomain */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        post?: never;
        /** @description delete the specified BridgeDomain */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        options?: never;
        head?: never;
        /** @description patch a BridgeDomain */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgedomains/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced BridgeDomain. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceBridgedomains"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgeinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list bridgeinterfaces in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        put?: never;
        /** @description create a BridgeInterface */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        /** Delete all instances of BridgeInterface in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgeinterfaces/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of BridgeInterface that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgeinterfaces/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified BridgeInterface.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        /** @description replace a BridgeInterface */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        post?: never;
        /** @description delete the specified BridgeInterface */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        options?: never;
        head?: never;
        /** @description patch a BridgeInterface */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/bridgeinterfaces/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced BridgeInterface. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/dhcprelays": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list dhcprelays in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        put?: never;
        /** @description create a DHCPRelay */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        /** Delete all instances of DHCPRelay in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/dhcprelays/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of DHCPRelay that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/dhcprelays/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified DHCPRelay.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        /** @description replace a DHCPRelay */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        post?: never;
        /** @description delete the specified DHCPRelay */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        options?: never;
        head?: never;
        /** @description patch a DHCPRelay */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/dhcprelays/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced DHCPRelay. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceDhcprelays"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/irbinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list irbinterfaces in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        put?: never;
        /** @description create a IRBInterface */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        /** Delete all instances of IRBInterface in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/irbinterfaces/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of IRBInterface that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/irbinterfaces/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified IRBInterface.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        /** @description replace a IRBInterface */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        post?: never;
        /** @description delete the specified IRBInterface */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        options?: never;
        head?: never;
        /** @description patch a IRBInterface */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/irbinterfaces/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced IRBInterface. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routedinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routedinterfaces in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        put?: never;
        /** @description create a RoutedInterface */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        /** Delete all instances of RoutedInterface in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routedinterfaces/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of RoutedInterface that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routedinterfaces/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified RoutedInterface.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        /** @description replace a RoutedInterface */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        post?: never;
        /** @description delete the specified RoutedInterface */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        options?: never;
        head?: never;
        /** @description patch a RoutedInterface */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routedinterfaces/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced RoutedInterface. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routers in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceRouters"];
        put?: never;
        /** @description create a Router */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceRouters"];
        /** Delete all instances of Router in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceRouters"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routers/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of Router that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceRouters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routers/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified Router.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceRouters"];
        /** @description replace a Router */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceRouters"];
        post?: never;
        /** @description delete the specified Router */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceRouters"];
        options?: never;
        head?: never;
        /** @description patch a Router */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceRouters"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/routers/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced Router. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceRouters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/virtualnetworks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list virtualnetworks in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        put?: never;
        /** @description create a VirtualNetwork */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        /** Delete all instances of VirtualNetwork in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/virtualnetworks/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of VirtualNetwork that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/virtualnetworks/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified VirtualNetwork.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        /** @description replace a VirtualNetwork */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        post?: never;
        /** @description delete the specified VirtualNetwork */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        options?: never;
        head?: never;
        /** @description patch a VirtualNetwork */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/virtualnetworks/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced VirtualNetwork. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/vlans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list vlans in namespace */
        get: operations["listServicesEdaNokiaComV1alpha1NamespaceVlans"];
        put?: never;
        /** @description create a VLAN */
        post: operations["createServicesEdaNokiaComV1alpha1NamespaceVlans"];
        /** Delete all instances of VLAN in the specified namespace. */
        delete: operations["deleteAllServicesEdaNokiaComV1alpha1NamespaceVlans"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/vlans/_deleted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get information about the instances of VLAN that have been deleted that existed in the specified namespace. */
        get: operations["getDeletedServicesEdaNokiaComV1alpha1NamespaceVlans"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/vlans/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description read the specified VLAN.  If a git hash query parameter
         *     is supplied, the resource as it existed at the time of the git hash
         *     will be returned. Streaming is not supported when a particular revision
         *     is asked for. */
        get: operations["readServicesEdaNokiaComV1alpha1NamespaceVlans"];
        /** @description replace a VLAN */
        put: operations["replaceServicesEdaNokiaComV1alpha1NamespaceVlans"];
        post?: never;
        /** @description delete the specified VLAN */
        delete: operations["deleteServicesEdaNokiaComV1alpha1NamespaceVlans"];
        options?: never;
        head?: never;
        /** @description patch a VLAN */
        patch: operations["patchServicesEdaNokiaComV1alpha1NamespaceVlans"];
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/namespaces/{namespace}/vlans/{name}/_revs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get revision history for the specified namespaced VLAN. */
        get: operations["getHistoryServicesEdaNokiaComV1alpha1NamespaceVlans"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/routedinterfaces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routedinterfaces */
        get: operations["listServicesEdaNokiaComV1alpha1Routedinterfaces"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/routers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list routers */
        get: operations["listServicesEdaNokiaComV1alpha1Routers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/virtualnetworks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list virtualnetworks */
        get: operations["listServicesEdaNokiaComV1alpha1Virtualnetworks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apps/services.eda.nokia.com/v1alpha1/vlans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description list vlans */
        get: operations["listServicesEdaNokiaComV1alpha1Vlans"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppGroup: {
            apiVersion?: string;
            kind?: string;
            name?: string;
            preferredVersion?: components["schemas"]["AppGroupVersion"];
            versions?: components["schemas"]["AppGroupVersion"][];
        };
        AppGroupVersion: {
            groupVersion?: string;
            version?: string;
        };
        /** Wrapper for index information inside an error. */
        ErrorIndex: {
            /** Format: int64 */
            index?: number;
        };
        ErrorItem: {
            error?: Record<string, never>;
            type?: string;
        };
        /** @description Generic error response for REST APIs */
        ErrorResponse: {
            /**
             * Format: int64
             * @description the numeric HTTP error code for the response.
             */
            code: number;
            /** @description The optional details of the error response. */
            details?: string;
            /** @description Dictionary/map of associated data/information relevant to the error.
             *     The error "message" may contain {{name}} escapes that should be substituted
             *     with information from this dictionary. */
            dictionary?: {
                [key: string]: unknown;
            };
            /** @description Collection of errors in cases where more than one exists. This needs to be
             *     flexible so we can support multiple formats */
            errors?: components["schemas"]["ErrorItem"][];
            index?: components["schemas"]["ErrorIndex"];
            /**
             * Format: int64
             * @description Internal error code in cases where we don't have an array of errors
             */
            internal?: number;
            /** @description The basic text error message for the error response. */
            message: string;
            /** @description Reference to the error source. Should typically be the URI of the request */
            ref?: string;
            /** @description URI pointing at a document that describes the error and mitigation steps
             *     If there is no document, point to the RFC for the HTTP error code */
            type?: string;
        };
        K8SPatchOp: {
            from?: string;
            op: string;
            path: string;
            value?: Record<string, never>;
            "x-permissive"?: boolean;
        };
        Patch: components["schemas"]["K8SPatchOp"][];
        Resource: {
            kind?: string;
            name?: string;
            namespaced?: boolean;
            readOnly?: boolean;
            singularName?: string;
            uiCategory?: string;
        };
        ResourceHistory: components["schemas"]["ResourceHistoryEntry"][];
        ResourceHistoryEntry: {
            author?: string;
            changeType?: string;
            commitTime?: string;
            hash?: string;
            message?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        ResourceList: {
            apiVersion?: string;
            groupVersion?: string;
            kind?: string;
            resources?: components["schemas"]["Resource"][];
        };
        /** Status is a return value for calls that don't return other objects. */
        Status: {
            apiVersion?: string;
            details?: components["schemas"]["StatusDetails"];
            kind?: string;
            string?: string;
        };
        StatusDetails: {
            group?: string;
            kind?: string;
            name?: string;
        };
        UIResult: string;
        /** @description BridgeDomain is the Schema for the bridgedomains API */
        "com.nokia.eda.services.v1alpha1.BridgeDomain": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default BridgeDomain */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain_metadata"];
            /**
             * Specification
             * @description The BridgeDomain enables the configuration and management of Layer 2 virtual networks. It includes settings for VNI, EVI, route targets for import and export, and tunnel index allocation. Additionally, the specification allows for advanced features such as MAC address table limits, aging, Proxy ARP and detection of MAC and IP duplication.
             */
            spec: {
                /**
                 * Description
                 * @description The description of the BridgeDomain.
                 */
                description?: string;
                /**
                 * EVI
                 * @description EVI to use for this BridgeDomain, can be optionally left blank to have it automatically allocated using the EVI Pool.
                 */
                evi?: number;
                /**
                 * EVI Allocation Pool
                 * @description Reference to an EVI pool to use for allocations if EVI is left blank.
                 * @default evi-pool
                 */
                eviPool: string;
                /**
                 * Export Target
                 * @description Export route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                 */
                exportTarget?: string;
                /**
                 * Import Target
                 * @description Import route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                 */
                importTarget?: string;
                /**
                 * L2 Proxy ARP/ND
                 * @description Enables / Disabled Proxy ARP / Proxy ND.
                 */
                l2proxyARPND?: {
                    /** Dynamic Learning */
                    dynamicLearning?: {
                        /**
                         * Age Time
                         * @description Aging timer value for the proxy entries in seconds. If not set, this indicates that the entries are never flushed.
                         */
                        ageTime?: number;
                        /**
                         * Enabled
                         * @description Enables or disables Dynamic Learning.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Send Refresh Interval
                         * @description The interval determines the frequency at which the system generates three ARP Requests or Neighbor Solicitations with the intent to refresh the proxy entry. The refresh is sent within the age-time window.
                         */
                        sendRefresh?: number;
                    };
                    /** L2 Proxy ARP/ND IP Duplication Detection */
                    ipDuplication?: {
                        /**
                         * Enabled
                         * @description Enables or disables IP Duplication.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Hold Down Time
                         * @description Time to wait in minutes from the moment an IP is declared duplicate to the time the IP is removed from the proxy ARP/ND table.
                         * @default 9
                         */
                        holdDownTime: number;
                        /**
                         * Monitoring Window
                         * @description Monitoring window for detecting duplication on a given IP address in the proxy ARP/ND table.
                         * @default 3
                         */
                        monitoringWindow: number;
                        /**
                         * Number of Moves
                         * @description Number of moves in the proxy ARP/ND table that an IP is allowed within the monitoring-window.
                         * @default 5
                         */
                        numMoves: number;
                    };
                    /**
                     * Proxy ARP
                     * @description Enables proxy ARP.
                     * @default false
                     */
                    proxyARP: boolean;
                    /**
                     * Proxy ND
                     * @description Enables proxy ND.
                     * @default false
                     */
                    proxyND: boolean;
                    /**
                     * L2 Proxy ARP/ND Table Size
                     * @description Maximum number of entries allowed in the proxy table of the bridge domain.
                     * @default 250
                     */
                    tableSize: number;
                };
                /**
                 * MAC Aging
                 * Format: int32
                 * @description Configurable aging time for dynamically learned mac addresses.
                 * @default 300
                 */
                macAging: number;
                /**
                 * MAC Duplication Detection
                 * @description Enable or disable MAC duplication detection and resolution mechanisms.
                 */
                macDuplicationDetection?: {
                    /**
                     * Action
                     * @description Action to take on the subinterface upon detecting at least one mac addresses as duplicate on the subinterface.
                     * @default StopLearning
                     * @enum {string}
                     */
                    action: "Blackhole" | "OperDown" | "StopLearning";
                    /**
                     * Enabled
                     * @description Enables or disables Mac Duplication Detection.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Hold Down Time
                     * @description Time to wait in minutes from the moment a mac is declared duplicate to the mac is flushed from the bridge table.
                     * @default 9
                     */
                    holdDownTime: number;
                    /**
                     * Monitoring Window
                     * @description Monitoring window in minutes for detecting duplication on a given mac address.
                     * @default 3
                     */
                    monitoringWindow: number;
                    /**
                     * Number of Moves
                     * @description Number of moves a mac is allowed within the monitoring-window, before it is declared duplicate.
                     * @default 5
                     */
                    numMoves: number;
                };
                /**
                 * MAC Limit
                 * Format: int32
                 * @description Sets the maximum number of MAC entries accepted in the bridge table.
                 */
                macLimit?: number;
                /**
                 * Tunnel Index Allocation Pool
                 * @description Reference to a tunnel index pool to use for allocations.
                 * @default tunnel-index-pool
                 */
                tunnelIndexPool: string;
                /**
                 * Type
                 * @description Select the type of BridgeDomain.  Simple doesn't include any overlay control plane or dataplane properties (EVPN/VXLAN). EVPNVXLAN includes the properties needed to provision this BridgeDomain over an IP Fabric.
                 * @default EVPNVXLAN
                 * @enum {string}
                 */
                type: "SIMPLE" | "EVPNVXLAN";
                /**
                 * VNI
                 * @description VNI to use for this BridgeDomain, can be optionally left blank to have it allocated using the VNI Pool.
                 */
                vni?: number;
                /**
                 * VNI Allocation Pool
                 * @description Reference to a VNI pool to use for allocations if VNI is left blank.
                 * @default vni-pool
                 */
                vniPool: string;
            };
            /**
             * Status
             * @description BridgeDomainStatus defines the observed state of BridgeDomain
             */
            readonly status?: {
                /**
                 * EVI
                 * @description EVI in use for this bridge domain.
                 */
                evi?: number;
                /**
                 * Export Target
                 * @description Export route target for this bridge domain.
                 */
                exportTarget?: string;
                /**
                 * Health Score
                 * @description Indicates the health score of the VNET.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Import Target
                 * @description Import route target for this bridge domain.
                 */
                importTarget?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Nodes
                 * @description Nodes which have the BridgeDomain configured (min 1 sub-interface).
                 */
                nodes?: string[];
                /**
                 * Number of Nodes
                 * @description Number of nodes which have the BridgeDomain configured (min 1 sub-interface).
                 */
                numNodes?: number;
                /**
                 * Number of Sub-Interfaces
                 * Format: int32
                 * @description Number of sub-interfaces attached to the BridgeDomain.
                 */
                numSubInterfaces?: number;
                /**
                 * Number of Operational Down Sub-Interfaces
                 * Format: int32
                 * @description Number of oper-down sub-interfaces attached to the BridgeDomain.
                 */
                numSubInterfacesOperDown?: number;
                /**
                 * Operational State
                 * @description Operational state of the VNET.
                 */
                operationalState?: string;
                /**
                 * Tunnel Index
                 * @description Vxlan tunnel index in use.
                 */
                tunnelIndex?: number;
                /**
                 * VNI
                 * @description VNI in use for this bridge domain.
                 */
                vni?: number;
            };
        };
        /** @description BridgeDomainList is a list of bridgedomains */
        "com.nokia.eda.services.v1alpha1.BridgeDomainList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.BridgeDomain_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.BridgeDomain_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.BridgeDomain_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description BridgeInterface is the Schema for the bridgeinterfaces API */
        "com.nokia.eda.services.v1alpha1.BridgeInterface": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default BridgeInterface */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface_metadata"];
            /**
             * Specification
             * @description The BridgeInterface enables the attachment of network interfaces to a Bridge Domain. It includes settings for VLAN ID allocation, interface attachment, and actions on ingress and egress traffic. The specification supports integration with other network resources, such as Bridge Domains and Interfaces, and provides advanced features like MAC Duplication Detection with configurable actions.
             */
            spec: {
                /**
                 * Bridge Domain
                 * @description Reference to a BridgeDomain in which to attach the BridgeInterface.
                 */
                bridgeDomain: string;
                /**
                 * Description
                 * @description The description of the BridgeInterface.
                 */
                description?: string;
                /**
                 * Egress Actions
                 * @description Manages actions on traffic at Egress.
                 */
                egress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at egress.
                     */
                    filters?: string[];
                    /**
                     * QoS Egress Policy
                     * @description List of QoS Egress policy references to use at egress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * Ingress Actions
                 * @description Manages actions on traffic at Ingress.
                 */
                ingress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at ingress.
                     */
                    filters?: string[];
                    /**
                     * QoS Ingress Policy
                     * @description List of QoS Ingress policy references to use at ingress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * Interface
                 * @description Reference to an Interface resource to attach this BridgeInterface.
                 */
                interface: string;
                /**
                 * L2 MTU
                 * @description L2 MTU specifies the maximum sized Ethernet frame that can be transmitted on the subinterface. If a frame exceeds this size it is discarded. If the l2-mtu of the subinterface exceeds the port-mtu of the associated interface, the subinterface will remain operationally down.
                 */
                l2MTU?: number;
                /**
                 * MAC Duplication Detection Action
                 * @description Override for Mac Duplication Detection action if enabled in the associated BridgeDomain.
                 * @enum {string}
                 */
                macDuplicationDetectionAction?: "Blackhole" | "OperDown" | "StopLearning" | "UseBridgeDomainAction";
                /**
                 * Split Horizon Group
                 * @description Split Horizon Group to be used for this BridgeInterface. The subinterface within this BridgeInterface will be a member of this Split Horizon Group.
                 */
                splitHorizonGroup?: string;
                /**
                 * Uplink
                 * @description The Uplink between your access breakout switch and your leaf switch.
                 */
                uplink?: {
                    /**
                     * Egress
                     * @description Manages actions on traffic at Egress of the Local enpoint of the Uplink.
                     */
                    egress?: {
                        /**
                         * Filters
                         * @description List of Filter references to use at egress.
                         */
                        filters?: string[];
                        /**
                         * QoS Egress Policy
                         * @description List of QoS Egress policy references to use at egress.
                         */
                        qosPolicy?: string[];
                    };
                    /**
                     * Ingress
                     * @description Manages actions on traffic at Ingress of the Local enpoint of the Uplink.
                     */
                    ingress?: {
                        /**
                         * Filters
                         * @description List of Filter references to use at ingress.
                         */
                        filters?: string[];
                        /**
                         * QoS Ingress Policy
                         * @description List of QoS Ingress policy references to use at ingress.
                         */
                        qosPolicy?: string[];
                    };
                    /**
                     * Uplink Selector
                     * Format: labelselector
                     * @description Selects TopoLinks which connect a leaf switch to a breakout switch. This is the uplink between your access breakout switch and your leaf switch.  There can only be a single TopoLink between the access breakout switch and the leaf switch, if more than one TopoLink is present between two devices the transaction will fail.
                     */
                    uplinkSelector?: string[];
                    /**
                     * Uplink VLAN ID
                     * @description The VLAN ID to be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                     * @default pool
                     */
                    uplinkVLANID: string;
                    /**
                     * Uplink VLAN Pool
                     * @description A VLAN from this pool will be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                     */
                    uplinkVLANPool?: string;
                };
                /**
                 * VLAN ID
                 * @description Single value between 1-4094 support, ranges supported in the format x-y,x-y, or the special keyword null, any, untagged or pool for auto allocation.
                 */
                vlanID: string;
            };
            /** Status */
            readonly status?: {
                /**
                 * Health Score
                 * @description Indicates the health score of the BridgeInterface.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Operational state of the BridgeInterface.
                 */
                operationalState?: string;
                /**
                 * Sub-Interfaces Status
                 * @description Sub-interfaces status within the BridgeInterface.
                 */
                subInterfaces?: {
                    /**
                     * Enabled
                     * @description The administrative status of the SubInterface.
                     */
                    enabled?: boolean;
                    /**
                     * Interface
                     * @description Normalized interface name.
                     */
                    interface: string;
                    /**
                     * Interface Resource
                     * @description Eda interface resource.
                     */
                    interfaceResource: string;
                    /**
                     * Last Change
                     * @description Indicates when this SubInterface last changed state.
                     */
                    lastChange?: string;
                    /**
                     * Node
                     * @description Reference to Node object.
                     */
                    node: string;
                    /**
                     * Node Interface
                     * @description Node specific interface name.
                     */
                    nodeInterface: string;
                    /**
                     * Operating System
                     * @description Operating System of the Node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operational State
                     * @description Indicates the current operational state of the SubInterface.
                     */
                    operationalState?: string;
                    /**
                     * Sub Interface Index
                     * @description Index allocated to the subinterface on the associated interface for the given VLAN.
                     */
                    subInterfaceIndex?: number;
                    /**
                     * VLAN ID
                     * @description vlan assigned to this subinterface.
                     */
                    vlanID?: string;
                }[];
            };
        };
        /** @description BridgeInterfaceList is a list of bridgeinterfaces */
        "com.nokia.eda.services.v1alpha1.BridgeInterfaceList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.BridgeInterface_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.BridgeInterface_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.BridgeInterface_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description DHCPRelay is the Schema for the dhcprelays API */
        "com.nokia.eda.services.v1alpha1.DHCPRelay": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default DHCPRelay */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay_metadata"];
            /**
             * Specification
             * @description The DHCPRelay enables the forwarding of DHCP requests and responses between clients and servers across different networks. This resource allows for the configuration of various DHCP relay sub-options, such as CircuitID, RemoteID, and ClientLinkLayerAddress, to provide detailed client information. It also includes settings for specifying the router to reach the DHCP server, the list of DHCP servers to forward requests to, and selectors for Routed and IRB interfaces where the relay will be configured. Additionally, the GI Address option can be set to derive the Gateway IP address from the selected interface, ensuring correct routing of DHCP messages.
             */
            spec: {
                /**
                 * Use GI Address
                 * @description Set GI Address to the IP derived from the IRBInterface or RoutedInterface on which the DHCP relay is configured.
                 */
                giAddress?: boolean;
                /**
                 * IRB Interface Selector
                 * Format: labelselector
                 * @description Label selector to select the IRBInterface on which to configure the DHCP relay.
                 */
                irbInterfaceSelector?: string[];
                /**
                 * Routed Interface Selector
                 * Format: labelselector
                 * @description Label selector to select the RoutedInterface on which to configure the DHCP relay.
                 */
                routedInterfaceSelector?: string[];
                /**
                 * Router
                 * @description Router to be used to reach the DHCP server, if not specified the Router under which the source IRBInterface or RoutedInterface resides will be used.
                 */
                router?: string;
                /**
                 * Servers
                 * @description List of servers to send the DHCP relayed packet to. These can be IP addresses or FQDN.
                 */
                servers: string[];
                /**
                 * Sub Options
                 * @description DHCP Relay sub-options; available options are CircuitID, RemoteID, and ClientLinkLayerAddress.
                 */
                subOptions?: string[];
            };
            /**
             * Status
             * @description DHCPRelayStatus defines the observed state of DHCPRelay
             */
            readonly status?: Record<string, never>;
        };
        /** @description DHCPRelayList is a list of dhcprelays */
        "com.nokia.eda.services.v1alpha1.DHCPRelayList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.DHCPRelay_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.DHCPRelay_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.DHCPRelay_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description IRBInterface is the Schema for the irbinterfaces API */
        "com.nokia.eda.services.v1alpha1.IRBInterface": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default IRBInterface */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface_metadata"];
            /**
             * Specification
             * @description The IRBInterface enables the configuration and management of Layer 3 interfaces associated with a BridgeDomain. This resource allows for the specification of various parameters, including IP MTU, learning of unsolicited ARPs, IPv4 and IPv6 addresses, and unnumbered interface settings. It also supports advanced features such as BFD configuration, Virtual IP discovery, and ARP/ND-related settings like Proxy ARP/ND and EVPN route advertisement.
             */
            spec: {
                /**
                 * Anycast GW MAC
                 * Format: mac
                 * @description The gateway MAC to use on the anycast address, if left empty the node will automatically assign one.
                 */
                anycastGatewayMAC?: string;
                /**
                 * ARP Timeout
                 * Format: int32
                 * @description Duration of time that dynamic ARP entries remain in the ARP cache before they expire.
                 * @default 14400
                 */
                arpTimeout: number;
                /**
                 * BFD Configuration
                 * @description Enable BFD on the IRBInterface.
                 */
                bfd?: {
                    /**
                     * Transmit Interval
                     * @description The minimum interval in microseconds between transmission of BFD control packets.
                     * @default 1000000
                     */
                    desiredMinTransmitInt: number;
                    /**
                     * Multiplier
                     * @description The number of packets that must be missed to declare this session as down.
                     * @default 3
                     */
                    detectionMultiplier: number;
                    /**
                     * Enabled
                     * @description Enables Biforward Detection.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Minimum Echo Receive Interval
                     * @description The minimum interval between echo packets the local node can receive.
                     * @default 1000000
                     */
                    minEchoReceiveInterval: number;
                    /**
                     * Receive Interval
                     * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                     * @default 1000000
                     */
                    requiredMinReceive: number;
                };
                /**
                 * Bridge Domain
                 * @description Reference to a BridgeDomain.
                 */
                bridgeDomain: string;
                /**
                 * Description
                 * @description The description of the IRBInterface.
                 */
                description?: string;
                /**
                 * Egress Actions
                 * @description Manages actions on traffic at Egress.
                 */
                egress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at egress.
                     */
                    filters?: string[];
                    /**
                     * QoS Egress Policy
                     * @description List of QoS Egress policy references to use at egress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * EVPN Route Advertisement Type
                 * @description Controls the type of ARP/ND entries to advertise.
                 */
                evpnRouteAdvertisementType?: {
                    /**
                     * Advertise Dynamic ARP
                     * @description Advertise dynamic ARP entries.
                     * @default false
                     */
                    arpDynamic: boolean;
                    /**
                     * Advertise Static ARP
                     * @description Advertise static ARP entries.
                     * @default false
                     */
                    arpStatic: boolean;
                    /**
                     * Advertise Dynamic ND
                     * @description Advertise dynamic ND entries.
                     * @default false
                     */
                    ndDynamic: boolean;
                    /**
                     * Advertise Static ND
                     * @description Advertise static ND entries.
                     * @default false
                     */
                    ndStatic: boolean;
                };
                /**
                 * Host Route Population
                 * @description Configures host route population based on ARP entries.
                 */
                hostRoutePopulate?: {
                    /**
                     * Dynamic ARP Entries
                     * @description Create host routes out of dynamic ARP entries.
                     * @default true
                     */
                    dynamic: boolean;
                    /**
                     * EVPN Learned ARP Entries
                     * @description Create host routes out of EVPN learned ARP entries.
                     * @default false
                     */
                    evpn: boolean;
                    /**
                     * Static ARP Entries
                     * @description Create host routes out of static ARP entries.
                     * @default true
                     */
                    static: boolean;
                };
                /**
                 * Ingress Actions
                 * @description Manages actions on traffic at Ingress.
                 */
                ingress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at ingress.
                     */
                    filters?: string[];
                    /**
                     * QoS Ingress Policy
                     * @description List of QoS Ingress policy references to use at ingress.
                     */
                    qosPolicy?: string[];
                };
                /** IP Addresses */
                ipAddresses?: {
                    /**
                     * IPv4 Addresses
                     * @description IPv4 address in IP/mask form, e.g., 192.168.0.1/24.
                     */
                    ipv4Address?: {
                        /**
                         * IP Prefix
                         * @description Address and mask to use
                         */
                        ipPrefix: string;
                        /**
                         * Primary
                         * @description Indicates which address to use as primary for broadcast
                         */
                        primary?: boolean;
                    };
                    /**
                     * IPv6 Addresses
                     * @description IPv6 address in IP/mask form, e.g., fc00::1/120.
                     */
                    ipv6Address?: {
                        /**
                         * IP Prefix
                         * @description Address and mask to use
                         */
                        ipPrefix: string;
                        /**
                         * Primary
                         * @description Indicates which address to use as primary for broadcast
                         */
                        primary?: boolean;
                    };
                    /**
                     * Node
                     * @description Reference to a TopoNode resource, if not specified the IP address will be assigned to all nodes on which the IRB is deployed.  If specified the IP address will be assigned to the specified node.
                     */
                    node?: string;
                }[];
                /**
                 * IP MTU
                 * @description IP MTU for the IRBInterface [default=1500].
                 * @default 1500
                 */
                ipMTU: number;
                /** IPv6 Router Advertisement */
                ipv6RouterAdvertisement?: {
                    /**
                     * Current Hop Limit
                     * Format: int32
                     * @description The current hop limit to advertise in the router advertisement messages.
                     * @default 64
                     */
                    currentHopLimit: number;
                    /**
                     * Enable Router Advertisements
                     * @description Enable or disable IPv6 router advertisements.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * IP MTU
                     * Format: int32
                     * @description The IP MTU to advertise in the router advertisement messages.
                     */
                    ipMTU?: number;
                    /**
                     * Managed Configuration Flag
                     * @description Enable DHCPv6 for address configuration (M-bit).
                     * @default false
                     */
                    managedConfigurationFlag: boolean;
                    /**
                     * Maximum Advertisement Interval
                     * Format: int32
                     * @description Maximum time between router advertisements (in seconds).
                     * @default 600
                     */
                    maxAdvertisementInterval: number;
                    /**
                     * Minimum Advertisement Interval
                     * Format: int32
                     * @description Minimum time between router advertisements (in seconds).
                     * @default 200
                     */
                    minAdvertisementInterval: number;
                    /**
                     * Other Configuration Flag
                     * @description Enable DHCPv6 for other configuration (O-bit).
                     * @default false
                     */
                    otherConfigurationFlag: boolean;
                    /**
                     * Prefixes
                     * @description IPv6 prefixes to advertise in router advertisements.
                     */
                    prefixes?: {
                        /**
                         * Autonomous Flag
                         * @description When this is set in the prefix information option hosts can use the prefix for stateless address autoconfiguration (SLAAC).
                         * @default true
                         */
                        autonomousFlag: boolean;
                        /**
                         * On-Link Flag
                         * @description When this is set in the prefix information option hosts can use the prefix for on-link determination.
                         * @default true
                         */
                        onLinkFlag: boolean;
                        /**
                         * Preferred Lifetime
                         * Format: int32
                         * @description The length of time in seconds (relative to the time the packet is sent) that addresses generated from the prefix via stateless address autoconfiguration remain preferred.
                         * @default 604800
                         */
                        preferredLifetime: number;
                        /**
                         * IPv6 Prefix
                         * @description An IPv6 global unicast address prefix.
                         */
                        prefix: string;
                        /**
                         * Valid Lifetime
                         * Format: int32
                         * @description The length of time in seconds (relative to the time the packet is sent) that the prefix is valid for the purpose of on-link determination.
                         * @default 2592000
                         */
                        validLifetime: number;
                    }[];
                    /**
                     * Reachable Time
                     * Format: int32
                     * @description Time in milliseconds for Neighbor Unreachability Detection.
                     * @default 0
                     */
                    reachableTime: number;
                    /**
                     * Retransmit Time
                     * Format: int32
                     * @description Time in milliseconds between retransmitted NS messages.
                     * @default 0
                     */
                    retransmitTime: number;
                    /**
                     * Router Lifetime
                     * Format: int32
                     * @description Router lifetime in seconds for default gateway.
                     * @default 1800
                     */
                    routerLifetime: number;
                };
                /**
                 * L3 Proxy ARP/ND
                 * @description L3 Proxy ARP and ND configuration.
                 */
                l3ProxyARPND?: {
                    /**
                     * Proxy ARP Enabled
                     * @description Select whether Proxy ARP should be enabled.
                     * @default false
                     */
                    proxyARP: boolean;
                    /**
                     * Proxy ND Enabled
                     * @description Select whether Proxy ND should be enabled.
                     * @default false
                     */
                    proxyND: boolean;
                };
                /**
                 * Learn Unsolicited ARPs
                 * @description Enable or disable learning of unsolicited ARPs.
                 * @default NONE
                 * @enum {string}
                 */
                learnUnsolicited: "BOTH" | "GLOBAL" | "LINK-LOCAL" | "NONE";
                /**
                 * Router
                 * @description Reference to a Router.
                 */
                router: string;
                /**
                 * Unnumbered
                 * @description Enables the use of unnumbered interfaces on the IRBInterface.  If IPv6 is specified, no IP address are configured on the sub-interface and only the link local address will be used.  If any IP addresses are specified for either IPv4 or IPv6 that will take precedence and IPs will be assigned to the interfaces.(Deprecated, Use IPv6RouterAdvertisement)
                 * @enum {string}
                 */
                unnumbered?: "IPV6";
                /**
                 * Virtual IP Discovery
                 * @description Configuration for Virtual IP discovery on the interface.
                 */
                virtualIPDiscovery?: {
                    /**
                     * Address
                     * @description Virtual IP Address.
                     */
                    address: string;
                    /**
                     * Allowed MAC Addresses
                     * Format: macAddr
                     * @description List of allowed MAC addresses for a discovered virtual IP address.
                     */
                    allowedMAC?: string[];
                    /**
                     * Bridge Interfaces to Probe
                     * @description List of BridgeInterfaces on the associated MAC-VRF to which the ARP probes are sent. If left blank, the probes are sent on all BridgeInterfaces associated with the BridgeDomain.
                     */
                    bridgeInterfaceToProbe?: string[];
                    /**
                     * Probe Interval
                     * @description ARP probe interval in seconds.
                     * @default 0
                     */
                    probeInterval: number;
                    /**
                     * VLANs to Probe
                     * @description List of VLANs on the associated BridgeDomain to which the ARP probes are sent.  If left blank, the probes are sent on all VLANs associated with the BridgeDomain.
                     */
                    vlanToProbe?: string[];
                }[];
            };
            /**
             * Status
             * @description IRBInterfaceStatus defines the observed state of IRBInterface
             */
            readonly status?: {
                /**
                 * Health Score
                 * @description Indicates the health score of the VNET.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Explains the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Interface Statuses
                 * @description Details of the interfaces associated with the IRB.
                 */
                interfaces?: {
                    /**
                     * Enabled
                     * @description Administrative status of the SubInterface.
                     */
                    enabled?: boolean;
                    /**
                     * IPv4 Addresses
                     * @description List of IPv4 addresses
                     */
                    ipv4Addresses?: {
                        /**
                         * IP Prefix
                         * @description Address and mask to use
                         */
                        ipPrefix: string;
                        /**
                         * Primary
                         * @description Indicates which address to use as primary for broadcast
                         */
                        primary?: boolean;
                    }[];
                    /**
                     * IPv6 Addresses
                     * @description List of IPv6 addresses
                     */
                    ipv6Addresses?: {
                        /**
                         * IP Prefix
                         * @description Address and mask to use
                         */
                        ipPrefix: string;
                        /**
                         * Primary
                         * @description Indicates which address to use as primary for broadcast
                         */
                        primary?: boolean;
                    }[];
                    /**
                     * Last Change
                     * @description Timestamp of when this SubInterface last changed state.
                     */
                    lastChange?: string;
                    /**
                     * Node
                     * @description Reference to Node object.
                     */
                    node: string;
                    /**
                     * Node Interface
                     * @description Node specific interface name.
                     */
                    nodeInterface: string;
                    /**
                     * Operating System
                     * @description Operating System of the Node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operational State
                     * @description Current operational state of the SubInterface.
                     */
                    operationalState?: string;
                }[];
                /**
                 * Last Change
                 * Format: date
                 * @description Timestamp of the last state change.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Operational state of the VNET.
                 */
                operationalState?: string;
            };
        };
        /** @description IRBInterfaceList is a list of irbinterfaces */
        "com.nokia.eda.services.v1alpha1.IRBInterfaceList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.IRBInterface_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.IRBInterface_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.IRBInterface_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description RoutedInterface is the Schema for the routedinterfaces API */
        "com.nokia.eda.services.v1alpha1.RoutedInterface": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default RoutedInterface */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface_metadata"];
            /**
             * Specification
             * @description The RoutedInterface enables the configuration and management of Layer 3 interfaces for routing traffic between different networks. This resource allows for specifying an underlying Interface and Router, configuring VLAN IDs, and setting the IP MTU. It also supports the learning of unsolicited ARPs, defining both IPv4 and IPv6 addresses, and enabling unnumbered interfaces. Advanced features such as BFD configuration, Proxy ARP/ND, and ARP timeout settings are included to ensure robust and efficient routing.
             */
            spec: {
                /**
                 * ARP Timeout
                 * Format: int32
                 * @description Duration of time that dynamic ARP entries remain in the ARP cache before they expire.
                 * @default 14400
                 */
                arpTimeout: number;
                /**
                 * BFD Configuration
                 * @description Enables BFD on the RoutedInterface.
                 */
                bfd?: {
                    /**
                     * Transmit Interval
                     * @description The minimum interval in microseconds between transmission of BFD control packets.
                     * @default 1000000
                     */
                    desiredMinTransmitInt: number;
                    /**
                     * Multiplier
                     * @description The number of packets that must be missed to declare this session as down.
                     * @default 3
                     */
                    detectionMultiplier: number;
                    /**
                     * Enabled
                     * @description Enables Biforward Detection.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * Minimum Echo Receive Interval
                     * @description The minimum interval between echo packets the local node can receive.
                     * @default 1000000
                     */
                    minEchoReceiveInterval: number;
                    /**
                     * Receive Interval
                     * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                     * @default 1000000
                     */
                    requiredMinReceive: number;
                };
                /**
                 * Description
                 * @description The description of the RoutedInterface.
                 */
                description?: string;
                /**
                 * Egress Actions
                 * @description Manages actions on traffic at Egress.
                 */
                egress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at egress.
                     */
                    filters?: string[];
                    /**
                     * QoS Egress Policy
                     * @description List of QoS Egress policy references to use at egress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * Ingress Actions
                 * @description Manages actions on traffic at Ingress.
                 */
                ingress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at ingress.
                     */
                    filters?: string[];
                    /**
                     * QoS Ingress Policy
                     * @description List of QoS Ingress policy references to use at ingress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * Interface
                 * @description Reference to an Interface to use for attachment.
                 */
                interface: string;
                /**
                 * IP MTU
                 * @description IP MTU for the RoutedInterface.
                 * @default 1500
                 */
                ipMTU: number;
                /**
                 * IPv4 Addresses
                 * @description List of IPv4 addresses in IP/mask form, e.g., 192.168.0.1/24.
                 */
                ipv4Addresses?: {
                    /**
                     * IP Prefix
                     * @description Address and mask to use
                     */
                    ipPrefix: string;
                    /**
                     * Primary
                     * @description Indicates which address to use as primary for broadcast
                     */
                    primary?: boolean;
                }[];
                /**
                 * IPv6 Addresses
                 * @description List of IPv6 addresses in IP/mask form, e.g., fc00::1/120.
                 */
                ipv6Addresses?: {
                    /**
                     * IP Prefix
                     * @description Address and mask to use
                     */
                    ipPrefix: string;
                    /**
                     * Primary
                     * @description Indicates which address to use as primary for broadcast
                     */
                    primary?: boolean;
                }[];
                /** IPv6 Router Advertisement */
                ipv6RouterAdvertisement?: {
                    /**
                     * Current Hop Limit
                     * Format: int32
                     * @description The current hop limit to advertise in the router advertisement messages.
                     * @default 64
                     */
                    currentHopLimit: number;
                    /**
                     * Enable Router Advertisements
                     * @description Enable or disable IPv6 router advertisements.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * IP MTU
                     * Format: int32
                     * @description The IP MTU to advertise in the router advertisement messages.
                     */
                    ipMTU?: number;
                    /**
                     * Managed Configuration Flag
                     * @description Enable DHCPv6 for address configuration (M-bit).
                     * @default false
                     */
                    managedConfigurationFlag: boolean;
                    /**
                     * Maximum Advertisement Interval
                     * Format: int32
                     * @description Maximum time between router advertisements (in seconds).
                     * @default 600
                     */
                    maxAdvertisementInterval: number;
                    /**
                     * Minimum Advertisement Interval
                     * Format: int32
                     * @description Minimum time between router advertisements (in seconds).
                     * @default 200
                     */
                    minAdvertisementInterval: number;
                    /**
                     * Other Configuration Flag
                     * @description Enable DHCPv6 for other configuration (O-bit).
                     * @default false
                     */
                    otherConfigurationFlag: boolean;
                    /**
                     * Prefixes
                     * @description IPv6 prefixes to advertise in router advertisements.
                     */
                    prefixes?: {
                        /**
                         * Autonomous Flag
                         * @description When this is set in the prefix information option hosts can use the prefix for stateless address autoconfiguration (SLAAC).
                         * @default true
                         */
                        autonomousFlag: boolean;
                        /**
                         * On-Link Flag
                         * @description When this is set in the prefix information option hosts can use the prefix for on-link determination.
                         * @default true
                         */
                        onLinkFlag: boolean;
                        /**
                         * Preferred Lifetime
                         * Format: int32
                         * @description The length of time in seconds (relative to the time the packet is sent) that addresses generated from the prefix via stateless address autoconfiguration remain preferred.
                         * @default 604800
                         */
                        preferredLifetime: number;
                        /**
                         * IPv6 Prefix
                         * @description An IPv6 global unicast address prefix.
                         */
                        prefix: string;
                        /**
                         * Valid Lifetime
                         * Format: int32
                         * @description The length of time in seconds (relative to the time the packet is sent) that the prefix is valid for the purpose of on-link determination.
                         * @default 2592000
                         */
                        validLifetime: number;
                    }[];
                    /**
                     * Reachable Time
                     * Format: int32
                     * @description Time in milliseconds for Neighbor Unreachability Detection.
                     * @default 0
                     */
                    reachableTime: number;
                    /**
                     * Retransmit Time
                     * Format: int32
                     * @description Time in milliseconds between retransmitted NS messages.
                     * @default 0
                     */
                    retransmitTime: number;
                    /**
                     * Router Lifetime
                     * Format: int32
                     * @description Router lifetime in seconds for default gateway.
                     * @default 1800
                     */
                    routerLifetime: number;
                };
                /**
                 * L3 Proxy ARP/ND
                 * @description L3 Proxy ARP and ND configuration.
                 */
                l3ProxyARPND?: {
                    /**
                     * Proxy ARP Enabled
                     * @description Select whether Proxy ARP should be enabled.
                     * @default false
                     */
                    proxyARP: boolean;
                    /**
                     * Proxy ND Enabled
                     * @description Select whether Proxy ND should be enabled.
                     * @default false
                     */
                    proxyND: boolean;
                };
                /**
                 * Learn Unsolicited ARPs
                 * @description Enable or disable learning of unsolicited ARPs.
                 * @default NONE
                 * @enum {string}
                 */
                learnUnsolicited: "BOTH" | "GLOBAL" | "LINK-LOCAL" | "NONE";
                /**
                 * Router
                 * @description Reference to a Router.
                 */
                router: string;
                /**
                 * Unnumbered
                 * @description Enables the use of unnumbered interfaces on the IRBInterface.  If IPv6 is specified, no IP address are configured on the sub-interface and only the link local address will be used.  If any IP addresses are specified for either IPv4 or IPv6 that will take precedence and IPs will be assigned to the interfaces. (Deprecated, Use IPv6RouterAdvertisement)
                 * @enum {string}
                 */
                unnumbered?: "IPV6";
                /**
                 * VLAN ID
                 * @description Single value between 1-4094 support, ranges supported in the format x-y,x-y, or the special keyword null, any, untagged or pool for auto allocation.
                 * @default pool
                 */
                vlanID: string;
                /**
                 * VLAN Pool
                 * @description Reference to a VLAN pool to use for allocations.
                 * @default vlan-pool
                 */
                vlanPool: string;
            };
            /**
             * Status
             * @description RoutedInterfaceStatus defines the observed state of RoutedInterface
             */
            readonly status?: {
                /**
                 * Health Score
                 * @description Indicates the health score of the RoutedInterface.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Sub-Interfaces Status
                 * @description Sub-interface status within the RoutedInterface.
                 */
                interfaces?: {
                    /**
                     * Enabled
                     * @description The administrative status of the SubInterface.
                     */
                    enabled?: boolean;
                    /**
                     * Interface
                     * @description Normalized interface name.
                     */
                    interface: string;
                    /**
                     * Interface Resource
                     * @description Eda interface resource.
                     */
                    interfaceResource: string;
                    /**
                     * Last Change
                     * @description Indicates when this SubInterface last changed state.
                     */
                    lastChange?: string;
                    /**
                     * Node
                     * @description Reference to Node object.
                     */
                    node: string;
                    /**
                     * Node Interface
                     * @description Node specific interface name.
                     */
                    nodeInterface: string;
                    /**
                     * Operating System
                     * @description Operating System of the Node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operational State
                     * @description Indicates the current operational state of the SubInterface.
                     */
                    operationalState?: string;
                    /**
                     * Sub Interface Index
                     * @description Index allocated to the subinterface on the associated interface for the given VLAN.
                     */
                    subInterfaceIndex?: number;
                    /**
                     * VLAN ID
                     * @description vlan assigned to this subinterface.
                     */
                    vlanID?: string;
                }[];
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Operational State
                 * @description Operational state of the RoutedInterface.
                 */
                operationalState?: string;
            };
        };
        /** @description RoutedInterfaceList is a list of routedinterfaces */
        "com.nokia.eda.services.v1alpha1.RoutedInterfaceList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.RoutedInterface_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.RoutedInterface_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.RoutedInterface_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description Router is the Schema for the routers API */
        "com.nokia.eda.services.v1alpha1.Router": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default Router */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.Router_metadata"];
            /**
             * Specification
             * @description The Router enables the configuration and management of routing functions within a network. This resource allows for setting a unique Router ID, configuring VNIs and EVIs with options for automatic allocation, and defining import and export route targets. It also includes advanced configuration options such as BGP settings, including autonomous system numbers, AFI/SAFI options, and route advertisement preferences. Node selectors can be used to constrain the deployment of the router to specific nodes within the network.
             */
            spec: {
                /**
                 * BGP Configuration
                 * @description BGP configuration.
                 */
                bgp?: {
                    /**
                     * Autonomous System
                     * @description Autonomous System number for BGP.
                     */
                    autonomousSystem?: number;
                    /**
                     * eBGP Preference
                     * @description Preference to be set for eBGP [default=170].
                     * @default 170
                     */
                    ebgpPreference: number;
                    /**
                     * Enable BGP
                     * @description Enable or disable BGP.
                     * @default false
                     */
                    enabled: boolean;
                    /**
                     * iBGP Preference
                     * @description Preference to be set for iBGP [default=170].
                     * @default 170
                     */
                    ibgpPreference: number;
                    /**
                     * IP Alias Nexthops
                     * @description IP aliasing configuration.
                     */
                    ipAliasNexthops?: {
                        /**
                         * ESI
                         * @description 10 byte Ethernet Segment Identifier, if not set a type 0 ESI is generated.
                         * @default auto
                         */
                        esi: string;
                        /**
                         * IP Alias Address
                         * Format: ip
                         * @description The nexthop IP address to track for the IP alias.
                         */
                        nextHop: string;
                        /**
                         * Preferred Active Node
                         * @description When not set the ES is used in an all active mode. This references the ToppNode object and when set, the DF algorithm is configured to type preference and the selected Node is set with a higher preference value. All other Nodes have a lower value configured.
                         */
                        preferredActiveNode?: string;
                    }[];
                    /**
                     * IPv4 Unicast
                     * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                     */
                    ipv4Unicast?: {
                        /**
                         * Advertise IPv6 Next Hops
                         * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                         */
                        advertiseIPV6NextHops?: boolean;
                        /**
                         * Enabled
                         * @description Enables the IPv4 unicast AFISAFI.
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Multipath
                         * @description Enable multipath.
                         */
                        multipath?: {
                            /**
                             * Allow Multiple Autonomous Systems Per Path
                             * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                             * @default true
                             */
                            allowMultipleAS: boolean;
                            /**
                             * Maximum Number of Paths
                             * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                             */
                            maxAllowedPaths: number;
                        };
                        /**
                         * Receive IPv6 Next Hops
                         * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                         */
                        receiveIPV6NextHops?: boolean;
                    };
                    /**
                     * IPv6 Unicast
                     * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                     */
                    ipv6Unicast?: {
                        /**
                         * Enabled
                         * @description Enables the IPv6 unicast AFISAFI
                         * @default false
                         */
                        enabled: boolean;
                        /**
                         * Multipath
                         * @description Enable multipath
                         */
                        multipath?: {
                            /**
                             * Allow Multiple Autonomous Systems Per Path
                             * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                             * @default true
                             */
                            allowMultipleAS: boolean;
                            /**
                             * Maximum Number of Paths
                             * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                             */
                            maxAllowedPaths: number;
                        };
                    };
                    /**
                     * Keychain
                     * @description Keychain to be used for authentication
                     */
                    keychain?: string;
                    /**
                     * Min Wait To Advertise Time
                     * @description Minimum wait time before advertising routes post BGP restart.
                     * @default 0
                     */
                    minWaitToAdvertise: number;
                    /**
                     * Enable Rapid Withdrawal
                     * @description Enable rapid withdrawal in BGP.
                     * @default true
                     */
                    rapidWithdrawl: boolean;
                    /**
                     * Wait for FIB Installation
                     * @description Wait for FIB installation before advertising routes.
                     * @default false
                     */
                    waitForFIBInstall: boolean;
                };
                /**
                 * Description
                 * @description The description of the Router.
                 */
                description?: string;
                /**
                 * EVI
                 * @description EVI for the Router; leave blank for auto-allocation from EVI pool.
                 */
                evi?: number;
                /**
                 * EVI Allocation Pool
                 * @description Reference to EVI pool for auto-allocation.
                 * @default evi-pool
                 */
                eviPool: string;
                /**
                 * Export Target
                 * @description Export route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                 */
                exportTarget?: string;
                /**
                 * Import Target
                 * @description Import route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                 */
                importTarget?: string;
                /**
                 * Prefix
                 * Format: ip
                 * @description IPv4 or IPv6 prefix. Active routes in the FIB that exactly match this prefix or that are longer matches of this prefix are provided with resilient-hash programming.
                 */
                ipLoadBalancing?: {
                    /**
                     * Prefix
                     * Format: ip
                     * @description IPv4 or IPv6 prefix. Active routes in the FIB that exactly match this prefix or that are longer matches of this prefix are provided with resilient-hash programming.
                     */
                    prefix?: {
                        /**
                         * Max Paths
                         * Format: number
                         * @description The number of times each next-hop is repeated in the fill pattern if there are max-paths ECMP next-hops.
                         * @default 1
                         */
                        hashBucketsPerPath: number;
                        /**
                         * Max ECMP
                         * Format: number
                         * @description The maximum number of ECMP next-hops per route associated with the resilient-hash prefix.
                         * @default 1
                         */
                        maxECMP: number;
                        /**
                         * Prefix
                         * Format: ip
                         * @description IPv4 or IPv6 prefix. Active routes in the FIB that exactly match this prefix or that are longer matches of this prefix are provided with resilient-hash programming.
                         */
                        prefix: string;
                    }[];
                };
                /**
                 * Node Selector
                 * Format: labelselector
                 * @description Node selectors for deployment constraints.  If Nodes are selected, the Router will only be deployed on the Nodes selected, if left blank it will be deployed on all Nodes for which there are IRB or RoutedInterfaces referencing this Router.
                 */
                nodeSelector?: string[];
                /**
                 * Route Leaking
                 * @description Route leaking controlled by routing policies in and out of the DefaultRouter.
                 */
                routeLeaking?: {
                    /**
                     * Export Policy
                     * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                     */
                    exportPolicy?: string;
                    /**
                     * Import Policy
                     * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                     */
                    importPolicy?: string;
                };
                /**
                 * Router ID
                 * @description Router ID.
                 */
                routerID?: string;
                /**
                 * Tunnel Index Pool
                 * @description Reference to tunnel index allocation pool.
                 * @default tunnel-index-pool
                 */
                tunnelIndexPool: string;
                /**
                 * Type
                 * @description Select the type of Router.  Simple doesn't include any overlay control plane or dataplane properties (EVPN/VXLAN). EVPNVXLAN includes the properties needed to provision this Router over an IP Fabric.
                 * @default EVPNVXLAN
                 * @enum {string}
                 */
                type: "SIMPLE" | "EVPNVXLAN";
                /**
                 * VNI
                 * @description VNI for the Router; leave blank for auto-allocation from VNI pool.
                 */
                vni?: number;
                /**
                 * VNI Allocation Pool
                 * @description Reference to VNI pool for auto-allocation.
                 * @default vni-pool
                 */
                vniPool: string;
            };
            /**
             * Status
             * @description RouterStatus defines the observed state of Router
             */
            readonly status?: {
                /**
                 * BGP Peers
                 * @description List of BGPPeers attached to the router.
                 */
                bgpPeers?: string[];
                /**
                 * EVI
                 * @description EVI in use for this Router.
                 */
                evi?: number;
                /**
                 * Export Target
                 * @description Export route target for this Router.
                 */
                exportTarget?: string;
                /**
                 * Health Score
                 * @description Indicates the health score of the Router.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Explains the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Import Target
                 * @description Import route target for this Router.
                 */
                importTarget?: string;
                /**
                 * IRB Interfaces
                 * @description List of IRBInterfaces attached to the router.
                 */
                irbInterfaces?: string[];
                /**
                 * Last Change
                 * Format: date
                 * @description Timestamp of the last state change.
                 */
                lastChange?: string;
                /**
                 * Nodes
                 * @description List of nodes on which the Router is deployed.
                 */
                nodes?: string[];
                /**
                 * Number of Nodes
                 * @description Number of nodes on which the Router is configured.
                 */
                numNodes?: number;
                /**
                 * Operational State
                 * @description Operational state of the Router.
                 */
                operationalState?: string;
                /**
                 * Routed Interfaces
                 * @description List of RoutedInterfaces attached to the router.
                 */
                routedInterfaces?: string[];
                /**
                 * Tunnel Index
                 * @description Vxlan tunnel index in use.
                 */
                tunnelIndex?: number;
                /**
                 * VNI
                 * @description VNI in use for this Router.
                 */
                vni?: number;
            };
        };
        /** @description RouterList is a list of routers */
        "com.nokia.eda.services.v1alpha1.RouterList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.Router"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.Router_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.Router_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.Router_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.Router_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description VLAN is the Schema for the vlans API */
        "com.nokia.eda.services.v1alpha1.VLAN": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default VLAN */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN_metadata"];
            /**
             * Specification
             * @description The VLAN enables the configuration and management of VLAN and their association with BridgeDomains. This resource allows for specifying the associated BridgeDomain, selecting interfaces based on label selectors, and configuring VLAN IDs with options for auto-allocation from a VLAN pool. It also supports advanced configurations such as ingress and egress traffic management, and overrides for MAC Duplication Detection actions when enabled in the associated BridgeDomain.
             */
            spec: {
                /**
                 * Bridge Domain
                 * @description Reference to a BridgeDomain or SimpleBridgeDomain.
                 */
                bridgeDomain: string;
                /**
                 * Description
                 * @description The description of the VLAN.
                 */
                description?: string;
                /**
                 * Egress
                 * @description Manages actions on traffic at Egress.
                 */
                egress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at egress.
                     */
                    filters?: string[];
                    /**
                     * QoS Egress Policy
                     * @description List of QoS Egress policy references to use at egress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * Ingress
                 * @description Manages actions on traffic at Ingress.
                 */
                ingress?: {
                    /**
                     * Filters
                     * @description List of Filter references to use at ingress.
                     */
                    filters?: string[];
                    /**
                     * QoS Ingress Policy
                     * @description List of QoS Ingress policy references to use at ingress.
                     */
                    qosPolicy?: string[];
                };
                /**
                 * Interface Selector
                 * Format: labelselector
                 * @description Interfaces to use for attachment to this VLAN based on the label selector.  Selects Interfaces based on their associated labels.
                 */
                interfaceSelector: string[];
                /**
                 * L2 MTU
                 * @description L2 MTU specifies the maximum sized Ethernet frame that can be transmitted on the subinterface. If a frame exceeds this size it is discarded. If the l2-mtu of the subinterface exceeds the port-mtu of the associated interface, the subinterface will remain operationally down.
                 */
                l2MTU?: number;
                /**
                 * MAC Duplication Detection Action
                 * @description If Mac Duplication Detection is enabled on the associated Bridge Domain, this property will override the MDD action set in the BridgeDomain.
                 * @enum {string}
                 */
                macDuplicationDetectionAction?: "Blackhole" | "OperDown" | "StopLearning" | "UseBridgeDomainAction";
                /**
                 * Split Horizon Group
                 * @description Name of the Split Horizon Group to be used for this VLAN.  All subinterfaces within this VLAN will be members of this Split Horizon Group.
                 */
                splitHorizonGroup?: string;
                /**
                 * Uplink
                 * @description The Uplink between your access breakout switch and your leaf switch.
                 */
                uplink?: {
                    /**
                     * Egress
                     * @description Manages actions on traffic at Egress of the Local enpoint of the Uplink.
                     */
                    egress?: {
                        /**
                         * Filters
                         * @description List of Filter references to use at egress.
                         */
                        filters?: string[];
                        /**
                         * QoS Egress Policy
                         * @description List of QoS Egress policy references to use at egress.
                         */
                        qosPolicy?: string[];
                    };
                    /**
                     * Ingress
                     * @description Manages actions on traffic at Ingress of the Local enpoint of the Uplink.
                     */
                    ingress?: {
                        /**
                         * Filters
                         * @description List of Filter references to use at ingress.
                         */
                        filters?: string[];
                        /**
                         * QoS Ingress Policy
                         * @description List of QoS Ingress policy references to use at ingress.
                         */
                        qosPolicy?: string[];
                    };
                    /**
                     * Uplink Selector
                     * Format: labelselector
                     * @description Selects TopoLinks which connect a leaf switch to a breakout switch. This is the uplink between your access breakout switch and your leaf switch.  There can only be a single TopoLink between the access breakout switch and the leaf switch, if more than one TopoLink is present between two devices the transaction will fail.
                     */
                    uplinkSelector?: string[];
                    /**
                     * Uplink VLAN ID
                     * @description The VLAN ID to be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                     * @default pool
                     */
                    uplinkVLANID: string;
                    /**
                     * Uplink VLAN Pool
                     * @description A VLAN from this pool will be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                     */
                    uplinkVLANPool?: string;
                };
                /**
                 * VLAN ID
                 * @description Single value between 1-4094 support, ranges supported in the format x-y,x-y, or the special keyword null, any, untagged or pool for auto allocation.
                 * @default pool
                 */
                vlanID: string;
                /**
                 * VLAN Pool
                 * @description Reference to a VLAN pool to use for allocations. [default="vlan-pool"]
                 */
                vlanPool?: string;
            };
            /** Status */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the VNET.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Number of Sub Interfaces
                 * Format: int32
                 * @description Total number of sub-interfaces configured by the VNET.
                 */
                numSubInterfaces?: number;
                /**
                 * Number of Sub Interfaces Oper Down
                 * Format: int32
                 * @description Total number of sub-interfaces configured by the VNET which are oper-down.
                 */
                numSubInterfacesOperDown?: number;
                /**
                 * Operational State
                 * @description Operational state of the VNET.
                 */
                operationalState?: string;
                /**
                 * Sub Interfaces
                 * @description List of members in this Interface.
                 */
                subInterfaces?: {
                    /**
                     * Enabled
                     * @description The administrative status of the SubInterface.
                     */
                    enabled?: boolean;
                    /**
                     * Interface
                     * @description Normalized interface name.
                     */
                    interface: string;
                    /**
                     * Interface Resource
                     * @description Eda interface resource.
                     */
                    interfaceResource: string;
                    /**
                     * Last Change
                     * @description Indicates when this SubInterface last changed state.
                     */
                    lastChange?: string;
                    /**
                     * Node
                     * @description Reference to Node object.
                     */
                    node: string;
                    /**
                     * Node Interface
                     * @description Node specific interface name.
                     */
                    nodeInterface: string;
                    /**
                     * Operating System
                     * @description Operating System of the Node.
                     */
                    operatingSystem?: string;
                    /**
                     * Operational State
                     * @description Indicates the current operational state of the SubInterface.
                     */
                    operationalState?: string;
                    /**
                     * Sub Interface Index
                     * @description Index allocated to the subinterface on the associated interface for the given VLAN.
                     */
                    subInterfaceIndex?: number;
                    /**
                     * VLAN ID
                     * @description vlan assigned to this subinterface.
                     */
                    vlanID?: string;
                }[];
            };
        };
        /** @description VLANList is a list of vlans */
        "com.nokia.eda.services.v1alpha1.VLANList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.VLAN_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.VLAN_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.VLAN_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
        /** @description VirtualNetwork is the Schema for the virtualnetworks API */
        "com.nokia.eda.services.v1alpha1.VirtualNetwork": {
            /** @default services.eda.nokia.com/v1alpha1 */
            apiVersion: string;
            /** @default VirtualNetwork */
            kind: string;
            metadata: components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork_metadata"];
            /**
             * Specification
             * @description VirtualNetworkSpec defines the desired state of VirtualNetwork
             */
            spec: {
                /**
                 * Bridge Domains
                 * @description List of Subnets. [emits=BridgeDomain]
                 */
                bridgeDomains?: {
                    /**
                     * Bridge Domain Name
                     * @description The name of the BridgeDomain.
                     */
                    name: string;
                    /**
                     * Bridge Domain Spec
                     * @description Specification of the BridgeDomain
                     */
                    spec: {
                        /**
                         * Description
                         * @description The description of the BridgeDomain.
                         */
                        description?: string;
                        /**
                         * EVI
                         * @description EVI to use for this BridgeDomain, can be optionally left blank to have it automatically allocated using the EVI Pool.
                         */
                        evi?: number;
                        /**
                         * EVI Allocation Pool
                         * @description Reference to an EVI pool to use for allocations if EVI is left blank.
                         * @default evi-pool
                         */
                        eviPool: string;
                        /**
                         * Export Target
                         * @description Export route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                         */
                        exportTarget?: string;
                        /**
                         * Import Target
                         * @description Import route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                         */
                        importTarget?: string;
                        /**
                         * L2 Proxy ARP/ND
                         * @description Enables / Disabled Proxy ARP / Proxy ND.
                         */
                        l2proxyARPND?: {
                            /** Dynamic Learning */
                            dynamicLearning?: {
                                /**
                                 * Age Time
                                 * @description Aging timer value for the proxy entries in seconds. If not set, this indicates that the entries are never flushed.
                                 */
                                ageTime?: number;
                                /**
                                 * Enabled
                                 * @description Enables or disables Dynamic Learning.
                                 * @default false
                                 */
                                enabled: boolean;
                                /**
                                 * Send Refresh Interval
                                 * @description The interval determines the frequency at which the system generates three ARP Requests or Neighbor Solicitations with the intent to refresh the proxy entry. The refresh is sent within the age-time window.
                                 */
                                sendRefresh?: number;
                            };
                            /** L2 Proxy ARP/ND IP Duplication Detection */
                            ipDuplication?: {
                                /**
                                 * Enabled
                                 * @description Enables or disables IP Duplication.
                                 * @default false
                                 */
                                enabled: boolean;
                                /**
                                 * Hold Down Time
                                 * @description Time to wait in minutes from the moment an IP is declared duplicate to the time the IP is removed from the proxy ARP/ND table.
                                 * @default 9
                                 */
                                holdDownTime: number;
                                /**
                                 * Monitoring Window
                                 * @description Monitoring window for detecting duplication on a given IP address in the proxy ARP/ND table.
                                 * @default 3
                                 */
                                monitoringWindow: number;
                                /**
                                 * Number of Moves
                                 * @description Number of moves in the proxy ARP/ND table that an IP is allowed within the monitoring-window.
                                 * @default 5
                                 */
                                numMoves: number;
                            };
                            /**
                             * Proxy ARP
                             * @description Enables proxy ARP.
                             * @default false
                             */
                            proxyARP: boolean;
                            /**
                             * Proxy ND
                             * @description Enables proxy ND.
                             * @default false
                             */
                            proxyND: boolean;
                            /**
                             * L2 Proxy ARP/ND Table Size
                             * @description Maximum number of entries allowed in the proxy table of the bridge domain.
                             * @default 250
                             */
                            tableSize: number;
                        };
                        /**
                         * MAC Aging
                         * Format: int32
                         * @description Configurable aging time for dynamically learned mac addresses.
                         * @default 300
                         */
                        macAging: number;
                        /**
                         * MAC Duplication Detection
                         * @description Enable or disable MAC duplication detection and resolution mechanisms.
                         */
                        macDuplicationDetection?: {
                            /**
                             * Action
                             * @description Action to take on the subinterface upon detecting at least one mac addresses as duplicate on the subinterface.
                             * @default StopLearning
                             * @enum {string}
                             */
                            action: "Blackhole" | "OperDown" | "StopLearning";
                            /**
                             * Enabled
                             * @description Enables or disables Mac Duplication Detection.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * Hold Down Time
                             * @description Time to wait in minutes from the moment a mac is declared duplicate to the mac is flushed from the bridge table.
                             * @default 9
                             */
                            holdDownTime: number;
                            /**
                             * Monitoring Window
                             * @description Monitoring window in minutes for detecting duplication on a given mac address.
                             * @default 3
                             */
                            monitoringWindow: number;
                            /**
                             * Number of Moves
                             * @description Number of moves a mac is allowed within the monitoring-window, before it is declared duplicate.
                             * @default 5
                             */
                            numMoves: number;
                        };
                        /**
                         * MAC Limit
                         * Format: int32
                         * @description Sets the maximum number of MAC entries accepted in the bridge table.
                         */
                        macLimit?: number;
                        /**
                         * Tunnel Index Allocation Pool
                         * @description Reference to a tunnel index pool to use for allocations.
                         * @default tunnel-index-pool
                         */
                        tunnelIndexPool: string;
                        /**
                         * Type
                         * @description Select the type of BridgeDomain.  Simple doesn't include any overlay control plane or dataplane properties (EVPN/VXLAN). EVPNVXLAN includes the properties needed to provision this BridgeDomain over an IP Fabric.
                         * @default EVPNVXLAN
                         * @enum {string}
                         */
                        type: "SIMPLE" | "EVPNVXLAN";
                        /**
                         * VNI
                         * @description VNI to use for this BridgeDomain, can be optionally left blank to have it allocated using the VNI Pool.
                         */
                        vni?: number;
                        /**
                         * VNI Allocation Pool
                         * @description Reference to a VNI pool to use for allocations if VNI is left blank.
                         * @default vni-pool
                         */
                        vniPool: string;
                    };
                }[];
                /**
                 * Bridge Interfaces
                 * @description List of BridgeInterfaces. [emits=BridgeInterface]
                 */
                bridgeInterfaces?: {
                    /**
                     * Bridge Interface Name
                     * @description The name of the BridgeInterface.
                     */
                    name: string;
                    /**
                     * Bridge Interface Spec
                     * @description Specification of the BridgeInterface
                     */
                    spec: {
                        /**
                         * Bridge Domain
                         * @description Reference to a BridgeDomain in which to attach the BridgeInterface.
                         */
                        bridgeDomain: string;
                        /**
                         * Description
                         * @description The description of the BridgeInterface.
                         */
                        description?: string;
                        /**
                         * Egress Actions
                         * @description Manages actions on traffic at Egress.
                         */
                        egress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at egress.
                             */
                            filters?: string[];
                            /**
                             * QoS Egress Policy
                             * @description List of QoS Egress policy references to use at egress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * Ingress Actions
                         * @description Manages actions on traffic at Ingress.
                         */
                        ingress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at ingress.
                             */
                            filters?: string[];
                            /**
                             * QoS Ingress Policy
                             * @description List of QoS Ingress policy references to use at ingress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * Interface
                         * @description Reference to an Interface resource to attach this BridgeInterface.
                         */
                        interface: string;
                        /**
                         * L2 MTU
                         * @description L2 MTU specifies the maximum sized Ethernet frame that can be transmitted on the subinterface. If a frame exceeds this size it is discarded. If the l2-mtu of the subinterface exceeds the port-mtu of the associated interface, the subinterface will remain operationally down.
                         */
                        l2MTU?: number;
                        /**
                         * MAC Duplication Detection Action
                         * @description Override for Mac Duplication Detection action if enabled in the associated BridgeDomain.
                         * @enum {string}
                         */
                        macDuplicationDetectionAction?: "Blackhole" | "OperDown" | "StopLearning" | "UseBridgeDomainAction";
                        /**
                         * Split Horizon Group
                         * @description Split Horizon Group to be used for this BridgeInterface. The subinterface within this BridgeInterface will be a member of this Split Horizon Group.
                         */
                        splitHorizonGroup?: string;
                        /**
                         * Uplink
                         * @description The Uplink between your access breakout switch and your leaf switch.
                         */
                        uplink?: {
                            /**
                             * Egress
                             * @description Manages actions on traffic at Egress of the Local enpoint of the Uplink.
                             */
                            egress?: {
                                /**
                                 * Filters
                                 * @description List of Filter references to use at egress.
                                 */
                                filters?: string[];
                                /**
                                 * QoS Egress Policy
                                 * @description List of QoS Egress policy references to use at egress.
                                 */
                                qosPolicy?: string[];
                            };
                            /**
                             * Ingress
                             * @description Manages actions on traffic at Ingress of the Local enpoint of the Uplink.
                             */
                            ingress?: {
                                /**
                                 * Filters
                                 * @description List of Filter references to use at ingress.
                                 */
                                filters?: string[];
                                /**
                                 * QoS Ingress Policy
                                 * @description List of QoS Ingress policy references to use at ingress.
                                 */
                                qosPolicy?: string[];
                            };
                            /**
                             * Uplink Selector
                             * Format: labelselector
                             * @description Selects TopoLinks which connect a leaf switch to a breakout switch. This is the uplink between your access breakout switch and your leaf switch.  There can only be a single TopoLink between the access breakout switch and the leaf switch, if more than one TopoLink is present between two devices the transaction will fail.
                             */
                            uplinkSelector?: string[];
                            /**
                             * Uplink VLAN ID
                             * @description The VLAN ID to be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                             * @default pool
                             */
                            uplinkVLANID: string;
                            /**
                             * Uplink VLAN Pool
                             * @description A VLAN from this pool will be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                             */
                            uplinkVLANPool?: string;
                        };
                        /**
                         * VLAN ID
                         * @description Single value between 1-4094 support, ranges supported in the format x-y,x-y, or the special keyword null, any, untagged or pool for auto allocation.
                         */
                        vlanID: string;
                    };
                }[];
                /**
                 * IRB Interfaces
                 * @description List of IRBInterfaces. [emits=IRBInterface]
                 */
                irbInterfaces?: {
                    /**
                     * IRB Interface Name
                     * @description The name of the IrbInterface.
                     */
                    name: string;
                    /**
                     * IRB Interface Spec
                     * @description Specification of the IrbInterface
                     */
                    spec: {
                        /**
                         * Anycast GW MAC
                         * Format: mac
                         * @description The gateway MAC to use on the anycast address, if left empty the node will automatically assign one.
                         */
                        anycastGatewayMAC?: string;
                        /**
                         * ARP Timeout
                         * Format: int32
                         * @description Duration of time that dynamic ARP entries remain in the ARP cache before they expire.
                         * @default 14400
                         */
                        arpTimeout: number;
                        /**
                         * BFD Configuration
                         * @description Enable BFD on the IRBInterface.
                         */
                        bfd?: {
                            /**
                             * Transmit Interval
                             * @description The minimum interval in microseconds between transmission of BFD control packets.
                             * @default 1000000
                             */
                            desiredMinTransmitInt: number;
                            /**
                             * Multiplier
                             * @description The number of packets that must be missed to declare this session as down.
                             * @default 3
                             */
                            detectionMultiplier: number;
                            /**
                             * Enabled
                             * @description Enables Biforward Detection.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * Minimum Echo Receive Interval
                             * @description The minimum interval between echo packets the local node can receive.
                             * @default 1000000
                             */
                            minEchoReceiveInterval: number;
                            /**
                             * Receive Interval
                             * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                             * @default 1000000
                             */
                            requiredMinReceive: number;
                        };
                        /**
                         * Bridge Domain
                         * @description Reference to a BridgeDomain.
                         */
                        bridgeDomain: string;
                        /**
                         * Description
                         * @description The description of the IRBInterface.
                         */
                        description?: string;
                        /**
                         * Egress Actions
                         * @description Manages actions on traffic at Egress.
                         */
                        egress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at egress.
                             */
                            filters?: string[];
                            /**
                             * QoS Egress Policy
                             * @description List of QoS Egress policy references to use at egress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * EVPN Route Advertisement Type
                         * @description Controls the type of ARP/ND entries to advertise.
                         */
                        evpnRouteAdvertisementType?: {
                            /**
                             * Advertise Dynamic ARP
                             * @description Advertise dynamic ARP entries.
                             * @default false
                             */
                            arpDynamic: boolean;
                            /**
                             * Advertise Static ARP
                             * @description Advertise static ARP entries.
                             * @default false
                             */
                            arpStatic: boolean;
                            /**
                             * Advertise Dynamic ND
                             * @description Advertise dynamic ND entries.
                             * @default false
                             */
                            ndDynamic: boolean;
                            /**
                             * Advertise Static ND
                             * @description Advertise static ND entries.
                             * @default false
                             */
                            ndStatic: boolean;
                        };
                        /**
                         * Host Route Population
                         * @description Configures host route population based on ARP entries.
                         */
                        hostRoutePopulate?: {
                            /**
                             * Dynamic ARP Entries
                             * @description Create host routes out of dynamic ARP entries.
                             * @default true
                             */
                            dynamic: boolean;
                            /**
                             * EVPN Learned ARP Entries
                             * @description Create host routes out of EVPN learned ARP entries.
                             * @default false
                             */
                            evpn: boolean;
                            /**
                             * Static ARP Entries
                             * @description Create host routes out of static ARP entries.
                             * @default true
                             */
                            static: boolean;
                        };
                        /**
                         * Ingress Actions
                         * @description Manages actions on traffic at Ingress.
                         */
                        ingress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at ingress.
                             */
                            filters?: string[];
                            /**
                             * QoS Ingress Policy
                             * @description List of QoS Ingress policy references to use at ingress.
                             */
                            qosPolicy?: string[];
                        };
                        /** IP Addresses */
                        ipAddresses?: {
                            /**
                             * IPv4 Addresses
                             * @description IPv4 address in IP/mask form, e.g., 192.168.0.1/24.
                             */
                            ipv4Address?: {
                                /**
                                 * IP Prefix
                                 * @description Address and mask to use
                                 */
                                ipPrefix: string;
                                /**
                                 * Primary
                                 * @description Indicates which address to use as primary for broadcast
                                 */
                                primary?: boolean;
                            };
                            /**
                             * IPv6 Addresses
                             * @description IPv6 address in IP/mask form, e.g., fc00::1/120.
                             */
                            ipv6Address?: {
                                /**
                                 * IP Prefix
                                 * @description Address and mask to use
                                 */
                                ipPrefix: string;
                                /**
                                 * Primary
                                 * @description Indicates which address to use as primary for broadcast
                                 */
                                primary?: boolean;
                            };
                            /**
                             * Node
                             * @description Reference to a TopoNode resource, if not specified the IP address will be assigned to all nodes on which the IRB is deployed.  If specified the IP address will be assigned to the specified node.
                             */
                            node?: string;
                        }[];
                        /**
                         * IP MTU
                         * @description IP MTU for the IRBInterface [default=1500].
                         * @default 1500
                         */
                        ipMTU: number;
                        /** IPv6 Router Advertisement */
                        ipv6RouterAdvertisement?: {
                            /**
                             * Current Hop Limit
                             * Format: int32
                             * @description The current hop limit to advertise in the router advertisement messages.
                             * @default 64
                             */
                            currentHopLimit: number;
                            /**
                             * Enable Router Advertisements
                             * @description Enable or disable IPv6 router advertisements.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * IP MTU
                             * Format: int32
                             * @description The IP MTU to advertise in the router advertisement messages.
                             */
                            ipMTU?: number;
                            /**
                             * Managed Configuration Flag
                             * @description Enable DHCPv6 for address configuration (M-bit).
                             * @default false
                             */
                            managedConfigurationFlag: boolean;
                            /**
                             * Maximum Advertisement Interval
                             * Format: int32
                             * @description Maximum time between router advertisements (in seconds).
                             * @default 600
                             */
                            maxAdvertisementInterval: number;
                            /**
                             * Minimum Advertisement Interval
                             * Format: int32
                             * @description Minimum time between router advertisements (in seconds).
                             * @default 200
                             */
                            minAdvertisementInterval: number;
                            /**
                             * Other Configuration Flag
                             * @description Enable DHCPv6 for other configuration (O-bit).
                             * @default false
                             */
                            otherConfigurationFlag: boolean;
                            /**
                             * Prefixes
                             * @description IPv6 prefixes to advertise in router advertisements.
                             */
                            prefixes?: {
                                /**
                                 * Autonomous Flag
                                 * @description When this is set in the prefix information option hosts can use the prefix for stateless address autoconfiguration (SLAAC).
                                 * @default true
                                 */
                                autonomousFlag: boolean;
                                /**
                                 * On-Link Flag
                                 * @description When this is set in the prefix information option hosts can use the prefix for on-link determination.
                                 * @default true
                                 */
                                onLinkFlag: boolean;
                                /**
                                 * Preferred Lifetime
                                 * Format: int32
                                 * @description The length of time in seconds (relative to the time the packet is sent) that addresses generated from the prefix via stateless address autoconfiguration remain preferred.
                                 * @default 604800
                                 */
                                preferredLifetime: number;
                                /**
                                 * IPv6 Prefix
                                 * @description An IPv6 global unicast address prefix.
                                 */
                                prefix: string;
                                /**
                                 * Valid Lifetime
                                 * Format: int32
                                 * @description The length of time in seconds (relative to the time the packet is sent) that the prefix is valid for the purpose of on-link determination.
                                 * @default 2592000
                                 */
                                validLifetime: number;
                            }[];
                            /**
                             * Reachable Time
                             * Format: int32
                             * @description Time in milliseconds for Neighbor Unreachability Detection.
                             * @default 0
                             */
                            reachableTime: number;
                            /**
                             * Retransmit Time
                             * Format: int32
                             * @description Time in milliseconds between retransmitted NS messages.
                             * @default 0
                             */
                            retransmitTime: number;
                            /**
                             * Router Lifetime
                             * Format: int32
                             * @description Router lifetime in seconds for default gateway.
                             * @default 1800
                             */
                            routerLifetime: number;
                        };
                        /**
                         * L3 Proxy ARP/ND
                         * @description L3 Proxy ARP and ND configuration.
                         */
                        l3ProxyARPND?: {
                            /**
                             * Proxy ARP Enabled
                             * @description Select whether Proxy ARP should be enabled.
                             * @default false
                             */
                            proxyARP: boolean;
                            /**
                             * Proxy ND Enabled
                             * @description Select whether Proxy ND should be enabled.
                             * @default false
                             */
                            proxyND: boolean;
                        };
                        /**
                         * Learn Unsolicited ARPs
                         * @description Enable or disable learning of unsolicited ARPs.
                         * @default NONE
                         * @enum {string}
                         */
                        learnUnsolicited: "BOTH" | "GLOBAL" | "LINK-LOCAL" | "NONE";
                        /**
                         * Router
                         * @description Reference to a Router.
                         */
                        router: string;
                        /**
                         * Unnumbered
                         * @description Enables the use of unnumbered interfaces on the IRBInterface.  If IPv6 is specified, no IP address are configured on the sub-interface and only the link local address will be used.  If any IP addresses are specified for either IPv4 or IPv6 that will take precedence and IPs will be assigned to the interfaces.(Deprecated, Use IPv6RouterAdvertisement)
                         * @enum {string}
                         */
                        unnumbered?: "IPV6";
                        /**
                         * Virtual IP Discovery
                         * @description Configuration for Virtual IP discovery on the interface.
                         */
                        virtualIPDiscovery?: {
                            /**
                             * Address
                             * @description Virtual IP Address.
                             */
                            address: string;
                            /**
                             * Allowed MAC Addresses
                             * Format: macAddr
                             * @description List of allowed MAC addresses for a discovered virtual IP address.
                             */
                            allowedMAC?: string[];
                            /**
                             * Bridge Interfaces to Probe
                             * @description List of BridgeInterfaces on the associated MAC-VRF to which the ARP probes are sent. If left blank, the probes are sent on all BridgeInterfaces associated with the BridgeDomain.
                             */
                            bridgeInterfaceToProbe?: string[];
                            /**
                             * Probe Interval
                             * @description ARP probe interval in seconds.
                             * @default 0
                             */
                            probeInterval: number;
                            /**
                             * VLANs to Probe
                             * @description List of VLANs on the associated BridgeDomain to which the ARP probes are sent.  If left blank, the probes are sent on all VLANs associated with the BridgeDomain.
                             */
                            vlanToProbe?: string[];
                        }[];
                    };
                }[];
                /**
                 * Protocols
                 * @description Protocols to configure.
                 */
                protocols?: {
                    /**
                     * BGP
                     * @description BGP Protocol.
                     */
                    bgp?: {
                        /**
                         * BGP Groups
                         * @description List of BgpGroups. [emits=BGPGroup]
                         */
                        bgpGroups?: {
                            /**
                             * BGP Group Name
                             * @description The name of the BgpGroup.
                             */
                            name: string;
                            /**
                             * BGP Group Spec
                             * @description Specification of the BgpGroup
                             */
                            spec: {
                                /**
                                 * AS Path Options
                                 * @description AS Path Options
                                 */
                                asPathOptions?: {
                                    /**
                                     * Allow Own AS
                                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                                     * @default 0
                                     */
                                    allowOwnAS: number;
                                    /**
                                     * Remove Private AS
                                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                                     */
                                    removePrivateAS?: {
                                        /**
                                         * Ignore Peer AS
                                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                                         * @default false
                                         */
                                        ignorePeerAS: boolean;
                                        /**
                                         * Leading Only
                                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                                         * @default false
                                         */
                                        leadingOnly: boolean;
                                        /**
                                         * Remove Private AS Mode
                                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                                         * @default DISABLED
                                         * @enum {string}
                                         */
                                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                                    };
                                };
                                /**
                                 * BFD
                                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                                 */
                                bfd?: boolean;
                                /**
                                 * Route Reflector Client
                                 * @description When set to true, all configured and dynamic BGP peers are considered RR clients.
                                 */
                                client?: boolean;
                                /**
                                 * Cluster ID
                                 * Format: ip
                                 * @description Enables route reflect client and sets the cluster ID.
                                 */
                                clusterID?: string;
                                /**
                                 * Description
                                 * @description Sets the description on the BGP group.
                                 */
                                description?: string;
                                /**
                                 * Export Policy
                                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                                 */
                                exportPolicy?: string[];
                                /**
                                 * GR Stale Route Time
                                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                                 */
                                grStaleRouteTime?: number;
                                /**
                                 * Import Policy
                                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                                 */
                                importPolicy?: string[];
                                /**
                                 * IPv4 Unicast
                                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                                 */
                                ipv4Unicast?: {
                                    /**
                                     * Advertise IPv6 Next Hops
                                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                                     */
                                    advertiseIPV6NextHops?: boolean;
                                    /**
                                     * Enabled
                                     * @description Enables the IPv4 unicast AFISAFI.
                                     */
                                    enabled?: boolean;
                                    /**
                                     * Max Received Routes
                                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                                     */
                                    maxReceivedRoutes?: number;
                                    /**
                                     * Receive IPv6 Next Hops
                                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                                     */
                                    receiveIPV6NextHops?: boolean;
                                };
                                /**
                                 * IPv6 Unicast
                                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                                 */
                                ipv6Unicast?: {
                                    /**
                                     * Enabled
                                     * @description Enables the IPv6 unicast AFISAFI
                                     */
                                    enabled?: boolean;
                                    /**
                                     * Max Received Routes
                                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                                     */
                                    maxReceivedRoutes?: number;
                                };
                                /**
                                 * Keychain
                                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                                 */
                                keychain?: string;
                                /**
                                 * Local AS
                                 * @description The local autonomous system number advertised to peers.
                                 */
                                localAS?: {
                                    /**
                                     * Local Autonomous System
                                     * @description Local Autonomous System number.
                                     */
                                    autonomousSystem: number;
                                    /**
                                     * Prepend Global Autonomous System
                                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                                     */
                                    prependGlobalAS?: boolean;
                                    /**
                                     * Prepend Local Autonomous System
                                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                                     */
                                    prependLocalAS?: boolean;
                                };
                                /**
                                 * Local Preference
                                 * @description Local Preference attribute added to received routes from the BGP peers, also sets local preference for generated routes.
                                 */
                                localPreference?: number;
                                /**
                                 * Multihop Max Hop Count
                                 * @description Enable multihop for eBGP peers and sets the maximum number of hops allowed.
                                 */
                                multiHopMaxHop?: number;
                                /**
                                 * Next Hop Self
                                 * @description When set to true, the next-hop in all IPv4-unicast, IPv6-unicast and EVPN BGP routes advertised to the peer is set to the local-address.
                                 */
                                nextHopSelf?: boolean;
                                /**
                                 * Peer AS
                                 * @description The autonomous system number expected from peers.
                                 */
                                peerAS?: {
                                    /**
                                     * Peer Autonomous System
                                     * @description Local Autonomous System number.
                                     */
                                    autonomousSystem: number;
                                };
                                /**
                                 * Send Community Large
                                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                                 */
                                sendCommunityLarge?: boolean;
                                /**
                                 * Send Community Standard
                                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                                 */
                                sendCommunityStandard?: boolean;
                                /**
                                 * Send Default Route
                                 * @description Options for controlling the generation of default routes towards BGP peers.
                                 */
                                sendDefaultRoute?: {
                                    /**
                                     * Address Families
                                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                                     */
                                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                                    /**
                                     * Export Policy
                                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                                     */
                                    exportPolicy?: string;
                                };
                                /**
                                 * Timers
                                 * @description Timer configurations
                                 */
                                timers?: {
                                    /**
                                     * Connect Retry
                                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                                     */
                                    connectRetry?: number;
                                    /**
                                     * Hold Time
                                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                                     */
                                    holdTime?: number;
                                    /**
                                     * Keep Alive
                                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                                     */
                                    keepAlive?: number;
                                    /**
                                     * Minimum Advertisement Interval
                                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                                     */
                                    minimumAdvertisementInterval?: number;
                                };
                            };
                        }[];
                        /**
                         * BGP Peers
                         * @description List of BgpPeers [emits=BGPPeer]
                         */
                        bgpPeers?: {
                            /**
                             * BGP Peer Name
                             * @description The name of the BgpPeer.
                             */
                            name: string;
                            /**
                             * BGP Peer Spec
                             * @description Specification of the BgpPeer
                             */
                            spec: {
                                /**
                                 * AS Path Options
                                 * @description AS Path Options
                                 */
                                asPathOptions?: {
                                    /**
                                     * Allow Own AS
                                     * @description The maximum number of times the global AS number or a local AS number of the BGP instance can appear in any received AS_PATH before it is considered a loop and considered invalid.
                                     * @default 0
                                     */
                                    allowOwnAS: number;
                                    /**
                                     * Remove Private AS
                                     * @description Options for removing private AS numbers (2-byte and 4-byte) from the advertised AS path towards all peers.
                                     */
                                    removePrivateAS?: {
                                        /**
                                         * Ignore Peer AS
                                         * @description If set to true then do not delete or replace a private AS number that is the same as the peer AS number.
                                         * @default false
                                         */
                                        ignorePeerAS: boolean;
                                        /**
                                         * Leading Only
                                         * @description If set to true then only delete or replace private AS numbers that appear before the first occurrence of a non-private ASN in the sequence of most recent ASNs in the AS path.
                                         * @default false
                                         */
                                        leadingOnly: boolean;
                                        /**
                                         * Remove Private AS Mode
                                         * @description The method by which private AS numbers are removed from the advertised AS_PATH attribute.
                                         * @default DISABLED
                                         * @enum {string}
                                         */
                                        removePrivateASMode: "DISABLED" | "REPLACE" | "DELETE";
                                    };
                                };
                                /**
                                 * BFD
                                 * @description Enable or disable Bi-forward Forwarding Detection (BFD) with fast failover.
                                 */
                                bfd?: boolean;
                                /**
                                 * Route Reflector Client
                                 * @description When set to true, all configured and dynamic BGP peers are considered RR clients.
                                 */
                                client?: boolean;
                                /**
                                 * Cluster ID
                                 * Format: ip
                                 * @description Enables route reflect client and sets the cluster ID.
                                 */
                                clusterID?: string;
                                /**
                                 * Description
                                 * @description Sets the description on the BGP peer
                                 */
                                description?: string;
                                /**
                                 * Dynamic Neighbor
                                 * @description When set to true the Interface is added to the dynamic-neighbor list for dynamic peering.
                                 * @default false
                                 */
                                dynamicNeighbor: boolean;
                                /**
                                 * Dynamic Neighbor Allowed Peer AS
                                 * @description The autonomous system numbers allowed from peers if dynamic peering is enabled.
                                 */
                                dynamicNeighborAllowedPeerAS?: number[];
                                /**
                                 * Export Policy
                                 * @description Reference to a Policy CR that will be used to filter routes advertised to peers.
                                 */
                                exportPolicy?: string[];
                                /**
                                 * GR Stale Route Time
                                 * @description Enables Graceful Restart on the peer and sets the stale route time.
                                 */
                                grStaleRouteTime?: number;
                                /**
                                 * Group
                                 * @description Reference to a BGPGroup. When present this BGP peer will be added to the BGP group
                                 */
                                group: string;
                                /**
                                 * Import Policy
                                 * @description Reference to a Policy CR that will be used to filter routes received from peers.
                                 */
                                importPolicy?: string[];
                                /**
                                 * Interface Reference
                                 * @description Reference to a RoutedInterface or IrbInterface resource whose IP will be used as a source IP for the BGP session.
                                 */
                                interface: string;
                                /**
                                 * Interface Reference Type
                                 * @description InterfaceReference type defines whether the provided Reference is a RoutedInterface or IrbInterface.
                                 * @enum {string}
                                 */
                                interfaceKind: "ROUTEDINTERFACE" | "IRBINTERFACE";
                                /**
                                 * IPv4 Unicast
                                 * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                                 */
                                ipv4Unicast?: {
                                    /**
                                     * Advertise IPv6 Next Hops
                                     * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                                     */
                                    advertiseIPV6NextHops?: boolean;
                                    /**
                                     * Enabled
                                     * @description Enables the IPv4 unicast AFISAFI.
                                     */
                                    enabled?: boolean;
                                    /**
                                     * Max Received Routes
                                     * @description Maximum number of IPv4 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                                     */
                                    maxReceivedRoutes?: number;
                                    /**
                                     * Receive IPv6 Next Hops
                                     * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                                     */
                                    receiveIPV6NextHops?: boolean;
                                };
                                /**
                                 * IPv6 Unicast
                                 * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                                 */
                                ipv6Unicast?: {
                                    /**
                                     * Enabled
                                     * @description Enables the IPv6 unicast AFISAFI
                                     */
                                    enabled?: boolean;
                                    /**
                                     * Max Received Routes
                                     * @description Maximum number of IPv6 Unicast routes that will be accepted from the neighbor, counting routes accepted and rejected by import policies.
                                     */
                                    maxReceivedRoutes?: number;
                                };
                                /**
                                 * Keychain
                                 * @description Reference to a Keychain resource that will be used for authentication with the BGP peer.
                                 */
                                keychain?: string;
                                /**
                                 * Local AS
                                 * @description The local autonomous system number advertised to peers.
                                 */
                                localAS?: {
                                    /**
                                     * Local Autonomous System
                                     * @description Local Autonomous System number.
                                     */
                                    autonomousSystem: number;
                                    /**
                                     * Prepend Global Autonomous System
                                     * @description When set to true, the global ASN value is prepended to the AS path in outbound routes towards each BGP peer.
                                     */
                                    prependGlobalAS?: boolean;
                                    /**
                                     * Prepend Local Autonomous System
                                     * @description When set to true, the local AS value is prepended to the AS path of inbound routes from each EBGP peer.
                                     */
                                    prependLocalAS?: boolean;
                                };
                                /**
                                 * Local Preference
                                 * @description Local Preference attribute added to received routes from the BGP peers, also sets local preference for generated routes.
                                 */
                                localPreference?: number;
                                /**
                                 * Multihop Max Hop Count
                                 * @description Enable multihop for eBGP peers and sets the maximum number of hops allowed.
                                 */
                                multiHopMaxHop?: number;
                                /**
                                 * Next Hop Self
                                 * @description When set to true, the next-hop in all IPv4-unicast, IPv6-unicast and EVPN BGP routes advertised to the peer is set to the local-address.
                                 */
                                nextHopSelf?: boolean;
                                /**
                                 * Node
                                 * @description Node on which to configure the BGP peer. This node must be one of the nodes on which the IRBInterface is configured.  When left blank or if the node is not part of the IRBInterface, the peer will not be deployed. Ignored for RoutedInterfaces.
                                 */
                                node?: string;
                                /**
                                 * Peer AS
                                 * @description The autonomous system number expected from peers.
                                 */
                                peerAS?: {
                                    /**
                                     * Peer Autonomous System
                                     * @description Local Autonomous System number.
                                     */
                                    autonomousSystem: number;
                                };
                                /**
                                 * Peer IP
                                 * Format: ip
                                 * @description Peer IP to which the peering session will be established.
                                 */
                                peerIP?: string;
                                /**
                                 * Send Community Large
                                 * @description When false, all large (12 byte) BGP communities from all outbound routes advertised to the peer are stripped.
                                 */
                                sendCommunityLarge?: boolean;
                                /**
                                 * Send Community Standard
                                 * @description When false, all standard (4 byte) communities from all outbound routes advertised to the peer are stripped.
                                 */
                                sendCommunityStandard?: boolean;
                                /**
                                 * Send Default Route
                                 * @description Options for controlling the generation of default routes towards BGP peers.
                                 */
                                sendDefaultRoute?: {
                                    /**
                                     * Address Families
                                     * @description Enables the sending of a synthetically generated default IPv4 or IPV6 route to each peer.
                                     */
                                    addressFamily: ("IPV4-UNICAST" | "IPV6-UNICAST")[];
                                    /**
                                     * Export Policy
                                     * @description Reference to a Policy that should be applied to the advertised default routes, in order to set their attributes to non-default values.
                                     */
                                    exportPolicy?: string;
                                };
                                /**
                                 * Timers
                                 * @description Timer configurations
                                 */
                                timers?: {
                                    /**
                                     * Connect Retry
                                     * @description The time interval in seconds between successive attempts to establish a session with a peer.
                                     */
                                    connectRetry?: number;
                                    /**
                                     * Hold Time
                                     * @description The hold-time interval in seconds that the router proposes to the peer in its OPEN message.
                                     */
                                    holdTime?: number;
                                    /**
                                     * Keep Alive
                                     * @description The interval in seconds between successive keepalive messages sent to the peer.
                                     */
                                    keepAlive?: number;
                                    /**
                                     * Minimum Advertisement Interval
                                     * @description The value assigned to the MinRouteAdvertisementIntervalTimer of RFC 4271, for both EBGP and IBGP sessions.
                                     */
                                    minimumAdvertisementInterval?: number;
                                };
                            };
                        }[];
                    };
                    /**
                     * Routing Policies
                     * @description Routing Policies.
                     */
                    routingPolicies?: {
                        /**
                         * Policies
                         * @description List of Policies.  [emits=Policy]
                         */
                        policies?: {
                            /**
                             * Policy Name
                             * @description Name of the Policy.
                             */
                            name: string;
                            /**
                             * Policy Spec
                             * @description A policy
                             */
                            spec?: {
                                /**
                                 * Default Action
                                 * @description The default action to apply if no other actions are defined.
                                 */
                                defaultAction?: {
                                    /**
                                     * BGP
                                     * @description Actions related to the BGP protocol.
                                     */
                                    bgp?: {
                                        /**
                                         * AS Path Prepend
                                         * Format: int32
                                         * @description AS number to prepend to the AS Path attributes.
                                         */
                                        asPathPrepend?: number;
                                        /**
                                         * AS Path Remove
                                         * @description Clear the AS path to make it empty.
                                         */
                                        asPathRemove?: boolean;
                                        /**
                                         * AS Path Replace
                                         * @description Replace the existing AS path with a new AS_SEQUENCE containing the listed AS numbers.
                                         */
                                        asPathReplace?: number[];
                                        /**
                                         * Set Local Preference
                                         * Format: int32
                                         * @description Set a new LOCAL_PREF value for matching BGP routes.
                                         */
                                        localPreference?: number;
                                        /**
                                         * Set Origin
                                         * @description Set a new ORIGIN attribute for matching BGP routes.
                                         * @enum {string}
                                         */
                                        setOrigin?: "egp" | "igp" | "incomplete";
                                    };
                                    /**
                                     * Policy Result
                                     * @description Final disposition for the route.
                                     * @enum {string}
                                     */
                                    policyResult?: "accept" | "reject";
                                };
                                /**
                                 * Statements
                                 * @description List of policy statements.
                                 */
                                statement?: {
                                    /**
                                     * Action
                                     * @description Actions for routes that match the policy statement.
                                     */
                                    action?: {
                                        /**
                                         * BGP
                                         * @description Actions related to the BGP protocol.
                                         */
                                        bgp?: {
                                            /**
                                             * AS Path Prepend
                                             * Format: int32
                                             * @description AS number to prepend to the AS Path attributes.
                                             */
                                            asPathPrepend?: number;
                                            /**
                                             * AS Path Remove
                                             * @description Clear the AS path to make it empty.
                                             */
                                            asPathRemove?: boolean;
                                            /**
                                             * AS Path Replace
                                             * @description Replace the existing AS path with a new AS_SEQUENCE containing the listed AS numbers.
                                             */
                                            asPathReplace?: number[];
                                            /**
                                             * Set Local Preference
                                             * Format: int32
                                             * @description Set a new LOCAL_PREF value for matching BGP routes.
                                             */
                                            localPreference?: number;
                                            /**
                                             * Set Origin
                                             * @description Set a new ORIGIN attribute for matching BGP routes.
                                             * @enum {string}
                                             */
                                            setOrigin?: "egp" | "igp" | "incomplete";
                                        };
                                        /**
                                         * Policy Result
                                         * @description Final disposition for the route.
                                         * @enum {string}
                                         */
                                        policyResult?: "accept" | "reject";
                                    };
                                    /**
                                     * Match
                                     * @description Match conditions of the policy statement.
                                     */
                                    match?: {
                                        /**
                                         * BGP
                                         * @description Configuration for BGP-specific policy match criteria.
                                         */
                                        bgp?: {
                                            /**
                                             * BGP Community
                                             * @description Match conditions for BGP communities.
                                             */
                                            communitySet?: string;
                                            /**
                                             * EVPN Route Type
                                             * @description Match conditions for EVPN route types.
                                             */
                                            evpnRouteType?: number[];
                                        };
                                        /**
                                         * Family
                                         * @description Address families that the route belongs to.
                                         */
                                        family?: string[];
                                        /**
                                         * Prefix Set
                                         * @description Reference to a PrefixSet resource.
                                         */
                                        prefixSet?: string;
                                        /**
                                         * Protocol
                                         * @description The route protocol type to match.
                                         * @enum {string}
                                         */
                                        protocol?: "AGGREGATE" | "ARP_ND" | "BGP" | "BGP_EVPN" | "DHCP" | "GRIBI" | "HOST" | "ISIS" | "LOCAL" | "LINUX" | "NDK1" | "NDK2" | "OSPFV2" | "OSPFV3" | "STATIC";
                                    };
                                    /**
                                     * Name
                                     * @description Name of the policy statement.
                                     */
                                    name: string;
                                }[];
                            };
                        }[];
                        /**
                         * Prefix Sets
                         * @description List of PrefixSet [emits=PrefixSet]
                         */
                        prefixSets?: {
                            /**
                             * Prefix Set Name
                             * @description Name of the PrefixSet.
                             */
                            name: string;
                            /**
                             * Prefix Set Spec
                             * @description A PrefixSets
                             */
                            spec?: {
                                /**
                                 * Prefixes
                                 * @description List of IPv4 or IPv6 prefixes in CIDR notation.
                                 */
                                prefix: {
                                    /**
                                     * End Range
                                     * @description The end range when using a range to match prefixes.
                                     */
                                    endRange?: number;
                                    /**
                                     * Exact
                                     * @description Indicates if it is an exact match. Ignores the StartRange and EndRange if this param is set.
                                     */
                                    exact?: boolean;
                                    /**
                                     * Prefix
                                     * Format: ip
                                     * @description The IPv4 or IPv6 prefix in CIDR notation with mask.
                                     */
                                    prefix: string;
                                    /**
                                     * Start Range
                                     * @description If specifying a range, this is the start of the range.
                                     */
                                    startRange?: number;
                                }[];
                            };
                        }[];
                    };
                    /**
                     * Static Routes
                     * @description List of Static Routes within this VirtualNetwork. [emits=StaticRoute]
                     */
                    staticRoutes?: {
                        /**
                         * Static Route Name
                         * @description Name of the StaticRoute.
                         */
                        name: string;
                        /**
                         * Static Route Spec
                         * @description A StaticRoutes
                         */
                        spec?: {
                            /**
                             * Nexthop Group
                             * @description Group of nexthops for the list of prefixes.
                             */
                            nexthopGroup: {
                                /**
                                 * BFD
                                 * @description Enables BFD to the next-hops in the group. Local and Remote discriminator parameters have been deprecated at this level. Use Nexthop to set these parameters.
                                 */
                                bfd?: {
                                    /**
                                     * Enabled
                                     * @description Defines whether BFD should be enabled towards the nexthops.
                                     * @default false
                                     */
                                    enabled: boolean;
                                    /**
                                     * Local Address
                                     * @description Defines the local address to use when establishing the BFD session with the nexthop.
                                     */
                                    localAddress?: string;
                                    /**
                                     * Local Discriminator
                                     * @description Defines the local discriminator.
                                     */
                                    localDiscriminator?: number;
                                    /**
                                     * Remote Discriminator
                                     * @description Defines the remote discriminator.
                                     */
                                    remoteDiscriminator?: number;
                                };
                                /**
                                 * Blackhole
                                 * @description If set to true all traffic destined to the prefixes will be blackholed.  If enabled, next-hops are ignored and this takes precedence.
                                 * @default false
                                 */
                                blackhole: boolean;
                                /**
                                 * Nexthops
                                 * @description Ordered list of nexthops.
                                 */
                                nexthops?: {
                                    /**
                                     * BFD
                                     * @description Enables BFD to the next-hops in the group. This overrides the configuration at the group.
                                     */
                                    bfd?: {
                                        /**
                                         * Enabled
                                         * @description Defines whether BFD should be enabled towards the nexthops.
                                         * @default false
                                         */
                                        enabled: boolean;
                                        /**
                                         * Local Address
                                         * @description Defines the local address to use when establishing the BFD session with the nexthop.
                                         */
                                        localAddress?: string;
                                        /**
                                         * Local Discriminator
                                         * @description Defines the local discriminator.
                                         */
                                        localDiscriminator?: number;
                                        /**
                                         * Remote Discriminator
                                         * @description Defines the remote discriminator.
                                         */
                                        remoteDiscriminator?: number;
                                    };
                                    /**
                                     * IP Prefix
                                     * Format: ip
                                     * @description Address to use.
                                     */
                                    ipPrefix: string;
                                    /**
                                     * Resolve
                                     * @description If set to true the next-hops can be destinations which are resolved in the route table. This overrides the configuration at the group.
                                     * @default false
                                     */
                                    resolve: boolean;
                                }[];
                                /**
                                 * Resolve
                                 * @description If set to true the next-hops can be destinations which are resolved in the route table.
                                 * @default false
                                 */
                                resolve: boolean;
                            };
                            /**
                             * Nodes
                             * @description List of nodes on which to configure the static routes. An AND operation is executed against the nodes in this list and the nodes on which the Router is configured to determine the Nodes on which to configure the static routes.
                             */
                            nodes?: string[];
                            /**
                             * Preference
                             * @description Defines the route preference.
                             */
                            preference?: number;
                            /**
                             * Prefixes
                             * @description List of destination prefixes and mask to use for the static routes.
                             */
                            prefixes: string[];
                            /**
                             * Router
                             * @description Reference to a Router on which to configure the static routes.  If no Nodes are provided then the static routes will be provisioned on all Nodes on which the Router is provisioned.
                             */
                            router: string;
                        };
                    }[];
                };
                /**
                 * Routed Interfaces
                 * @description List of RoutedInterface. [emits=RoutedInterface]
                 */
                routedInterfaces?: {
                    /**
                     * Routed Interface Name
                     * @description The name of the RoutedInterface.
                     */
                    name: string;
                    /**
                     * Routed Interface Spec
                     * @description Specification of the RoutedInterface
                     */
                    spec: {
                        /**
                         * ARP Timeout
                         * Format: int32
                         * @description Duration of time that dynamic ARP entries remain in the ARP cache before they expire.
                         * @default 14400
                         */
                        arpTimeout: number;
                        /**
                         * BFD Configuration
                         * @description Enables BFD on the RoutedInterface.
                         */
                        bfd?: {
                            /**
                             * Transmit Interval
                             * @description The minimum interval in microseconds between transmission of BFD control packets.
                             * @default 1000000
                             */
                            desiredMinTransmitInt: number;
                            /**
                             * Multiplier
                             * @description The number of packets that must be missed to declare this session as down.
                             * @default 3
                             */
                            detectionMultiplier: number;
                            /**
                             * Enabled
                             * @description Enables Biforward Detection.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * Minimum Echo Receive Interval
                             * @description The minimum interval between echo packets the local node can receive.
                             * @default 1000000
                             */
                            minEchoReceiveInterval: number;
                            /**
                             * Receive Interval
                             * @description The minimum interval in microseconds between received BFD control packets that this system should support.
                             * @default 1000000
                             */
                            requiredMinReceive: number;
                        };
                        /**
                         * Description
                         * @description The description of the RoutedInterface.
                         */
                        description?: string;
                        /**
                         * Egress Actions
                         * @description Manages actions on traffic at Egress.
                         */
                        egress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at egress.
                             */
                            filters?: string[];
                            /**
                             * QoS Egress Policy
                             * @description List of QoS Egress policy references to use at egress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * Ingress Actions
                         * @description Manages actions on traffic at Ingress.
                         */
                        ingress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at ingress.
                             */
                            filters?: string[];
                            /**
                             * QoS Ingress Policy
                             * @description List of QoS Ingress policy references to use at ingress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * Interface
                         * @description Reference to an Interface to use for attachment.
                         */
                        interface: string;
                        /**
                         * IP MTU
                         * @description IP MTU for the RoutedInterface.
                         * @default 1500
                         */
                        ipMTU: number;
                        /**
                         * IPv4 Addresses
                         * @description List of IPv4 addresses in IP/mask form, e.g., 192.168.0.1/24.
                         */
                        ipv4Addresses?: {
                            /**
                             * IP Prefix
                             * @description Address and mask to use
                             */
                            ipPrefix: string;
                            /**
                             * Primary
                             * @description Indicates which address to use as primary for broadcast
                             */
                            primary?: boolean;
                        }[];
                        /**
                         * IPv6 Addresses
                         * @description List of IPv6 addresses in IP/mask form, e.g., fc00::1/120.
                         */
                        ipv6Addresses?: {
                            /**
                             * IP Prefix
                             * @description Address and mask to use
                             */
                            ipPrefix: string;
                            /**
                             * Primary
                             * @description Indicates which address to use as primary for broadcast
                             */
                            primary?: boolean;
                        }[];
                        /** IPv6 Router Advertisement */
                        ipv6RouterAdvertisement?: {
                            /**
                             * Current Hop Limit
                             * Format: int32
                             * @description The current hop limit to advertise in the router advertisement messages.
                             * @default 64
                             */
                            currentHopLimit: number;
                            /**
                             * Enable Router Advertisements
                             * @description Enable or disable IPv6 router advertisements.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * IP MTU
                             * Format: int32
                             * @description The IP MTU to advertise in the router advertisement messages.
                             */
                            ipMTU?: number;
                            /**
                             * Managed Configuration Flag
                             * @description Enable DHCPv6 for address configuration (M-bit).
                             * @default false
                             */
                            managedConfigurationFlag: boolean;
                            /**
                             * Maximum Advertisement Interval
                             * Format: int32
                             * @description Maximum time between router advertisements (in seconds).
                             * @default 600
                             */
                            maxAdvertisementInterval: number;
                            /**
                             * Minimum Advertisement Interval
                             * Format: int32
                             * @description Minimum time between router advertisements (in seconds).
                             * @default 200
                             */
                            minAdvertisementInterval: number;
                            /**
                             * Other Configuration Flag
                             * @description Enable DHCPv6 for other configuration (O-bit).
                             * @default false
                             */
                            otherConfigurationFlag: boolean;
                            /**
                             * Prefixes
                             * @description IPv6 prefixes to advertise in router advertisements.
                             */
                            prefixes?: {
                                /**
                                 * Autonomous Flag
                                 * @description When this is set in the prefix information option hosts can use the prefix for stateless address autoconfiguration (SLAAC).
                                 * @default true
                                 */
                                autonomousFlag: boolean;
                                /**
                                 * On-Link Flag
                                 * @description When this is set in the prefix information option hosts can use the prefix for on-link determination.
                                 * @default true
                                 */
                                onLinkFlag: boolean;
                                /**
                                 * Preferred Lifetime
                                 * Format: int32
                                 * @description The length of time in seconds (relative to the time the packet is sent) that addresses generated from the prefix via stateless address autoconfiguration remain preferred.
                                 * @default 604800
                                 */
                                preferredLifetime: number;
                                /**
                                 * IPv6 Prefix
                                 * @description An IPv6 global unicast address prefix.
                                 */
                                prefix: string;
                                /**
                                 * Valid Lifetime
                                 * Format: int32
                                 * @description The length of time in seconds (relative to the time the packet is sent) that the prefix is valid for the purpose of on-link determination.
                                 * @default 2592000
                                 */
                                validLifetime: number;
                            }[];
                            /**
                             * Reachable Time
                             * Format: int32
                             * @description Time in milliseconds for Neighbor Unreachability Detection.
                             * @default 0
                             */
                            reachableTime: number;
                            /**
                             * Retransmit Time
                             * Format: int32
                             * @description Time in milliseconds between retransmitted NS messages.
                             * @default 0
                             */
                            retransmitTime: number;
                            /**
                             * Router Lifetime
                             * Format: int32
                             * @description Router lifetime in seconds for default gateway.
                             * @default 1800
                             */
                            routerLifetime: number;
                        };
                        /**
                         * L3 Proxy ARP/ND
                         * @description L3 Proxy ARP and ND configuration.
                         */
                        l3ProxyARPND?: {
                            /**
                             * Proxy ARP Enabled
                             * @description Select whether Proxy ARP should be enabled.
                             * @default false
                             */
                            proxyARP: boolean;
                            /**
                             * Proxy ND Enabled
                             * @description Select whether Proxy ND should be enabled.
                             * @default false
                             */
                            proxyND: boolean;
                        };
                        /**
                         * Learn Unsolicited ARPs
                         * @description Enable or disable learning of unsolicited ARPs.
                         * @default NONE
                         * @enum {string}
                         */
                        learnUnsolicited: "BOTH" | "GLOBAL" | "LINK-LOCAL" | "NONE";
                        /**
                         * Router
                         * @description Reference to a Router.
                         */
                        router: string;
                        /**
                         * Unnumbered
                         * @description Enables the use of unnumbered interfaces on the IRBInterface.  If IPv6 is specified, no IP address are configured on the sub-interface and only the link local address will be used.  If any IP addresses are specified for either IPv4 or IPv6 that will take precedence and IPs will be assigned to the interfaces. (Deprecated, Use IPv6RouterAdvertisement)
                         * @enum {string}
                         */
                        unnumbered?: "IPV6";
                        /**
                         * VLAN ID
                         * @description Single value between 1-4094 support, ranges supported in the format x-y,x-y, or the special keyword null, any, untagged or pool for auto allocation.
                         * @default pool
                         */
                        vlanID: string;
                        /**
                         * VLAN Pool
                         * @description Reference to a VLAN pool to use for allocations.
                         * @default vlan-pool
                         */
                        vlanPool: string;
                    };
                }[];
                /**
                 * Routers
                 * @description List of Routers.[emits=Router]
                 */
                routers?: {
                    /**
                     * Router Name
                     * @description The name of the Router.
                     */
                    name: string;
                    /**
                     * Router Spec
                     * @description Specification of the Router
                     */
                    spec: {
                        /**
                         * BGP Configuration
                         * @description BGP configuration.
                         */
                        bgp?: {
                            /**
                             * Autonomous System
                             * @description Autonomous System number for BGP.
                             */
                            autonomousSystem?: number;
                            /**
                             * eBGP Preference
                             * @description Preference to be set for eBGP [default=170].
                             * @default 170
                             */
                            ebgpPreference: number;
                            /**
                             * Enable BGP
                             * @description Enable or disable BGP.
                             * @default false
                             */
                            enabled: boolean;
                            /**
                             * iBGP Preference
                             * @description Preference to be set for iBGP [default=170].
                             * @default 170
                             */
                            ibgpPreference: number;
                            /**
                             * IP Alias Nexthops
                             * @description IP aliasing configuration.
                             */
                            ipAliasNexthops?: {
                                /**
                                 * ESI
                                 * @description 10 byte Ethernet Segment Identifier, if not set a type 0 ESI is generated.
                                 * @default auto
                                 */
                                esi: string;
                                /**
                                 * IP Alias Address
                                 * Format: ip
                                 * @description The nexthop IP address to track for the IP alias.
                                 */
                                nextHop: string;
                                /**
                                 * Preferred Active Node
                                 * @description When not set the ES is used in an all active mode. This references the ToppNode object and when set, the DF algorithm is configured to type preference and the selected Node is set with a higher preference value. All other Nodes have a lower value configured.
                                 */
                                preferredActiveNode?: string;
                            }[];
                            /**
                             * IPv4 Unicast
                             * @description Parameters relating to the IPv4 unicast AFI/SAFI.
                             */
                            ipv4Unicast?: {
                                /**
                                 * Advertise IPv6 Next Hops
                                 * @description Enables advertisement of IPv4 Unicast routes with IPv6 next-hops to peers.
                                 */
                                advertiseIPV6NextHops?: boolean;
                                /**
                                 * Enabled
                                 * @description Enables the IPv4 unicast AFISAFI.
                                 * @default false
                                 */
                                enabled: boolean;
                                /**
                                 * Multipath
                                 * @description Enable multipath.
                                 */
                                multipath?: {
                                    /**
                                     * Allow Multiple Autonomous Systems Per Path
                                     * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                                     * @default true
                                     */
                                    allowMultipleAS: boolean;
                                    /**
                                     * Maximum Number of Paths
                                     * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                                     */
                                    maxAllowedPaths: number;
                                };
                                /**
                                 * Receive IPv6 Next Hops
                                 * @description Enables the advertisement of the RFC 5549 capability to receive IPv4 routes with IPv6 next-hops.
                                 */
                                receiveIPV6NextHops?: boolean;
                            };
                            /**
                             * IPv6 Unicast
                             * @description Parameters relating to the IPv6 unicast AFI/SAFI.
                             */
                            ipv6Unicast?: {
                                /**
                                 * Enabled
                                 * @description Enables the IPv6 unicast AFISAFI
                                 * @default false
                                 */
                                enabled: boolean;
                                /**
                                 * Multipath
                                 * @description Enable multipath
                                 */
                                multipath?: {
                                    /**
                                     * Allow Multiple Autonomous Systems Per Path
                                     * @description When set to true, BGP is allowed to build a multipath set using BGP routes with different neighbor AS (most recent AS in the AS_PATH), When set to false, BGP is only allowed to use non-best paths for ECMP if they meet the multipath criteria and they have the same neighbor AS as the best path.
                                     * @default true
                                     */
                                    allowMultipleAS: boolean;
                                    /**
                                     * Maximum Number of Paths
                                     * @description The maximum number of BGP ECMP next-hops for BGP routes with an NLRI belonging to the address family of this configuration context.
                                     */
                                    maxAllowedPaths: number;
                                };
                            };
                            /**
                             * Keychain
                             * @description Keychain to be used for authentication
                             */
                            keychain?: string;
                            /**
                             * Min Wait To Advertise Time
                             * @description Minimum wait time before advertising routes post BGP restart.
                             * @default 0
                             */
                            minWaitToAdvertise: number;
                            /**
                             * Enable Rapid Withdrawal
                             * @description Enable rapid withdrawal in BGP.
                             * @default true
                             */
                            rapidWithdrawl: boolean;
                            /**
                             * Wait for FIB Installation
                             * @description Wait for FIB installation before advertising routes.
                             * @default false
                             */
                            waitForFIBInstall: boolean;
                        };
                        /**
                         * Description
                         * @description The description of the Router.
                         */
                        description?: string;
                        /**
                         * EVI
                         * @description EVI for the Router; leave blank for auto-allocation from EVI pool.
                         */
                        evi?: number;
                        /**
                         * EVI Allocation Pool
                         * @description Reference to EVI pool for auto-allocation.
                         * @default evi-pool
                         */
                        eviPool: string;
                        /**
                         * Export Target
                         * @description Export route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                         */
                        exportTarget?: string;
                        /**
                         * Import Target
                         * @description Import route target in 'target:N:N' format, if not specified, the default value taken as "target:1:<evi>".
                         */
                        importTarget?: string;
                        /**
                         * Prefix
                         * Format: ip
                         * @description IPv4 or IPv6 prefix. Active routes in the FIB that exactly match this prefix or that are longer matches of this prefix are provided with resilient-hash programming.
                         */
                        ipLoadBalancing?: {
                            /**
                             * Prefix
                             * Format: ip
                             * @description IPv4 or IPv6 prefix. Active routes in the FIB that exactly match this prefix or that are longer matches of this prefix are provided with resilient-hash programming.
                             */
                            prefix?: {
                                /**
                                 * Max Paths
                                 * Format: number
                                 * @description The number of times each next-hop is repeated in the fill pattern if there are max-paths ECMP next-hops.
                                 * @default 1
                                 */
                                hashBucketsPerPath: number;
                                /**
                                 * Max ECMP
                                 * Format: number
                                 * @description The maximum number of ECMP next-hops per route associated with the resilient-hash prefix.
                                 * @default 1
                                 */
                                maxECMP: number;
                                /**
                                 * Prefix
                                 * Format: ip
                                 * @description IPv4 or IPv6 prefix. Active routes in the FIB that exactly match this prefix or that are longer matches of this prefix are provided with resilient-hash programming.
                                 */
                                prefix: string;
                            }[];
                        };
                        /**
                         * Node Selector
                         * Format: labelselector
                         * @description Node selectors for deployment constraints.  If Nodes are selected, the Router will only be deployed on the Nodes selected, if left blank it will be deployed on all Nodes for which there are IRB or RoutedInterfaces referencing this Router.
                         */
                        nodeSelector?: string[];
                        /**
                         * Route Leaking
                         * @description Route leaking controlled by routing policies in and out of the DefaultRouter.
                         */
                        routeLeaking?: {
                            /**
                             * Export Policy
                             * @description Reference to a Policy resource to use when evaluating route exports from the DefaultRouter.
                             */
                            exportPolicy?: string;
                            /**
                             * Import Policy
                             * @description Reference to a Policy resource to use when evaluating route imports into the DefaultRouter.
                             */
                            importPolicy?: string;
                        };
                        /**
                         * Router ID
                         * @description Router ID.
                         */
                        routerID?: string;
                        /**
                         * Tunnel Index Pool
                         * @description Reference to tunnel index allocation pool.
                         * @default tunnel-index-pool
                         */
                        tunnelIndexPool: string;
                        /**
                         * Type
                         * @description Select the type of Router.  Simple doesn't include any overlay control plane or dataplane properties (EVPN/VXLAN). EVPNVXLAN includes the properties needed to provision this Router over an IP Fabric.
                         * @default EVPNVXLAN
                         * @enum {string}
                         */
                        type: "SIMPLE" | "EVPNVXLAN";
                        /**
                         * VNI
                         * @description VNI for the Router; leave blank for auto-allocation from VNI pool.
                         */
                        vni?: number;
                        /**
                         * VNI Allocation Pool
                         * @description Reference to VNI pool for auto-allocation.
                         * @default vni-pool
                         */
                        vniPool: string;
                    };
                }[];
                /**
                 * VLAN
                 * @description List of VLANs. [emits=VLAN]
                 */
                vlans?: {
                    /**
                     * VLAN Name
                     * @description The name of the VLAN.
                     */
                    name: string;
                    /**
                     * VLAN Spec
                     * @description Specification of the Vlan
                     */
                    spec: {
                        /**
                         * Bridge Domain
                         * @description Reference to a BridgeDomain or SimpleBridgeDomain.
                         */
                        bridgeDomain: string;
                        /**
                         * Description
                         * @description The description of the VLAN.
                         */
                        description?: string;
                        /**
                         * Egress
                         * @description Manages actions on traffic at Egress.
                         */
                        egress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at egress.
                             */
                            filters?: string[];
                            /**
                             * QoS Egress Policy
                             * @description List of QoS Egress policy references to use at egress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * Ingress
                         * @description Manages actions on traffic at Ingress.
                         */
                        ingress?: {
                            /**
                             * Filters
                             * @description List of Filter references to use at ingress.
                             */
                            filters?: string[];
                            /**
                             * QoS Ingress Policy
                             * @description List of QoS Ingress policy references to use at ingress.
                             */
                            qosPolicy?: string[];
                        };
                        /**
                         * Interface Selector
                         * Format: labelselector
                         * @description Interfaces to use for attachment to this VLAN based on the label selector.  Selects Interfaces based on their associated labels.
                         */
                        interfaceSelector: string[];
                        /**
                         * L2 MTU
                         * @description L2 MTU specifies the maximum sized Ethernet frame that can be transmitted on the subinterface. If a frame exceeds this size it is discarded. If the l2-mtu of the subinterface exceeds the port-mtu of the associated interface, the subinterface will remain operationally down.
                         */
                        l2MTU?: number;
                        /**
                         * MAC Duplication Detection Action
                         * @description If Mac Duplication Detection is enabled on the associated Bridge Domain, this property will override the MDD action set in the BridgeDomain.
                         * @enum {string}
                         */
                        macDuplicationDetectionAction?: "Blackhole" | "OperDown" | "StopLearning" | "UseBridgeDomainAction";
                        /**
                         * Split Horizon Group
                         * @description Name of the Split Horizon Group to be used for this VLAN.  All subinterfaces within this VLAN will be members of this Split Horizon Group.
                         */
                        splitHorizonGroup?: string;
                        /**
                         * Uplink
                         * @description The Uplink between your access breakout switch and your leaf switch.
                         */
                        uplink?: {
                            /**
                             * Egress
                             * @description Manages actions on traffic at Egress of the Local enpoint of the Uplink.
                             */
                            egress?: {
                                /**
                                 * Filters
                                 * @description List of Filter references to use at egress.
                                 */
                                filters?: string[];
                                /**
                                 * QoS Egress Policy
                                 * @description List of QoS Egress policy references to use at egress.
                                 */
                                qosPolicy?: string[];
                            };
                            /**
                             * Ingress
                             * @description Manages actions on traffic at Ingress of the Local enpoint of the Uplink.
                             */
                            ingress?: {
                                /**
                                 * Filters
                                 * @description List of Filter references to use at ingress.
                                 */
                                filters?: string[];
                                /**
                                 * QoS Ingress Policy
                                 * @description List of QoS Ingress policy references to use at ingress.
                                 */
                                qosPolicy?: string[];
                            };
                            /**
                             * Uplink Selector
                             * Format: labelselector
                             * @description Selects TopoLinks which connect a leaf switch to a breakout switch. This is the uplink between your access breakout switch and your leaf switch.  There can only be a single TopoLink between the access breakout switch and the leaf switch, if more than one TopoLink is present between two devices the transaction will fail.
                             */
                            uplinkSelector?: string[];
                            /**
                             * Uplink VLAN ID
                             * @description The VLAN ID to be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                             * @default pool
                             */
                            uplinkVLANID: string;
                            /**
                             * Uplink VLAN Pool
                             * @description A VLAN from this pool will be utilized to isolate traffic from the VLAN on the access breakout switch to the leaf switch on the selected uplink TopoLink.
                             */
                            uplinkVLANPool?: string;
                        };
                        /**
                         * VLAN ID
                         * @description Single value between 1-4094 support, ranges supported in the format x-y,x-y, or the special keyword null, any, untagged or pool for auto allocation.
                         * @default pool
                         */
                        vlanID: string;
                        /**
                         * VLAN Pool
                         * @description Reference to a VLAN pool to use for allocations. [default="vlan-pool"]
                         */
                        vlanPool?: string;
                    };
                }[];
            };
            /** Status */
            readonly status?: {
                /**
                 * Health
                 * @description Indicates the health score of the VNET.
                 */
                health?: number;
                /**
                 * Health Score Reason
                 * @description Indicates the reason for the health score.
                 */
                healthScoreReason?: string;
                /**
                 * Last Change
                 * Format: date
                 * @description The time when the state of the resource last changed.
                 */
                lastChange?: string;
                /**
                 * Nodes
                 * @description List of Nodes on which the Router is deployed.
                 */
                nodes?: string[];
                /**
                 * Number of BGP Peers
                 * @description Total number of configured BGP Peers.
                 */
                numBGPPeers?: number;
                /**
                 * Number of BGP Peers Oper Down
                 * @description Total Number of BGP Peer operationally down.
                 */
                numBGPPeersOperDown?: number;
                /**
                 * Number of IRB Interfaces
                 * Format: int32
                 * @description Total number of irb-interfaces configured by the VNET.
                 */
                numIRBInterfaces?: number;
                /**
                 * Number of IRB Interfaces Oper Down
                 * Format: int32
                 * @description Total number of irb-interfaces configured by the VNET which are oper-down.
                 */
                numIRBInterfacesOperDown?: number;
                /**
                 * Number of Nodes
                 * @description Total number of Nodes on which the VNET is configured.
                 */
                numNodes?: number;
                /**
                 * Number of Routed Interfaces
                 * Format: int32
                 * @description Total number of routed-interfaces configured by the VNET.
                 */
                numRoutedInterfaces?: number;
                /**
                 * Number of Routed Interfaces Oper Down
                 * Format: int32
                 * @description Total number of routed-interfaces configured by the VNET which are oper-down.
                 */
                numRoutedInterfacesOperDown?: number;
                /**
                 * Number of Sub Interfaces
                 * Format: int32
                 * @description Total number of sub-interfaces configured by the VNET.
                 */
                numSubInterfaces?: number;
                /**
                 * Number of Sub Interfaces Oper Down
                 * Format: int32
                 * @description Total number of sub-interfaces configured by the VNET which are oper-down.
                 */
                numSubInterfacesOperDown?: number;
                /**
                 * Operational State
                 * @description Operational state of the VNET.
                 */
                operationalState?: string;
            };
        };
        /** @description VirtualNetworkList is a list of virtualnetworks */
        "com.nokia.eda.services.v1alpha1.VirtualNetworkList": {
            apiVersion: string;
            items?: components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"][];
            kind: string;
        };
        "com.nokia.eda.services.v1alpha1.VirtualNetwork_DeletedResourceEntry": {
            commitTime?: string;
            hash?: string;
            name?: string;
            namespace?: string;
            /** Format: uint64 */
            transactionId?: number;
        };
        "com.nokia.eda.services.v1alpha1.VirtualNetwork_DeletedResources": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork_DeletedResourceEntry"][];
        "com.nokia.eda.services.v1alpha1.VirtualNetwork_metadata": {
            annotations?: {
                [key: string]: string;
            };
            labels?: {
                [key: string]: string;
            };
            name: string;
            namespace: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getVersionServicesEdaNokiaCom: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AppGroup"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getResourcesServicesEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    uiServicesEdaNokiaComV1alpha1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description pathname to the UI specification to retrieve */
                pathname: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UIResult"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Bridgedomains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomainList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Bridgeinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Dhcprelays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Irbinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomainList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomainList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the BridgeDomain to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the BridgeDomain to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeDomain"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceBridgedomains: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the BridgeDomain to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the BridgeInterface to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the BridgeInterface to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.BridgeInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceBridgeinterfaces: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the BridgeInterface to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelayList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the DHCPRelay to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the DHCPRelay to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.DHCPRelay"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceDhcprelays: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the DHCPRelay to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the IRBInterface to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the IRBInterface to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.IRBInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceIrbinterfaces: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the IRBInterface to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the RoutedInterface to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the RoutedInterface to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterface"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceRoutedinterfaces: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the RoutedInterface to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RouterList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RouterList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the Router to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the Router to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.Router"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceRouters: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the Router to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetworkList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetworkList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the VirtualNetwork to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the VirtualNetwork to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetwork"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceVirtualnetworks: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the VirtualNetwork to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLANList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    createServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteAllServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the set of CRs deleted based on CR labels */
                "label-selector"?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLANList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getDeletedServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns list of deleted resource entries */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN_DeletedResources"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    readServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description resource content will be returned as it was at the time of this git hash */
                hash?: string;
            };
            header?: never;
            path: {
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
                /** @description name of the VLAN to retrieve */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    replaceServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    deleteServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description the namespace scope from which to perform the delete */
                namespace: string;
                /** @description name of the VLAN to delete */
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    patchServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                namespace: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Patch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLAN"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    getHistoryServicesEdaNokiaComV1alpha1NamespaceVlans: {
        parameters: {
            query?: {
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
                /** @description maximum number of history entries to return */
                limit?: number;
            };
            header?: never;
            path: {
                /** @description name of the VLAN to retrieve */
                name: string;
                /** @description the namespace scope from which to retrieve the result */
                namespace: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns the change history of the specified resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceHistory"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Routedinterfaces: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RoutedInterfaceList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Routers: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.RouterList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Virtualnetworks: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VirtualNetworkList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    listServicesEdaNokiaComV1alpha1Vlans: {
        parameters: {
            query?: {
                /** @description a label selector string to filter the results based on CR labels */
                "label-selector"?: string;
                /** @description client information for streaming request */
                eventclient?: string;
                /** @description stream information for streaming request */
                stream?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["com.nokia.eda.services.v1alpha1.VLANList"];
                };
            };
            /** @description Details of an error in response to an API REST request. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
