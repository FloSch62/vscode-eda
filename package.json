{
  "name": "vscode-eda",
  "publisher": "eda-labs",
  "displayName": "Event Driven Automation (Nokia)",
  "icon": "resources/eda.png",
  "description": "Manage and monitor EDA (Event Driven Automation by Nokai) resources via the EDA API",
  "author": "EDA Labs",
  "homepage": "https://docs.eda.dev/",
  "version": "0.2.8",
  "engines": {
    "vscode": "^1.100.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/eda-labs/vscode-eda"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "eda",
    "Event Driven Automation",
    "Nokia",
    "EDA API",
    "websocket",
    "automation",
    "event-driven",
    "srlinux",
    "sros"
  ],
  "license": "Apache-2.0",
  "activationEvents": [],
  "main": "./dist/extension",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "edaExplorerViewContainer",
          "title": "EDA Explorer",
          "icon": "resources/eda-icon-black.svg"
        }
      ]
    },
    "views": {
      "edaExplorerViewContainer": [
        {
          "id": "edaNamespaces",
          "name": "Resources"
        },
        {
          "id": "edaAlarms",
          "name": "Alarms"
        },
        {
          "id": "edaDeviations",
          "name": "Deviations"
        },
        {
          "id": "edaTransactions",
          "name": "Transactions"
        }
      ]
    },
    "commands": [
      {
        "command": "vscode-eda.refreshResources",
        "title": "Refresh Resources",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-eda.patchEngineConfig",
        "title": "EDA: Patch Engine Config (Enable ETCD Dumps)",
        "icon": "$(database)"
      },
      {
        "command": "vscode-eda.undoPatchEngineConfig",
        "title": "EDA: Undo Patch Engine Config",
        "icon": "$(database-stop)"
      },
      {
        "command": "vscode-eda.showTransactionDetails",
        "title": "Show Transaction Details"
      },
      {
        "command": "vscode-eda.deletePod",
        "title": "Delete Pod",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-eda.restartDeployment",
        "title": "Restart Deployment",
        "icon": "$(debug-restart)"
      },
      {
        "command": "vscode-eda.terminalPod",
        "title": "Open Terminal to Pod",
        "icon": "$(terminal)"
      },
      {
        "command": "vscode-eda.logsPod",
        "title": "View Pod Logs",
        "icon": "$(list-unordered)"
      },
      {
        "command": "vscode-eda.describePod",
        "title": "Describe Pod",
        "icon": "$(info)"
      },
      {
        "command": "vscode-eda.switchToEditResource",
        "title": "Switch to Edit Mode",
        "icon": "$(edit)"
      },
      {
        "command": "vscode-eda.applyResourceChanges",
        "title": "Apply Resource Changes",
        "icon": "$(check)"
      },
      {
        "command": "vscode-eda.applyResourceChanges.dryRun",
        "title": "Validate (Dry Run)",
        "icon": "$(debug-alt)"
      },
      {
        "command": "vscode-eda.showResourceDiff",
        "title": "Show Resource Changes",
        "icon": "$(diff)"
      },
      {
        "command": "vscode-eda.showCRDDefinition",
        "title": "Show CRD Definition",
        "icon": "$(file)"
      },
      {
        "command": "vscode-eda.filterTree",
        "title": "Filter Tree",
        "icon": "$(filter-filled)"
      },
      {
        "command": "vscode-eda.clearFilter",
        "title": "Clear Filter",
        "icon": "$(filter)"
      },
      {
        "command": "vscode-eda.expandAllNamespaces",
        "title": "Expand All",
        "icon": "$(expand-all)"
      },
      {
        "command": "vscode-eda.deleteResource",
        "title": "Delete Resource",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-eda.showAlarmDetails",
        "title": "Show Alarm Details"
      },
      {
        "command": "vscode-eda.showDeviationDetails",
        "title": "Show Deviation Details"
      },
      {
        "command": "vscode-eda.acceptDeviation",
        "title": "Accept Deviation"
      },
      {
        "command": "vscode-eda.rejectDeviation",
        "title": "Reject Deviation"
      },
      {
        "command": "vscode-eda.acceptDeviation",
        "title": "Accept Deviation",
        "icon": "$(check)"
      },
      {
        "command": "vscode-eda.rejectDeviation",
        "title": "Reject Deviation",
        "icon": "$(x)"
      },
      {
        "command": "vscode-eda.revertTransaction",
        "title": "Revert Transaction",
        "icon": "$(history)"
      },
      {
        "command": "vscode-eda.restoreTransaction",
        "title": "Restore Transaction",
        "icon": "$(debug-step-back)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-eda.patchEngineConfig",
          "when": "true"
        },
        {
          "command": "vscode-eda.undoPatchEngineConfig",
          "when": "true"
        }
      ],
      "view/title": [
        {
          "command": "vscode-eda.filterTree",
          "when": "view == edaNamespaces",
          "group": "navigation@1"
        },
        {
          "command": "vscode-eda.clearFilter",
          "when": "view == edaNamespaces || view == edaSystem",
          "group": "navigation@2"
        },
        {
          "command": "vscode-eda.expandAllNamespaces",
          "when": "view == edaNamespaces",
          "group": "navigation@4"
        },
        {
          "command": "vscode-eda.patchEngineConfig",
          "when": "view == edaNamespaces",
          "group": "management@1"
        },
        {
          "command": "vscode-eda.undoPatchEngineConfig",
          "when": "view == edaNamespaces",
          "group": "management@2"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-eda.logsPod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "inline"
        },
        {
          "command": "vscode-eda.describePod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "inline"
        },
        {
          "command": "vscode-eda.terminalPod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "inline"
        },
        {
          "command": "vscode-eda.deletePod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "inline"
        },
        {
          "command": "vscode-eda.logsPod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.describePod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.terminalPod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.deletePod",
          "when": "viewItem == pod || viewItem == npp-pod",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.viewResource",
          "when": "viewItem =~ /pod|deployment|service|configmap|secret|crd-instance/",
          "group": "inline"
        },
        {
          "command": "vscode-eda.showCRDDefinition",
          "when": "viewItem == crd-instance",
          "group": "inline"
        },
        {
          "command": "vscode-eda.showCRDDefinition",
          "when": "viewItem == crd-instance",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.deleteResource",
          "when": "viewItem == crd-instance",
          "group": "inline"
        },
        {
          "command": "vscode-eda.deleteResource",
          "when": "viewItem == crd-instance",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.restartDeployment",
          "when": "viewItem == k8s-deployment-instance && view == edaNamespaces",
          "group": "inline@5"
        },
        {
          "command": "vscode-eda.restartDeployment",
          "when": "viewItem == k8s-deployment-instance && view == edaNamespaces",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.showAlarmDetails",
          "when": "viewItem == eda-alarm",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.showDeviationDetails",
          "when": "viewItem == eda-deviation",
          "group": "navigation"
        },
        {
          "command": "vscode-eda.acceptDeviation",
          "when": "viewItem == eda-deviation",
          "group": "inline"
        },
        {
          "command": "vscode-eda.rejectDeviation",
          "when": "viewItem == eda-deviation",
          "group": "inline"
        },
        {
          "command": "vscode-eda.revertTransaction",
          "when": "viewItem == transaction",
          "group": "inline"
        },
        {
          "command": "vscode-eda.restoreTransaction",
          "when": "viewItem == transaction",
          "group": "inline"
        }
      ],
      "editor/title": [
        {
          "command": "vscode-eda.applyResourceChanges",
          "when": "resourceScheme == k8s",
          "group": "navigation@1"
        },
        {
          "command": "vscode-eda.showResourceDiff",
          "when": "resourceScheme == k8s",
          "group": "navigation@2"
        },
        {
          "command": "vscode-eda.applyResourceChanges.dryRun",
          "when": "resourceScheme == k8s",
          "group": "navigation@3"
        },
        {
          "command": "vscode-eda.switchToEditResource",
          "when": "resourceScheme == k8s-view",
          "group": "navigation@4"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-eda.switchToEditResource",
          "when": "resourceScheme == k8s-view",
          "group": "1_modification@1"
        }
      ]
    },
    "configuration": {
      "title": "EDA Explorer",
      "properties": {
        "vscode-eda.logLevel": {
          "type": "number",
          "default": 1,
          "enum": [
            0,
            1,
            2,
            3
          ],
          "enumDescriptions": [
            "Debug: Show all logs including detailed operations",
            "Info: Show general information (default)",
            "Warning: Show only warnings and errors",
            "Error: Show only errors"
          ],
          "description": "Controls the level of detail in the EDA output logs"
        },
        "vscode-eda.edaUrl": {
          "type": "string",
          "default": "https://eda-api",
          "description": "Base URL of the EDA API server"
        },
        "vscode-eda.edaUsername": {
          "type": "string",
          "default": "admin",
          "description": "Username for the EDA realm"
        },
        "vscode-eda.edaPassword": {
          "type": "string",
          "default": "admin",
          "description": "Password for the EDA realm"
        },
        "vscode-eda.kcUsername": {
          "type": "string",
          "default": "admin",
          "description": "Keycloak admin username"
        },
        "vscode-eda.kcPassword": {
          "type": "string",
          "default": "admin",
          "description": "Keycloak admin password"
        },
        "vscode-eda.clientId": {
          "type": "string",
          "default": "eda",
          "description": "Keycloak client ID for EDA"
        },
        "vscode-eda.clientSecret": {
          "type": "string",
          "default": "",
          "description": "Client secret for the EDA client (optional)"
        },
        "vscode-eda.skipTlsVerify": {
          "type": "boolean",
          "default": false,
          "description": "Skip TLS certificate verification when connecting to the EDA API"
        }
      }
    },
    "keybindings": [
      {
        "command": "vscode-eda.filterTree",
        "key": "alt+shift+f"
      }
    ]
  },
  "scripts": {
    "compile": "npm run check-types && webpack --mode production",
    "watch": "webpack --mode development --watch --info-verbosity verbose",
    "check-types": "tsc --noEmit",
    "lint": "eslint --ext .ts,.tsx .",
    "lint:fix": "npm run lint -- --fix",
    "test": "mocha -r ts-node/register -r ./test/setup.ts test/**/*.test.ts",
    "stream:namespaces": "ts-node namespace-stream.ts"
  },
  "devDependencies": {
    "@types/chai": "^5.2.2",
    "@types/js-yaml": "^4.0.9",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.15.21",
    "@types/vscode": "^1.100.0",
    "@types/ws": "^8.18.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "bufferutil": "^4.0.9",
    "chai": "^5.2.0",
    "chai-as-promised": "^8.0.1",
    "chai-http": "^5.1.2",
    "eslint": "^9.27.0",
    "file-loader": "^6.2.0",
    "handlebars-loader": "^1.7.3",
    "jest-mock-vscode": "^4.4.0",
    "mocha": "^11.5.0",
    "mochawesome": "^7.1.3",
    "prettier": "~2.8.7",
    "sinon": "^20.0.0",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.32.1",
    "utf-8-validate": "^6.0.5",
    "webpack": "^5.99.7"
  },
  "dependencies": {
    "@types/sinon": "^17.0.4",
    "@types/sinon-chai": "^4.0.0",
    "@vscode/vsce": "^3.4.2",
    "handlebars": "^4.7.8",
    "js-yaml": "^4.1.0",
    "openapi-typescript": "^7.8.0",
    "undici": "^7.10.0",
    "undici-types": "^7.10.0",
    "webpack-cli": "^6.0.1",
    "ws": "^8.18.2"
  }
}
